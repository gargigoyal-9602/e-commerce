{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// @ts-nocheck\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport StorageProvider from '../../../framework/src/StorageProvider';\n// Customizable Area Start\n// Customizable Area End\nexport var configJSON = require(\"./config\");\n\nvar FilteroptionsController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(FilteroptionsController, _BlockComponent);\n\n  var _super = _createSuper(FilteroptionsController);\n\n  function FilteroptionsController(props) {\n    var _this;\n\n    _classCallCheck(this, FilteroptionsController);\n\n    _this = _super.call(this, props);\n    _this._rangeSlider = void 0;\n    _this.getCategoryApiCallId = void 0;\n    _this.getBrandApiCallId = void 0;\n    _this.applyAllApiCallId = void 0;\n    _this.getTagsApiCallId = void 0;\n    _this._unsubscribe = void 0;\n\n    _this.resizeWindow = function () {\n      _this.setState({\n        screebSize: window.innerWidth\n      });\n    };\n\n    _this.handleBackButtonClick = function () {\n      _this.props.navigation.goBack();\n\n      return true;\n    };\n\n    _this.getToken = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var token, params, filterData, filterBrands, filterTags, filterCategories, filterSubCategories, lastCategoryValue, filterDiscountedItems, filterLowRange, filterHighRange, filterMax, filterMin;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return StorageProvider.get(\"Userdata\");\n\n            case 2:\n              token = _context.sent;\n              params = _this.props.navigation.state.params;\n\n              _this.setState({\n                token: token\n              });\n\n              filterData = params ? params.filterData : []; // const { filterBrands, filterTags, filterCategories, filterSubCategories, lastCategoryValue, filterDiscountedItems, filterLowRange, filterHighRange } = filterData;\n\n              if (filterData.length === 0) {\n                //*> When Filter Data is empty\n                if (params && params.isFromExplore) {\n                  if (params && params.isFromSubcategory) {\n                    _this.getBrandList(token);\n\n                    _this.setState({\n                      searchedCategoryFilterList: params.categoryData.attributes.sub_categories,\n                      categoryFilterList: params.categoryData.attributes.sub_categories,\n                      subCategory: true\n                    });\n                  } else {\n                    _this.getListRequest(token);\n\n                    _this.getBrandList(token);\n\n                    _this.getTagsList(token);\n                  }\n                } else {\n                  _this.getListRequest(token);\n\n                  _this.getBrandList(token);\n\n                  _this.getTagsList(token); // this.setState({rangeLow:params.MinPrice,rangeHigh:params.MaxPrice})\n\n                }\n              } else {\n                filterBrands = filterData.filterBrands, filterTags = filterData.filterTags, filterCategories = filterData.filterCategories, filterSubCategories = filterData.filterSubCategories, lastCategoryValue = filterData.lastCategoryValue, filterDiscountedItems = filterData.filterDiscountedItems, filterLowRange = filterData.filterLowRange, filterHighRange = filterData.filterHighRange, filterMax = filterData.filterMax, filterMin = filterData.filterMin;\n\n                _this.setState({\n                  rangeLow: filterLowRange,\n                  rangeHigh: filterHighRange\n                }); // this._rangeSlider.setLowValue(filterLowRange);\n                // this._rangeSlider.setHighValue(filterHighRange);\n\n\n                if (_this.props.navigation.state.params && _this.props.navigation.state.params.isFromExplore) {\n                  // if(filterSubCategories.length === 0 || lastCategoryValue !==  this.props.navigation.state.params.categoryID)\n                  // this.getSubCategoryList();\n                  if (params && params.isFromSubcategory) {\n                    _this.setState({\n                      //*> When Filter Data is not empty\n                      categoryFilterList: filterSubCategories,\n                      brandsFilterList: filterBrands,\n                      searchedCategoryFilterList: filterSubCategories,\n                      rangeLow: filterLowRange,\n                      rangeHigh: filterHighRange,\n                      rangeMax: filterMax,\n                      rangeMin: filterMin,\n                      subCategory: true\n                    });\n                  } else {\n                    _this.setState({\n                      //*> When Filter Data is not empty\n                      categoryFilterList: filterSubCategories,\n                      brandsFilterList: filterBrands,\n                      searchedCategoryFilterList: filterSubCategories,\n                      rangeLow: filterLowRange,\n                      rangeHigh: filterHighRange,\n                      rangeMax: filterMax,\n                      rangeMin: filterMin,\n                      subCategory: false\n                    });\n                  }\n                } else {\n                  _this.setState({\n                    //*> When Filter Data is not empty\n                    categoryFilterList: filterCategories,\n                    brandsFilterList: filterBrands,\n                    searchedCategoryFilterList: filterCategories,\n                    rangeLow: filterLowRange,\n                    rangeHigh: filterHighRange,\n                    rangeMax: filterMax,\n                    rangeMin: filterMin\n                  });\n                }\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.ytmbFilter = function () {\n      console.log(\"You Filter\");\n\n      _this.setState({\n        YtMbFilter: !_this.state.YtMbFilter\n      });\n    };\n\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this)); // Customizable Area Start\n\n    _this.subScribedMessages = [getName(MessageEnum.AccoutLoginSuccess), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.SessionSaveMessage), getName(MessageEnum.SessionResponseMessage)];\n    _this.state = {\n      enableField: false,\n      outOfStock: false,\n      pricerange: true,\n      brand: false,\n      category: false,\n      tag: false,\n      checkedStock: false,\n      checkedDiscounted: false,\n      rangeLow: 0,\n      rangeHigh: 2000,\n      rangeMin: 0,\n      rangeMax: 2000,\n      value: 10,\n      token: \"\",\n      data: [],\n      checkedBrand: null,\n      checkedCategory: false,\n      checkedTag: false,\n      brandsFilterList: [],\n      BrandList: [],\n      selectedItems: [],\n      selectedCategory: [],\n      scrollEnabled: false,\n      priceMin: 0,\n      priceMax: 0,\n      price: [],\n      searchedCategoryFilterList: [],\n      categoryFilterList: [],\n      searchText: \"\",\n      catHolder: [],\n      customErrorModal: false,\n      customErrorMessage: \"\",\n      isFetching: false,\n      subCategory: false,\n      tags: false,\n      tagsList: null,\n      filterBrand: [],\n      YtMbFilter: false,\n      screenSize: \"\"\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(FilteroptionsController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.resizeWindow);\n    }\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var apiRequestCallId, responseJson, errorReponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Customizable Area Start\n                if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n                  apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (responseJson && responseJson.data) {\n                    if (apiRequestCallId === this.getTagsApiCallId) {\n                      // alert(JSON.stringify(responseJson.data.faqs))\n                      runEngine.debugLog(\"api response--------getTagsApiCallId\", responseJson.data); // let array = responseJson.data;\n\n                      this.setState({\n                        tagsList: responseJson.data,\n                        isFetching: false // tags: true\n\n                      }); // this.setState({productList:array})\n                    }\n                  }\n\n                  if (responseJson === null || responseJson === void 0 ? void 0 : responseJson.error) {\n                    this.setState({\n                      isFetching: false\n                    });\n                  }\n\n                  if (errorReponse) {\n                    this.setState({\n                      isFetching: false\n                    });\n                    this.parseApiCatchErrorResponse(errorReponse);\n                  }\n                } // Customizable Area End\n\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }() // ytmbFilterClose = () => {\n    //   console.log(\"You close Filter\");\n    //   this.setState({\n    //     YtMbFilter: false\n    //   })\n    // }\n\n  }]);\n\n  return FilteroptionsController;\n}(BlockComponent);\n\nexport { FilteroptionsController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/filteritems/src/FilteroptionsController.web.tsx"],"names":["BlockComponent","MessageEnum","getName","runEngine","StorageProvider","configJSON","require","FilteroptionsController","props","_rangeSlider","getCategoryApiCallId","getBrandApiCallId","applyAllApiCallId","getTagsApiCallId","_unsubscribe","resizeWindow","setState","screebSize","window","innerWidth","handleBackButtonClick","navigation","goBack","getToken","get","token","params","state","filterData","length","isFromExplore","isFromSubcategory","getBrandList","searchedCategoryFilterList","categoryData","attributes","sub_categories","categoryFilterList","subCategory","getListRequest","getTagsList","filterBrands","filterTags","filterCategories","filterSubCategories","lastCategoryValue","filterDiscountedItems","filterLowRange","filterHighRange","filterMax","filterMin","rangeLow","rangeHigh","brandsFilterList","rangeMax","rangeMin","ytmbFilter","console","log","YtMbFilter","receive","bind","subScribedMessages","AccoutLoginSuccess","RestAPIResponceMessage","SessionSaveMessage","SessionResponseMessage","enableField","outOfStock","pricerange","brand","category","tag","checkedStock","checkedDiscounted","value","data","checkedBrand","checkedCategory","checkedTag","BrandList","selectedItems","selectedCategory","scrollEnabled","priceMin","priceMax","price","searchText","catHolder","customErrorModal","customErrorMessage","isFetching","tags","tagsList","filterBrand","screenSize","attachBuildingBlock","addEventListener","from","message","id","apiRequestCallId","getData","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","errorReponse","RestAPIResponceErrorMessage","debugLog","error","parseApiCatchErrorResponse"],"mappings":";;;;;;;AAAA;AAGA,SAASA,cAAT,QAA+B,uCAA/B;AACA,OAAOC,WAAP,IACEC,OADF,QAEO,6CAFP;AAGA,SAASC,SAAT,QAA0B,kCAA1B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AAIA;AACA;AAEA,OAAO,IAAMC,UAAU,GAAGC,OAAO,CAAC,UAAD,CAA1B;;IAyDcC,uB;;;;;AAanB,mCAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,8BAAMA,KAAN;AADwB,UAR1BC,YAQ0B;AAAA,UAP1BC,oBAO0B;AAAA,UAN1BC,iBAM0B;AAAA,UAL1BC,iBAK0B;AAAA,UAJ1BC,gBAI0B;AAAA,UAF1BC,YAE0B;;AAAA,UA8D1BC,YA9D0B,GA8DX,YAAM;AACnB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEC,MAAM,CAACC;AAArB,OAAd;AACD,KAhEyB;;AAAA,UAkE1BC,qBAlE0B,GAkEF,YAAM;AAC5B,YAAKZ,KAAL,CAAWa,UAAX,CAAsBC,MAAtB;;AACA,aAAO,IAAP;AACD,KArEyB;;AAAA,UAuE1BC,QAvE0B,yEAuEf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWnB,eAAe,CAACoB,GAAhB,CAAoB,UAApB,CADX;;AAAA;AACHC,cAAAA,KADG;AAEDC,cAAAA,MAFC,GAEU,MAAKlB,KAAL,CAAWa,UAAX,CAAsBM,KAFhC,CAEDD,MAFC;;AAGT,oBAAKV,QAAL,CAAc;AAAES,gBAAAA,KAAK,EAAEA;AAAT,eAAd;;AACIG,cAAAA,UAJK,GAIQF,MAAM,GAAGA,MAAM,CAACE,UAAV,GAAuB,EAJrC,EAKT;;AACA,kBAAIA,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AAC3B;AACA,oBAAIH,MAAM,IAAIA,MAAM,CAACI,aAArB,EAAoC;AAClC,sBAAIJ,MAAM,IAAIA,MAAM,CAACK,iBAArB,EAAwC;AACtC,0BAAKC,YAAL,CAAkBP,KAAlB;;AACA,0BAAKT,QAAL,CAAc;AACZiB,sBAAAA,0BAA0B,EACxBP,MAAM,CAACQ,YAAP,CAAoBC,UAApB,CAA+BC,cAFrB;AAGZC,sBAAAA,kBAAkB,EAAEX,MAAM,CAACQ,YAAP,CAAoBC,UAApB,CAA+BC,cAHvC;AAIZE,sBAAAA,WAAW,EAAE;AAJD,qBAAd;AAMD,mBARD,MAQO;AACL,0BAAKC,cAAL,CAAoBd,KAApB;;AACA,0BAAKO,YAAL,CAAkBP,KAAlB;;AACA,0BAAKe,WAAL,CAAiBf,KAAjB;AACD;AAEF,iBAfD,MAeO;AACL,wBAAKc,cAAL,CAAoBd,KAApB;;AACA,wBAAKO,YAAL,CAAkBP,KAAlB;;AACA,wBAAKe,WAAL,CAAiBf,KAAjB,EAHK,CAIL;;AACD;AACF,eAvBD,MAuBO;AAEHgB,gBAAAA,YAFG,GAYDb,UAZC,CAEHa,YAFG,EAGHC,UAHG,GAYDd,UAZC,CAGHc,UAHG,EAIHC,gBAJG,GAYDf,UAZC,CAIHe,gBAJG,EAKHC,mBALG,GAYDhB,UAZC,CAKHgB,mBALG,EAMHC,iBANG,GAYDjB,UAZC,CAMHiB,iBANG,EAOHC,qBAPG,GAYDlB,UAZC,CAOHkB,qBAPG,EAQHC,cARG,GAYDnB,UAZC,CAQHmB,cARG,EASHC,eATG,GAYDpB,UAZC,CASHoB,eATG,EAUHC,SAVG,GAYDrB,UAZC,CAUHqB,SAVG,EAWHC,SAXG,GAYDtB,UAZC,CAWHsB,SAXG;;AAaL,sBAAKlC,QAAL,CAAc;AAAEmC,kBAAAA,QAAQ,EAAEJ,cAAZ;AAA4BK,kBAAAA,SAAS,EAAEJ;AAAvC,iBAAd,EAbK,CAcL;AACA;;;AACA,oBACE,MAAKxC,KAAL,CAAWa,UAAX,CAAsBM,KAAtB,CAA4BD,MAA5B,IACA,MAAKlB,KAAL,CAAWa,UAAX,CAAsBM,KAAtB,CAA4BD,MAA5B,CAAmCI,aAFrC,EAGE;AACA;AACA;AACA,sBAAIJ,MAAM,IAAIA,MAAM,CAACK,iBAArB,EAAwC;AACtC,0BAAKf,QAAL,CAAc;AACZ;AACAqB,sBAAAA,kBAAkB,EAAEO,mBAFR;AAGZS,sBAAAA,gBAAgB,EAAEZ,YAHN;AAIZR,sBAAAA,0BAA0B,EAAEW,mBAJhB;AAKZO,sBAAAA,QAAQ,EAAEJ,cALE;AAMZK,sBAAAA,SAAS,EAAEJ,eANC;AAOZM,sBAAAA,QAAQ,EAAEL,SAPE;AAQZM,sBAAAA,QAAQ,EAAEL,SARE;AASZZ,sBAAAA,WAAW,EAAE;AATD,qBAAd;AAWD,mBAZD,MAYO;AACL,0BAAKtB,QAAL,CAAc;AACZ;AACAqB,sBAAAA,kBAAkB,EAAEO,mBAFR;AAGZS,sBAAAA,gBAAgB,EAAEZ,YAHN;AAIZR,sBAAAA,0BAA0B,EAAEW,mBAJhB;AAKZO,sBAAAA,QAAQ,EAAEJ,cALE;AAMZK,sBAAAA,SAAS,EAAEJ,eANC;AAOZM,sBAAAA,QAAQ,EAAEL,SAPE;AAQZM,sBAAAA,QAAQ,EAAEL,SARE;AASZZ,sBAAAA,WAAW,EAAE;AATD,qBAAd;AAWD;AACF,iBA/BD,MA+BO;AACL,wBAAKtB,QAAL,CAAc;AACZ;AACAqB,oBAAAA,kBAAkB,EAAEM,gBAFR;AAGZU,oBAAAA,gBAAgB,EAAEZ,YAHN;AAIZR,oBAAAA,0BAA0B,EAAEU,gBAJhB;AAKZQ,oBAAAA,QAAQ,EAAEJ,cALE;AAMZK,oBAAAA,SAAS,EAAEJ,eANC;AAOZM,oBAAAA,QAAQ,EAAEL,SAPE;AAQZM,oBAAAA,QAAQ,EAAEL;AARE,mBAAd;AAUD;AACF;;AAxFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvEe;;AAAA,UAyM1BM,UAzM0B,GAyMb,YAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,YAAK1C,QAAL,CAAc;AACZ2C,QAAAA,UAAU,EAAE,CAAC,MAAKhC,KAAL,CAAWgC;AADZ,OAAd;AAGD,KA9MyB;;AAExB,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf,CAFwB,CAIxB;;AACA,UAAKC,kBAAL,GAA0B,CACxB5D,OAAO,CAACD,WAAW,CAAC8D,kBAAb,CADiB,EAExB7D,OAAO,CAACD,WAAW,CAAC+D,sBAAb,CAFiB,EAGxB9D,OAAO,CAACD,WAAW,CAACgE,kBAAb,CAHiB,EAIxB/D,OAAO,CAACD,WAAW,CAACiE,sBAAb,CAJiB,CAA1B;AAOA,UAAKvC,KAAL,GAAa;AACXwC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,UAAU,EAAE,KAFD;AAGXC,MAAAA,UAAU,EAAE,IAHD;AAIXC,MAAAA,KAAK,EAAE,KAJI;AAKXC,MAAAA,QAAQ,EAAE,KALC;AAMXC,MAAAA,GAAG,EAAE,KANM;AAOXC,MAAAA,YAAY,EAAE,KAPH;AAQXC,MAAAA,iBAAiB,EAAE,KARR;AASXvB,MAAAA,QAAQ,EAAE,CATC;AAUXC,MAAAA,SAAS,EAAE,IAVA;AAWXG,MAAAA,QAAQ,EAAE,CAXC;AAYXD,MAAAA,QAAQ,EAAE,IAZC;AAaXqB,MAAAA,KAAK,EAAE,EAbI;AAcXlD,MAAAA,KAAK,EAAE,EAdI;AAeXmD,MAAAA,IAAI,EAAE,EAfK;AAgBXC,MAAAA,YAAY,EAAE,IAhBH;AAiBXC,MAAAA,eAAe,EAAE,KAjBN;AAkBXC,MAAAA,UAAU,EAAE,KAlBD;AAmBX1B,MAAAA,gBAAgB,EAAE,EAnBP;AAoBX2B,MAAAA,SAAS,EAAE,EApBA;AAqBXC,MAAAA,aAAa,EAAE,EArBJ;AAsBXC,MAAAA,gBAAgB,EAAE,EAtBP;AAuBXC,MAAAA,aAAa,EAAE,KAvBJ;AAwBXC,MAAAA,QAAQ,EAAE,CAxBC;AAyBXC,MAAAA,QAAQ,EAAE,CAzBC;AA0BXC,MAAAA,KAAK,EAAE,EA1BI;AA2BXrD,MAAAA,0BAA0B,EAAE,EA3BjB;AA4BXI,MAAAA,kBAAkB,EAAE,EA5BT;AA6BXkD,MAAAA,UAAU,EAAE,EA7BD;AA8BXC,MAAAA,SAAS,EAAE,EA9BA;AA+BXC,MAAAA,gBAAgB,EAAE,KA/BP;AAgCXC,MAAAA,kBAAkB,EAAE,EAhCT;AAiCXC,MAAAA,UAAU,EAAE,KAjCD;AAkCXrD,MAAAA,WAAW,EAAE,KAlCF;AAmCXsD,MAAAA,IAAI,EAAE,KAnCK;AAoCXC,MAAAA,QAAQ,EAAE,IApCC;AAqCXC,MAAAA,WAAW,EAAE,EArCF;AAsCXnC,MAAAA,UAAU,EAAE,KAtCD;AAuCXoC,MAAAA,UAAU,EAAE;AAvCD,KAAb,CAZwB,CAsDxB;;AACA5F,IAAAA,SAAS,CAAC6F,mBAAV,gCAA8C,MAAKlC,kBAAnD;AAvDwB;AAwDzB;;;;WAED,6BAAoB;AAClB5C,MAAAA,MAAM,CAAC+E,gBAAP,CAAwB,QAAxB,EAAkC,KAAKlF,YAAvC;AACD;;;;8EAsGD,kBAAcmF,IAAd,EAA4BC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAEA,oBAAIjG,OAAO,CAACD,WAAW,CAAC+D,sBAAb,CAAP,KAAgDmC,OAAO,CAACC,EAA5D,EAAgE;AACxDC,kBAAAA,gBADwD,GACrCF,OAAO,CAACG,OAAR,CACvBpG,OAAO,CAACD,WAAW,CAACsG,0BAAb,CADgB,CADqC;AAK1DC,kBAAAA,YAL0D,GAK3CL,OAAO,CAACG,OAAR,CACjBpG,OAAO,CAACD,WAAW,CAACwG,6BAAb,CADU,CAL2C;AAS1DC,kBAAAA,YAT0D,GAS3CP,OAAO,CAACG,OAAR,CACjBpG,OAAO,CAACD,WAAW,CAAC0G,2BAAb,CADU,CAT2C;;AAY9D,sBAAIH,YAAY,IAAIA,YAAY,CAAC5B,IAAjC,EAAuC;AACrC,wBAAIyB,gBAAgB,KAAK,KAAKxF,gBAA9B,EAAgD;AAC9C;AACAV,sBAAAA,SAAS,CAACyG,QAAV,CAAmB,sCAAnB,EAA2DJ,YAAY,CAAC5B,IAAxE,EAF8C,CAG9C;;AACA,2BAAK5D,QAAL,CAAc;AACZ6E,wBAAAA,QAAQ,EAAEW,YAAY,CAAC5B,IADX;AAEZe,wBAAAA,UAAU,EAAE,KAFA,CAGZ;;AAHY,uBAAd,EAJ8C,CAS9C;AACD;AACF;;AACD,sBAAIa,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAEK,KAAlB,EAAyB;AACvB,yBAAK7F,QAAL,CAAc;AAAE2E,sBAAAA,UAAU,EAAE;AAAd,qBAAd;AACD;;AACD,sBAAIe,YAAJ,EAAkB;AAChB,yBAAK1F,QAAL,CAAc;AAAE2E,sBAAAA,UAAU,EAAE;AAAd,qBAAd;AACA,yBAAKmB,0BAAL,CAAgCJ,YAAhC;AACD;AACF,iBAnCH,CAoCE;;;AApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;QA6CA;AACA;AACA;AACA;AACA;AACA;;;;;EAjOmD1G,c;;SAAhCO,uB","sourcesContent":["// @ts-nocheck\nimport { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport StorageProvider from '../../../framework/src/StorageProvider';\n\nimport { BackHandler } from \"react-native\";\n\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  enableField: boolean;\n  outOfStock: boolean;\n  pricerange: boolean;\n  brand: boolean;\n  category: boolean;\n  tag: boolean;\n  checkedStock: boolean;\n  checkedDiscounted: boolean;\n  checkedBrand: any;\n  rangeLow: any;\n  rangeHigh: any;\n  rangeMin: any;\n  rangeMax: any;\n  value: any;\n  token: string;\n  data: any;\n  checkedCategory: boolean;\n  checkedTag: boolean;\n  brandsFilterList: any;\n  BrandList: any;\n  selectedItems: any;\n  selectedCategory: any;\n  scrollEnabled: boolean;\n  priceMin: any;\n  priceMax: any;\n  price: any;\n  searchedCategoryFilterList: any;\n  categoryFilterList: any;\n  searchText: string,\n  catHolder: any,\n  customErrorModal: boolean,\n  customErrorMessage: String,\n  isFetching: boolean,\n  subCategory: boolean\n  tags: boolean;\n  tagsList: any;\n  filterBrand: Array<any>;\n  YtMbFilter?: boolean;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class FilteroptionsController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  _rangeSlider: any;\n  getCategoryApiCallId: any;\n  getBrandApiCallId: any;\n  applyAllApiCallId: any;\n  getTagsApiCallId: any;\n\n  _unsubscribe: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.AccoutLoginSuccess),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.SessionSaveMessage),\n      getName(MessageEnum.SessionResponseMessage)\n    ];\n\n    this.state = {\n      enableField: false,\n      outOfStock: false,\n      pricerange: true,\n      brand: false,\n      category: false,\n      tag: false,\n      checkedStock: false,\n      checkedDiscounted: false,\n      rangeLow: 0,\n      rangeHigh: 2000,\n      rangeMin: 0,\n      rangeMax: 2000,\n      value: 10,\n      token: \"\",\n      data: [],\n      checkedBrand: null,\n      checkedCategory: false,\n      checkedTag: false,\n      brandsFilterList: [],\n      BrandList: [],\n      selectedItems: [],\n      selectedCategory: [],\n      scrollEnabled: false,\n      priceMin: 0,\n      priceMax: 0,\n      price: [],\n      searchedCategoryFilterList: [],\n      categoryFilterList: [],\n      searchText: \"\",\n      catHolder: [],\n      customErrorModal: false,\n      customErrorMessage: \"\",\n      isFetching: false,\n      subCategory: false,\n      tags: false,\n      tagsList: null,\n      filterBrand: [],\n      YtMbFilter: false,\n      screenSize: \"\"\n    };\n\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resizeWindow);\n  }\n\n  resizeWindow = () => {\n    this.setState({ screebSize: window.innerWidth });\n  }\n\n  handleBackButtonClick = () => {\n    this.props.navigation.goBack();\n    return true;\n  };\n\n  getToken = async () => {\n    const token = await StorageProvider.get(\"Userdata\");\n    const { params } = this.props.navigation.state;\n    this.setState({ token: token });\n    let filterData = params ? params.filterData : [];\n    // const { filterBrands, filterTags, filterCategories, filterSubCategories, lastCategoryValue, filterDiscountedItems, filterLowRange, filterHighRange } = filterData;\n    if (filterData.length === 0) {\n      //*> When Filter Data is empty\n      if (params && params.isFromExplore) {\n        if (params && params.isFromSubcategory) {\n          this.getBrandList(token);\n          this.setState({\n            searchedCategoryFilterList:\n              params.categoryData.attributes.sub_categories,\n            categoryFilterList: params.categoryData.attributes.sub_categories,\n            subCategory: true\n          });\n        } else {\n          this.getListRequest(token);\n          this.getBrandList(token);\n          this.getTagsList(token);\n        }\n\n      } else {\n        this.getListRequest(token);\n        this.getBrandList(token);\n        this.getTagsList(token);\n        // this.setState({rangeLow:params.MinPrice,rangeHigh:params.MaxPrice})\n      }\n    } else {\n      const {\n        filterBrands,\n        filterTags,\n        filterCategories,\n        filterSubCategories,\n        lastCategoryValue,\n        filterDiscountedItems,\n        filterLowRange,\n        filterHighRange,\n        filterMax,\n        filterMin\n      } = filterData;\n      this.setState({ rangeLow: filterLowRange, rangeHigh: filterHighRange });\n      // this._rangeSlider.setLowValue(filterLowRange);\n      // this._rangeSlider.setHighValue(filterHighRange);\n      if (\n        this.props.navigation.state.params &&\n        this.props.navigation.state.params.isFromExplore\n      ) {\n        // if(filterSubCategories.length === 0 || lastCategoryValue !==  this.props.navigation.state.params.categoryID)\n        // this.getSubCategoryList();\n        if (params && params.isFromSubcategory) {\n          this.setState({\n            //*> When Filter Data is not empty\n            categoryFilterList: filterSubCategories,\n            brandsFilterList: filterBrands,\n            searchedCategoryFilterList: filterSubCategories,\n            rangeLow: filterLowRange,\n            rangeHigh: filterHighRange,\n            rangeMax: filterMax,\n            rangeMin: filterMin,\n            subCategory: true\n          });\n        } else {\n          this.setState({\n            //*> When Filter Data is not empty\n            categoryFilterList: filterSubCategories,\n            brandsFilterList: filterBrands,\n            searchedCategoryFilterList: filterSubCategories,\n            rangeLow: filterLowRange,\n            rangeHigh: filterHighRange,\n            rangeMax: filterMax,\n            rangeMin: filterMin,\n            subCategory: false\n          });\n        }\n      } else {\n        this.setState({\n          //*> When Filter Data is not empty\n          categoryFilterList: filterCategories,\n          brandsFilterList: filterBrands,\n          searchedCategoryFilterList: filterCategories,\n          rangeLow: filterLowRange,\n          rangeHigh: filterHighRange,\n          rangeMax: filterMax,\n          rangeMin: filterMin\n        });\n      }\n    }\n  };\n\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n\n    if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      const apiRequestCallId = message.getData(\n        getName(MessageEnum.RestAPIResponceDataMessage)\n      );\n\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n\n      var errorReponse = message.getData(\n        getName(MessageEnum.RestAPIResponceErrorMessage)\n      );\n      if (responseJson && responseJson.data) {\n        if (apiRequestCallId === this.getTagsApiCallId) {\n          // alert(JSON.stringify(responseJson.data.faqs))\n          runEngine.debugLog(\"api response--------getTagsApiCallId\", responseJson.data);\n          // let array = responseJson.data;\n          this.setState({\n            tagsList: responseJson.data,\n            isFetching: false\n            // tags: true\n          });\n          // this.setState({productList:array})\n        }\n      }\n      if (responseJson?.error) {\n        this.setState({ isFetching: false });\n      }\n      if (errorReponse) {\n        this.setState({ isFetching: false });\n        this.parseApiCatchErrorResponse(errorReponse);\n      }\n    }\n    // Customizable Area End\n  }\n\n  ytmbFilter = () => {\n    console.log(\"You Filter\")\n    this.setState({\n      YtMbFilter: !this.state.YtMbFilter\n    })\n  };\n  // ytmbFilterClose = () => {\n  //   console.log(\"You close Filter\");\n  //   this.setState({\n  //     YtMbFilter: false\n  //   })\n  // }\n}"]},"metadata":{},"sourceType":"module"}