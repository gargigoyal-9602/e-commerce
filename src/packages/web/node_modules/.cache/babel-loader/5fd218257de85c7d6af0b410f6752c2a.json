{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport MessageEnum, { getName } from '../../../framework/src/Messages/MessageEnum';\nimport { runEngine } from '../../../framework/src/RunEngine';\nimport { Message } from '../../../framework/src/Message';\nimport { Block } from '../../../framework/src/Block';\n\nvar config = require('../config');\n\nvar RestApiClientBlock = /*#__PURE__*/function (_Block) {\n  _inherits(RestApiClientBlock, _Block);\n\n  var _super = _createSuper(RestApiClientBlock);\n\n  function RestApiClientBlock() {\n    var _this;\n\n    _classCallCheck(this, RestApiClientBlock);\n\n    _this = _super.call(this);\n    _this.props = void 0;\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), [getName(MessageEnum.RestAPIRequestMessage)]);\n    return _this;\n  }\n\n  _createClass(RestApiClientBlock, [{\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(from, message) {\n        var uniqueApiCallId, _message$properties, method, endpoint, headers, body, props;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('API Rquest Message' + JSON.stringify(message));\n\n                if (getName(MessageEnum.RestAPIRequestMessage) === message.id) {\n                  uniqueApiCallId = message.messageId;\n                  _message$properties = message.properties, method = _message$properties.RestAPIRequestMethodMessage, endpoint = _message$properties.RestAPIResponceEndPointMessage, headers = _message$properties.RestAPIRequestHeaderMessage, body = _message$properties.RestAPIRequestBodyMessage, props = _message$properties.NavigationPropsMessage;\n                  this.props = props;\n                  this.makeApiCall(uniqueApiCallId, method, endpoint, headers, body);\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"makeApiCall\",\n    value: function () {\n      var _makeApiCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(uniqueApiCallId, method, endpoint, headers, body) {\n        var fullURL, apiResponseMessage, response, responseJson;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fullURL = endpoint.indexOf('://') === -1 ? config.baseURL + '/' + endpoint : endpoint;\n                apiResponseMessage = new Message(getName(MessageEnum.RestAPIResponceMessage));\n                apiResponseMessage.addData(getName(MessageEnum.RestAPIResponceDataMessage), uniqueApiCallId); // console.log('@@@ API URL ======================', fullURL);\n                // console.log('@@@ REQUEST BODY ======================', body);\n                // console.log('@@@ METHOD TYPE ======================', method);\n                // console.log('@@@ API CALL ID ======================', uniqueApiCallId);\n\n                _context2.prev = 3;\n                _context2.next = 6;\n                return fetch(fullURL, {\n                  method: method.toUpperCase(),\n                  headers: headers.length ? JSON.parse(headers) : headers,\n                  body: body\n                });\n\n              case 6:\n                response = _context2.sent;\n                _context2.next = 9;\n                return response.json();\n\n              case 9:\n                responseJson = _context2.sent;\n                //console.log('@@@ API RESPONSE ======================', responseJson);\n                //setting Response\n                apiResponseMessage.addData(getName(MessageEnum.RestAPIResponceSuccessMessage), responseJson); // console.log('Api Response' + JSON.stringify(responseJson));\n\n                _context2.next = 17;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](3);\n                runEngine.debugLog('RestApiClient Error', _context2.t0); //setting Error\n                //console.log('Api Error' + JSON.stringify(error));\n                //console.log('@@@ API ERROR ======================', JSON.stringify(error));\n\n                apiResponseMessage.addData(getName(MessageEnum.RestAPIResponceErrorMessage), 'An error has occuured. Please try again later.');\n\n              case 17:\n                if (this.props) {\n                  apiResponseMessage.addData(getName(MessageEnum.NavigationPropsMessage), this.props);\n                }\n\n                this.send(apiResponseMessage);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 13]]);\n      }));\n\n      function makeApiCall(_x3, _x4, _x5, _x6, _x7) {\n        return _makeApiCall.apply(this, arguments);\n      }\n\n      return makeApiCall;\n    }()\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!RestApiClientBlock.instance) {\n        RestApiClientBlock.instance = new RestApiClientBlock();\n      }\n\n      return RestApiClientBlock.instance;\n    }\n  }]);\n\n  return RestApiClientBlock;\n}(Block);\n\nRestApiClientBlock.instance = void 0;\nexport { RestApiClientBlock as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/framework/src/Blocks/RestApiClientBlock.tsx"],"names":["MessageEnum","getName","runEngine","Message","Block","config","require","RestApiClientBlock","props","attachBuildingBlock","RestAPIRequestMessage","from","message","console","log","JSON","stringify","id","uniqueApiCallId","messageId","properties","method","RestAPIRequestMethodMessage","endpoint","RestAPIResponceEndPointMessage","headers","RestAPIRequestHeaderMessage","body","RestAPIRequestBodyMessage","NavigationPropsMessage","makeApiCall","fullURL","indexOf","baseURL","apiResponseMessage","RestAPIResponceMessage","addData","RestAPIResponceDataMessage","fetch","toUpperCase","length","parse","response","json","responseJson","RestAPIResponceSuccessMessage","debugLog","RestAPIResponceErrorMessage","send","instance"],"mappings":";;;;;;;AAAA,OAAOA,WAAP,IACEC,OADF,QAEO,6CAFP;AAIA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,8BAAtB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;IAEqBC,kB;;;;;AAKnB,gCAAsB;AAAA;;AAAA;;AACpB;AADoB,UAJdC,KAIc;AAEpBN,IAAAA,SAAS,CAACO,mBAAV,gCAA8C,CAC5CR,OAAO,CAACD,WAAW,CAACU,qBAAb,CADqC,CAA9C;AAFoB;AAKrB;;;;;8EASD,iBAAcC,IAAd,EAA4BC,OAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEC,gBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAnC;;AACA,oBAAIX,OAAO,CAACD,WAAW,CAACU,qBAAb,CAAP,KAA+CE,OAAO,CAACK,EAA3D,EAA+D;AACvDC,kBAAAA,eADuD,GACrCN,OAAO,CAACO,SAD6B;AAAA,wCAQzDP,OAAO,CAACQ,UARiD,EAG9BC,MAH8B,uBAG3DC,2BAH2D,EAI3BC,QAJ2B,uBAI3DC,8BAJ2D,EAK9BC,OAL8B,uBAK3DC,2BAL2D,EAMhCC,IANgC,uBAM3DC,yBAN2D,EAOnCpB,KAPmC,uBAO3DqB,sBAP2D;AAS7D,uBAAKrB,KAAL,GAAaA,KAAb;AACA,uBAAKsB,WAAL,CAAiBZ,eAAjB,EAAkCG,MAAlC,EAA0CE,QAA1C,EAAoDE,OAApD,EAA6DE,IAA7D;AACD;;AAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;kFAgBA,kBACET,eADF,EAEEG,MAFF,EAGEE,QAHF,EAIEE,OAJF,EAKEE,IALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAQMI,gBAAAA,OARN,GAQgBR,QAAQ,CAACS,OAAT,CAAiB,KAAjB,MAA4B,CAAC,CAA7B,GAAiC3B,MAAM,CAAC4B,OAAP,GAAiB,GAAjB,GAAuBV,QAAxD,GAAmEA,QARnF;AASMW,gBAAAA,kBATN,GAS2B,IAAI/B,OAAJ,CACvBF,OAAO,CAACD,WAAW,CAACmC,sBAAb,CADgB,CAT3B;AAYED,gBAAAA,kBAAkB,CAACE,OAAnB,CACEnC,OAAO,CAACD,WAAW,CAACqC,0BAAb,CADT,EAEEnB,eAFF,EAZF,CAiBE;AACA;AACA;AACA;;AApBF;AAAA;AAAA,uBAuByBoB,KAAK,CAACP,OAAD,EAAU;AAClCV,kBAAAA,MAAM,EAAEA,MAAM,CAACkB,WAAP,EAD0B;AAElCd,kBAAAA,OAAO,EAAEA,OAAO,CAACe,MAAR,GAAiBzB,IAAI,CAAC0B,KAAL,CAAWhB,OAAX,CAAjB,GAAuCA,OAFd;AAGlCE,kBAAAA,IAAI,EAAEA;AAH4B,iBAAV,CAvB9B;;AAAA;AAuBQe,gBAAAA,QAvBR;AAAA;AAAA,uBA6B6BA,QAAQ,CAACC,IAAT,EA7B7B;;AAAA;AA6BQC,gBAAAA,YA7BR;AA8BI;AAEA;AACAV,gBAAAA,kBAAkB,CAACE,OAAnB,CACEnC,OAAO,CAACD,WAAW,CAAC6C,6BAAb,CADT,EAEED,YAFF,EAjCJ,CAsCI;;AAtCJ;AAAA;;AAAA;AAAA;AAAA;AAwCI1C,gBAAAA,SAAS,CAAC4C,QAAV,CAAmB,qBAAnB,gBAxCJ,CAyCI;AACA;AACA;;AACAZ,gBAAAA,kBAAkB,CAACE,OAAnB,CACEnC,OAAO,CAACD,WAAW,CAAC+C,2BAAb,CADT,EAEE,gDAFF;;AA5CJ;AAkDE,oBAAI,KAAKvC,KAAT,EAAgB;AACd0B,kBAAAA,kBAAkB,CAACE,OAAnB,CACEnC,OAAO,CAACD,WAAW,CAAC6B,sBAAb,CADT,EAEE,KAAKrB,KAFP;AAID;;AACD,qBAAKwC,IAAL,CAAUd,kBAAV;;AAxDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAvBA,uBAA8C;AAC5C,UAAI,CAAC3B,kBAAkB,CAAC0C,QAAxB,EAAkC;AAChC1C,QAAAA,kBAAkB,CAAC0C,QAAnB,GAA8B,IAAI1C,kBAAJ,EAA9B;AACD;;AACD,aAAOA,kBAAkB,CAAC0C,QAA1B;AACD;;;;EAjBqD7C,K;;AAAnCG,kB,CAGJ0C,Q;SAHI1C,kB","sourcesContent":["import MessageEnum, {\n  getName,\n} from '../../../framework/src/Messages/MessageEnum';\nimport { IBlock } from '../../../framework/src/IBlock';\nimport { runEngine } from '../../../framework/src/RunEngine';\nimport { Message } from '../../../framework/src/Message';\nimport { Block } from '../../../framework/src/Block';\n\nlet config = require('../config')\n\nexport default class RestApiClientBlock<Entity> extends Block {\n  private props: any;\n\n  private static instance: RestApiClientBlock<any>;\n\n  private constructor() {\n    super();\n    runEngine.attachBuildingBlock(this as IBlock, [\n      getName(MessageEnum.RestAPIRequestMessage),\n    ]);\n  }\n\n  static getInstance(): RestApiClientBlock<any> {\n    if (!RestApiClientBlock.instance) {\n      RestApiClientBlock.instance = new RestApiClientBlock();\n    }\n    return RestApiClientBlock.instance;\n  }\n\n  async receive(from: string, message: Message) {\n    console.log('API Rquest Message' + JSON.stringify(message));\n    if (getName(MessageEnum.RestAPIRequestMessage) === message.id) {\n      const uniqueApiCallId = message.messageId;\n      const {\n        RestAPIRequestMethodMessage: method,\n        RestAPIResponceEndPointMessage: endpoint,\n        RestAPIRequestHeaderMessage: headers,\n        RestAPIRequestBodyMessage: body,\n        NavigationPropsMessage: props,\n      } = message.properties;\n      this.props = props;\n      this.makeApiCall(uniqueApiCallId, method, endpoint, headers, body);\n    }\n  }\n\n  async makeApiCall(\n    uniqueApiCallId: string,\n    method: string,\n    endpoint: string,\n    headers: any,\n    body: string\n  ) {\n\n    let fullURL = endpoint.indexOf('://') === -1 ? config.baseURL + '/' + endpoint : endpoint\n    let apiResponseMessage = new Message(\n      getName(MessageEnum.RestAPIResponceMessage)\n    );\n    apiResponseMessage.addData(\n      getName(MessageEnum.RestAPIResponceDataMessage),\n      uniqueApiCallId\n    );\n\n    // console.log('@@@ API URL ======================', fullURL);\n    // console.log('@@@ REQUEST BODY ======================', body);\n    // console.log('@@@ METHOD TYPE ======================', method);\n    // console.log('@@@ API CALL ID ======================', uniqueApiCallId);\n    \n    try {\n      let response = await fetch(fullURL, {\n        method: method.toUpperCase(),\n        headers: headers.length ? JSON.parse(headers) : headers,\n        body: body,\n      });\n      \n      let responseJson = await response.json();\n      //console.log('@@@ API RESPONSE ======================', responseJson);\n\n      //setting Response\n      apiResponseMessage.addData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage),\n        responseJson\n      );\n\n      // console.log('Api Response' + JSON.stringify(responseJson));\n    } catch (error) {\n      runEngine.debugLog('RestApiClient Error', error);\n      //setting Error\n      //console.log('Api Error' + JSON.stringify(error));\n      //console.log('@@@ API ERROR ======================', JSON.stringify(error));\n      apiResponseMessage.addData(\n        getName(MessageEnum.RestAPIResponceErrorMessage),\n        'An error has occuured. Please try again later.'\n      );\n    }\n\n    if (this.props) {\n      apiResponseMessage.addData(\n        getName(MessageEnum.NavigationPropsMessage),\n        this.props\n      );\n    }\n    this.send(apiResponseMessage);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}