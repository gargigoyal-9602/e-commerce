{"ast":null,"code":"import _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/forgot-password/src/ForgotPassword.web.tsx\";\nimport React, { Fragment } from 'react';\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport { CgSpinner } from 'react-icons/cg';\nimport { RiArrowLeftSLine } from 'react-icons/ri';\nimport { Link, withRouter } from 'react-router-dom'; // @ts-ignore\n\nimport content from '../../../components/src/content.js'; // import content from \"../../theme/src/content\";\n\nimport ForgotPasswordController from \"./ForgotPasswordController.web\";\nimport '../assets/styles/index.scoped.css';\nimport NewPassword from \"./NewPassword.web\";\nimport Loader from '../../../components/src/Loader.web'; // import Loader from \"../../theme/src/Loader.web\";\n\nimport { emailIcon, pwdIcon } from './assets';\n\nvar ForgotPasswordOTP = /*#__PURE__*/function (_ForgotPasswordContro) {\n  _inherits(ForgotPasswordOTP, _ForgotPasswordContro);\n\n  var _super = _createSuper(ForgotPasswordOTP);\n\n  function ForgotPasswordOTP(props) {\n    _classCallCheck(this, ForgotPasswordOTP);\n\n    return _super.call(this, props); // Customizable Area Start\n    // Customizable Area End\n  }\n\n  _createClass(ForgotPasswordOTP, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.loading && /*#__PURE__*/React.createElement(Loader, {\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-forgot-pw-wrap yt-fpp-mb-5 yt-fpp-mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-wrap yt-frgt-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-fp-inner-content yt-form-col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-fp-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }, this.state.otpToken == '' ? /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: \"/\",\n          state: {\n            \"calledFrom\": \"cart\",\n            \"redirect\": \"wishlist\"\n          }\n        },\n        className: \"d-flex align-items-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(RiArrowLeftSLine, {\n        className: \"mr-2 yt-fp-back-icn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"yt-fp-top-back-tag-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 45\n        }\n      }, this.state.emailError == 'success' ? content.otpVerification : content.forgotPassword)) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"yt-fp-top-back-tag-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 45\n        }\n      }, content.createNewPassword)), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"yt-fp-tag-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }\n      }, content.getStarted), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"yt-fp-tag-line-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, this.state.otpToken == '' ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 45\n        }\n      }, this.state.emailError == 'success' ? content.otpHasBeenSent : content.forgotPasswordContentText) : ''), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-fp-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, this.state.otpToken == '' ? /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.SendOtpBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: 'mb-1 ' + (this.state.emailError == 'empty' || this.state.emailError == 'wrong' || this.state.notRegister != '' ? 'yt-form-err' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Email Icon\",\n        src: emailIcon // src={require('./images/emal-icn.png')}\n        ,\n        className: 'yt-fp-icn',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        value: this.state.email,\n        ForgotPassFields: true,\n        placeholder: 'Email',\n        onChange: this.handleEmail,\n        className: this.state.emailError == '' || this.state.emailError == 'success' ? 'normal-input' : 'invalid-input',\n        invalid: !(this.state.emailError == '' || this.state.emailError == 'success'),\n        disabled: this.state.emailError == 'success',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        id: \"yt-fp-email-error\",\n        className: \"yt-fp-up-message-show\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 53\n        }\n      }), this.state.emailError == 'empty' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 57\n        }\n      }, content.invalidEmail) : /*#__PURE__*/React.createElement(React.Fragment, null), this.state.emailError == 'wrong' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 57\n        }\n      }, content.emailMustBeValid) : /*#__PURE__*/React.createElement(React.Fragment, null), this.state.notRegister ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 57\n        }\n      }, this.state.notRegister) : /*#__PURE__*/React.createElement(React.Fragment, null)), this.state.emailError == 'success' ? /*#__PURE__*/React.createElement(FormGroup, {\n        className: 'mt-1 ' + (this.state.otpError == 'empty' || this.state.otpError == 'invalid' || this.state.otpError == 'invalidResponse' ? 'yt-form-err' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Password Icon\",\n        src: pwdIcon // src={require('./images/key-icn.png')}\n        ,\n        className: 'yt-fp-icn',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 61\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"otp\",\n        id: \"otp\",\n        value: this.state.otp,\n        placeholder: \"OTP\",\n        onChange: this.handleOTP,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 61\n        }\n      })), this.state.otpError == 'empty' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 61\n        }\n      }, content.pleaseEnterOTP) : /*#__PURE__*/React.createElement(React.Fragment, null), this.state.otpError == 'invalid' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 61\n        }\n      }, content.pleaseEnter5DigitOTP) : /*#__PURE__*/React.createElement(React.Fragment, null), this.state.otpError == 'invalidResponse' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 61\n        }\n      }, content.invalidOTP) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-4 pt-1 yt-otp-sd-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 49\n        }\n      }, this.state.showSpinner ? /*#__PURE__*/React.createElement(CgSpinner, {\n        style: {\n          color: 'black',\n          fontSize: 32,\n          width: '100%',\n          margin: 10\n        },\n        className: \"w3-spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 57\n        }\n      }) : /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        color: \"yt-fp-btn mt-1 send-otp-btn\",\n        className: \"smt-btn\",\n        block: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 57\n        }\n      }, this.state.emailError === 'success' ? 'Verify OTP' : 'Send OTP'))) : /*#__PURE__*/React.createElement(NewPassword // token={this.state.otpToken}\n      // onChangeSuccess={this.props.onChangeSuccess}\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 37\n        }\n      }, this.state.emailError != 'success' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-forpass-bottom-info text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          // CacheState.set({ continueAsGuest: true });\n          // history.push('/');\n          _this.guestUserHandler();\n\n          console.log(\"YOUUU clicked\");\n        },\n        className: \"yt-fp-skip-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 49\n        }\n      }, content.skipAsGuest)) : /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 45\n        }\n      }, this.state.otpToken == '' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-forpass-bottom-info text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 57\n        }\n      }, this.state.timer > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"otp-timer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 65\n        }\n      }, \"00:\", this.state.timer) : /*#__PURE__*/React.createElement(Button, {\n        color: \"link yt-resent-otp-btn\",\n        onClick: this.emailConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 65\n        }\n      }, content.resendOTP)))))))))));\n    }\n  }]);\n\n  return ForgotPasswordOTP;\n}(ForgotPasswordController); // @ts-ignore\n\n\nexport default withRouter(ForgotPasswordOTP); // Customizable Area Start\n// Customizable Area End","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/forgot-password/src/ForgotPassword.web.tsx"],"names":["React","Fragment","Button","Form","FormGroup","Input","Container","CgSpinner","RiArrowLeftSLine","Link","withRouter","content","ForgotPasswordController","NewPassword","Loader","emailIcon","pwdIcon","ForgotPasswordOTP","props","state","loading","otpToken","pathname","emailError","otpVerification","forgotPassword","createNewPassword","getStarted","otpHasBeenSent","forgotPasswordContentText","SendOtpBtn","notRegister","email","handleEmail","position","invalidEmail","emailMustBeValid","otpError","otp","handleOTP","pleaseEnterOTP","pleaseEnter5DigitOTP","invalidOTP","showSpinner","color","fontSize","width","margin","cursor","guestUserHandler","console","log","skipAsGuest","timer","emailConfirm","resendOTP"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport { CgSpinner } from 'react-icons/cg';\nimport { RiArrowLeftSLine } from 'react-icons/ri';\nimport { Link, withRouter } from 'react-router-dom';\n// @ts-ignore\nimport content from '../../../components/src/content.js';\n// import content from \"../../theme/src/content\";\nimport ForgotPasswordController, { Props } from \"./ForgotPasswordController.web\";\nimport '../assets/styles/index.scoped.css';\nimport NewPassword from \"./NewPassword.web\";\nimport Loader from '../../../components/src/Loader.web';\n// import Loader from \"../../theme/src/Loader.web\";\nimport { emailIcon, pwdIcon, phoneIcon } from './assets';\n\nclass ForgotPasswordOTP extends ForgotPasswordController {\n    constructor(props: Props) {\n        super(props);\n        // Customizable Area Start\n        // Customizable Area End\n    }\n\n    render() {\n\n        return (\n            <>\n                {this.state.loading && <Loader loading={this.state.loading} />}\n                <Container>\n                    <div className=\"yt-forgot-pw-wrap yt-fpp-mb-5 yt-fpp-mt-5\">\n                        <div className=\"d-flex flex-wrap yt-frgt-row\">\n                            <div className=\"yt-fp-inner-content yt-form-col\">\n                                <div className=\"yt-fp-wrap\">\n                                    {this.state.otpToken == '' ? (\n                                        <Link to={{\n                                            pathname: \"/\", state: { \"calledFrom\": \"cart\", \"redirect\": \"wishlist\" }\n                                        }}\n                                            className=\"d-flex align-items-end\" >\n                                            <RiArrowLeftSLine className=\"mr-2 yt-fp-back-icn\" />\n                                            <h3 className=\"yt-fp-top-back-tag-name\">\n                                                {this.state.emailError == 'success' ? content.otpVerification : content.forgotPassword}\n                                            </h3>\n                                        </Link>\n                                    ) : (\n                                        <div className=\"d-flex\">\n                                            <h3 className=\"yt-fp-top-back-tag-name\">\n                                                {content.createNewPassword}\n                                            </h3>\n                                        </div>\n                                    )}\n\n                                    <h2 className=\"yt-fp-tag-line\">\n                                        {content.getStarted}\n                                    </h2>\n                                    <h2 className=\"yt-fp-tag-line-2\">\n                                        {this.state.otpToken == '' ? (\n                                            <span>\n                                                {this.state.emailError == 'success'\n                                                    ? content.otpHasBeenSent\n                                                    :\n                                                    content.forgotPasswordContentText\n                                                }\n                                            </span>\n                                        ) : (\n                                            ''\n                                        )}\n                                    </h2>\n                                    <div className=\"yt-fp-form\">\n                                        {this.state.otpToken == '' ? (\n                                            <Form onSubmit={this.SendOtpBtn}>\n                                                <FormGroup\n                                                    className={\n                                                        'mb-1 ' +\n                                                        (this.state.emailError == 'empty' ||\n                                                            this.state.emailError == 'wrong' ||\n                                                            this.state.notRegister != ''\n                                                            ? 'yt-form-err'\n                                                            : '')\n                                                    }\n                                                >\n                                                    <img\n                                                        alt=\"Email Icon\"\n                                                        src={emailIcon}\n                                                        // src={require('./images/emal-icn.png')}\n                                                        className={'yt-fp-icn'}\n                                                    />\n                                                    <Input\n                                                        type=\"email\"\n                                                        name=\"email\"\n                                                        id=\"email\"\n                                                        value={this.state.email}\n                                                        ForgotPassFields\n                                                        placeholder={'Email'}\n                                                        onChange={this.handleEmail}\n                                                        className={\n                                                            this.state.emailError == '' || this.state.emailError == 'success'\n                                                                ? 'normal-input'\n                                                                : 'invalid-input'\n                                                        }\n                                                        invalid={!(this.state.emailError == '' || this.state.emailError == 'success')}\n                                                        disabled={this.state.emailError == 'success'}\n                                                    />\n                                                    <span id=\"yt-fp-email-error\" className=\"yt-fp-up-message-show\" />\n                                                    {this.state.emailError == 'empty' ? (\n                                                        <span\n                                                            className=\"invalid yt-form-err\"\n                                                            style={{ position: 'absolute' }}\n                                                        >\n                                                            {content.invalidEmail}\n                                                        </span>\n                                                    ) : (\n                                                        <></>\n                                                    )}\n                                                    {this.state.emailError == 'wrong' ? (\n                                                        <span\n                                                            className=\"invalid yt-form-err\"\n                                                            style={{ position: 'absolute' }}\n                                                        >\n                                                            {content.emailMustBeValid}\n                                                        </span>\n                                                    ) : (\n                                                        <></>\n                                                    )}\n                                                    {this.state.notRegister ? (\n                                                        <span\n                                                            className=\"invalid yt-form-err\"\n                                                            style={{ position: 'absolute' }}\n                                                        >\n                                                            {this.state.notRegister}\n                                                        </span>\n                                                    ) : (\n                                                        <></>\n                                                    )}\n                                                </FormGroup>\n\n                                                {this.state.emailError == 'success' ? (\n                                                    <FormGroup\n                                                        className={\n                                                            'mt-1 ' +\n                                                            (this.state.otpError == 'empty' ||\n                                                                this.state.otpError == 'invalid' ||\n                                                                this.state.otpError == 'invalidResponse'\n                                                                ? 'yt-form-err'\n                                                                : '')\n                                                        }\n                                                    >\n                                                        <div>\n                                                            <img\n                                                                alt=\"Password Icon\"\n                                                                src={pwdIcon}\n                                                                // src={require('./images/key-icn.png')}\n                                                                className={'yt-fp-icn'}\n                                                            />\n                                                            <Input\n                                                                type=\"text\"\n                                                                name=\"otp\"\n                                                                id=\"otp\"\n                                                                value={this.state.otp}\n                                                                placeholder=\"OTP\"\n                                                                onChange={this.handleOTP}\n                                                            />\n                                                            {/*<FaEye\n                                className={\n                                  otpError != \"\" ? \"yt-pas-eye-icn2\" : \"yt-pas-eye-icn\"\n                                }\n                              />*/}\n                                                        </div>\n                                                        {this.state.otpError == 'empty' ? (\n                                                            <span\n                                                                className=\"invalid yt-form-err\"\n                                                                style={{ position: 'absolute' }}\n                                                            >\n                                                                {content.pleaseEnterOTP}\n                                                            </span>\n                                                        ) : (\n                                                            <></>\n                                                        )}\n                                                        {this.state.otpError == 'invalid' ? (\n                                                            <span\n                                                                className=\"invalid yt-form-err\"\n                                                                style={{ position: 'absolute' }}\n                                                            >\n                                                                {content.pleaseEnter5DigitOTP}\n                                                            </span>\n                                                        ) : (\n                                                            <></>\n                                                        )}\n                                                        {this.state.otpError == 'invalidResponse' ? (\n                                                            <span\n                                                                className=\"invalid yt-form-err\"\n                                                                style={{ position: 'absolute' }}\n                                                            >\n                                                                {content.invalidOTP}\n                                                            </span>\n                                                        ) : (\n                                                            <></>\n                                                        )}\n                                                    </FormGroup>\n                                                ) : (\n                                                    <></>\n                                                )}\n                                                <div className=\"mt-4 pt-1 yt-otp-sd-wrap\">\n                                                    {this.state.showSpinner ? (\n                                                        <CgSpinner\n                                                            style={{\n                                                                color: 'black',\n                                                                fontSize: 32,\n                                                                width: '100%',\n                                                                margin: 10,\n                                                            }}\n                                                            className=\"w3-spin\"\n                                                        />\n                                                    ) : (\n                                                        <Button type=\"submit\" color=\"yt-fp-btn mt-1 send-otp-btn\" className=\"smt-btn\" block>\n                                                            {this.state.emailError === 'success'\n                                                                ? 'Verify OTP'\n                                                                : 'Send OTP'\n                                                            }\n                                                        </Button>\n                                                    )}\n                                                </div>\n                                            </Form>\n                                        ) : (\n                                            <NewPassword\n                                            // token={this.state.otpToken}\n                                            // onChangeSuccess={this.props.onChangeSuccess}\n                                            />\n                                        )}\n                                    </div>\n                                    <Fragment>\n                                        {this.state.emailError != 'success' ? (\n                                            <div className=\"yt-forpass-bottom-info text-center\">\n                                                <span\n                                                    style={{ cursor: 'pointer' }}\n                                                    onClick={() => {\n                                                        // CacheState.set({ continueAsGuest: true });\n                                                        // history.push('/');\n                                                        this.guestUserHandler();\n                                                        console.log(\"YOUUU clicked\");\n                                                    }}\n                                                    className=\"yt-fp-skip-btn\"\n                                                >\n                                                    {content.skipAsGuest}\n                                                </span>\n                                            </div>\n                                        ) : (\n                                            <Fragment>\n                                                {this.state.otpToken == '' && (\n                                                    <div className=\"yt-forpass-bottom-info text-center\">\n                                                        <div>\n                                                            {this.state.timer > 0 ? (\n                                                                <div className=\"otp-timer\">00:{this.state.timer}</div>\n                                                            ) : (\n                                                                <Button\n                                                                    color=\"link yt-resent-otp-btn\"\n                                                                    onClick={this.emailConfirm}\n                                                                >\n                                                                    {content.resendOTP}\n                                                                </Button>\n                                                            )}\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </Fragment>\n                                        )}\n                                    </Fragment>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Container>\n            </>\n        );\n    }\n}\n\n// @ts-ignore\nexport default withRouter(ForgotPasswordOTP);\n// Customizable Area Start\n\n// Customizable Area End\n"]},"metadata":{},"sourceType":"module"}