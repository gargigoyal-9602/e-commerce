{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport var configJSON = require(\"./config\");\n\nvar SingleOrdersController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(SingleOrdersController, _BlockComponent);\n\n  var _super = _createSuper(SingleOrdersController);\n\n  // Customizable Area Start\n  // Customizable Area End\n  function SingleOrdersController(props) {\n    var _this;\n\n    _classCallCheck(this, SingleOrdersController);\n\n    _this = _super.call(this, props);\n    _this.apiEmailLoginCallId = \"\";\n    _this.validationApiCallId = \"\";\n    _this.fetchTrackingDetailsCallId = \"\";\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this)); // Customizable Area Start\n\n    _this.subScribedMessages = [getName(MessageEnum.CountryCodeMessage), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.ReciveUserCredentials)];\n    _this.state = {\n      rating: 0,\n      comment: \"\"\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(SingleOrdersController, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.send(new Message(getName(MessageEnum.RequestUserCredentials))); // Customizable Area Start\n                // Customizable Area End\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // Customizable Area Start\n    // Customizable Area End\n\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var apiRequestCallId, resposeJSON, errorMessage;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Customizable Area Start\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  resposeJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n                } // Customizable Area End\n\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"setRating\",\n    value: function setRating(value) {\n      this.setState({\n        rating: value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(data) {\n      var _this$props = this.props,\n          _this$props$reviewDat = _this$props.reviewData,\n          orderId = _this$props$reviewDat.orderId,\n          orderItemId = _this$props$reviewDat.orderItemId,\n          reviewId = _this$props$reviewDat.reviewId,\n          toggle = _this$props.toggle,\n          onSuccess = _this$props.onSuccess;\n      console.log(\"Data for submit \", data);\n      onSuccess(data); // commands.products.createReview({ orderId, orderItemId, rating, comment, onSuccess });\n      // toggle(\n    }\n  }]);\n\n  return SingleOrdersController;\n}(BlockComponent);\n\nexport { SingleOrdersController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/profilebio/src/ProductRatingController.web.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","configJSON","require","SingleOrdersController","props","apiEmailLoginCallId","validationApiCallId","fetchTrackingDetailsCallId","receive","bind","onSubmit","subScribedMessages","CountryCodeMessage","RestAPIResponceMessage","ReciveUserCredentials","state","rating","comment","attachBuildingBlock","send","RequestUserCredentials","from","message","id","apiRequestCallId","getData","RestAPIResponceDataMessage","resposeJSON","RestAPIResponceSuccessMessage","errorMessage","RestAPIResponceErrorMessage","value","setState","data","reviewData","orderId","orderItemId","reviewId","toggle","onSuccess","console","log"],"mappings":";;;;;;;AACA,SAASA,OAAT,QAAwB,gCAAxB;AACA,SAASC,cAAT,QAA+B,uCAA/B;AAGA,OAAOC,WAAP,IACEC,OADF,QAEO,6CAFP;AAGA,SAASC,SAAT,QAA0B,kCAA1B,C,CAEA;AACA;AACA;;AAEA,OAAO,IAAMC,UAAU,GAAGC,OAAO,CAAC,UAAD,CAA1B;;IA4BcC,sB;;;;;AAMnB;AAIA;AAEA,kCAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AAExB,8BAAMA,KAAN;AAFwB,UAL1BC,mBAK0B,GALI,EAKJ;AAAA,UAJ1BC,mBAI0B,GAJI,EAIJ;AAAA,UAH1BC,0BAG0B,GAHW,EAGX;AAGxB,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB,CAJwB,CAMxB;;AACA,UAAKE,kBAAL,GAA0B,CACxBZ,OAAO,CAACD,WAAW,CAACc,kBAAb,CADiB,EAExBb,OAAO,CAACD,WAAW,CAACe,sBAAb,CAFiB,EAGxBd,OAAO,CAACD,WAAW,CAACgB,qBAAb,CAHiB,CAA1B;AAMA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CADC;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb,CAbwB,CAkBxB;;AAEAjB,IAAAA,SAAS,CAACkB,mBAAV,gCAA8C,MAAKP,kBAAnD;AApBwB;AAsBzB;;;;;wFAED;AAAA;AAAA;AAAA;AAAA;AACE,qBAAKQ,IAAL,CAAU,IAAIvB,OAAJ,CAAYG,OAAO,CAACD,WAAW,CAACsB,sBAAb,CAAnB,CAAV,EADF,CAGE;AACA;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;QAOA;AAGA;;;;;8EAEA,kBAAcC,IAAd,EAA4BC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE;AACA,oBAAIA,OAAO,CAACC,EAAR,KAAexB,OAAO,CAACD,WAAW,CAACe,sBAAb,CAA1B,EAAgE;AACxDW,kBAAAA,gBADwD,GACrCF,OAAO,CAACG,OAAR,CAAgB1B,OAAO,CAACD,WAAW,CAAC4B,0BAAb,CAAvB,CADqC;AAExDC,kBAAAA,WAFwD,GAE1CL,OAAO,CAACG,OAAR,CAAgB1B,OAAO,CAACD,WAAW,CAAC8B,6BAAb,CAAvB,CAF0C;AAGxDC,kBAAAA,YAHwD,GAGzCP,OAAO,CAACG,OAAR,CAAgB1B,OAAO,CAACD,WAAW,CAACgC,2BAAb,CAAvB,CAHyC;AAK/D,iBARH,CASE;;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAYA,mBAAWC,KAAX,EAAuB;AACrB,WAAKC,QAAL,CAAc;AAAEhB,QAAAA,MAAM,EAAEe;AAAV,OAAd;AACD;;;WAED,kBAAUE,IAAV,EAAqB;AACnB,wBAII,KAAK7B,KAJT;AAAA,8CACE8B,UADF;AAAA,UACgBC,OADhB,yBACgBA,OADhB;AAAA,UACyBC,WADzB,yBACyBA,WADzB;AAAA,UACsCC,QADtC,yBACsCA,QADtC;AAAA,UAEEC,MAFF,eAEEA,MAFF;AAAA,UAGEC,SAHF,eAGEA,SAHF;AAKEC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,IAAhC;AACAM,MAAAA,SAAS,CAACN,IAAD,CAAT,CAPiB,CAQjB;AACA;AACH;;;;EA1EiDpC,c;;SAA/BM,sB","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  history: any;\n  reviewData: any;\n  toggle : any;\n  isOpen: boolean;\n  onSuccess: any;\n\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  rating: number;\n  comment: string;\n  // Customizable Area End\n}\n\ninterface SS {\n  // Customizable Area Start\n  id: any;\n  // Customizable Area End\n}\n\nexport default class SingleOrdersController extends BlockComponent<\n  Props,\n  S,\n  SS\n  > {\n\n  // Customizable Area Start\n  apiEmailLoginCallId: string = \"\";\n  validationApiCallId: string = \"\";\n  fetchTrackingDetailsCallId: string = \"\";\n  // Customizable Area End\n\n  constructor(props: Props) {\n\n    super(props);\n    this.receive = this.receive.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.CountryCodeMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.ReciveUserCredentials)\n    ]\n\n    this.state = {\n        rating: 0,\n        comment: \"\"\n    };\n\n    // Customizable Area End\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n\n  }\n\n  async componentDidMount() {\n    this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n   \n    // Customizable Area Start\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n\n\n  // Customizable Area End\n\n  async receive(from: string, message: Message) {\n\n    // Customizable Area Start\n    if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n      const apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n      const resposeJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      const errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n      \n    }\n    // Customizable Area End\n  }\n\n  setRating (value: any) {\n    this.setState({ rating: value });\n  }\n  \n  onSubmit (data: any) {\n    const {\n      reviewData: { orderId, orderItemId, reviewId },\n      toggle,\n      onSuccess\n    } = this.props;\n      console.log(\"Data for submit \", data);\n      onSuccess(data);\n      // commands.products.createReview({ orderId, orderItemId, rating, comment, onSuccess });\n      // toggle(\n  }\n}\n"]},"metadata":{},"sourceType":"module"}