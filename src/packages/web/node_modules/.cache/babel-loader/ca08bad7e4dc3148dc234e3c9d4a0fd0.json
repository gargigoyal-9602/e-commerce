{"ast":null,"code":"import _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/forgot-password/src/ForgotPassword.web/index.tsx\";\nimport React, { Fragment } from 'react';\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport { CgSpinner } from 'react-icons/cg';\nimport { RiArrowLeftSLine } from 'react-icons/ri';\nimport { Link, withRouter } from 'react-router-dom'; // @ts-ignore\n\nimport content from \"../../../../components/src/content\";\nimport ForgotPasswordController from \"./ForgotPasswordController\";\nimport './css/index.scoped.css';\nimport NewPassword from \"./NewPassword.web\";\nimport Loader from \"../../../../components/src/Loader.web\";\n\nvar ForgotPasswordOTP = /*#__PURE__*/function (_ForgotPasswordContro) {\n  _inherits(ForgotPasswordOTP, _ForgotPasswordContro);\n\n  var _super = _createSuper(ForgotPasswordOTP);\n\n  function ForgotPasswordOTP(props) {\n    _classCallCheck(this, ForgotPasswordOTP);\n\n    return _super.call(this, props); // Customizable Area Start\n    // Customizable Area End\n  }\n\n  _createClass(ForgotPasswordOTP, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.loading && /*#__PURE__*/React.createElement(Loader, {\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 32\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-forgot-pw-wrap yt-fpp-mb-5 yt-fpp-mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-wrap yt-frgt-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-fp-inner-content yt-form-col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-fp-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, this.state.otpToken == '' ? /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: \"/\",\n          state: {\n            \"calledFrom\": \"cart\",\n            \"redirect\": \"wishlist\"\n          }\n        },\n        className: \"d-flex align-items-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(RiArrowLeftSLine, {\n        className: \"mr-2 yt-fp-back-icn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"yt-fp-top-back-tag-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }\n      }, this.state.emailError == 'success' ? content.otpVerification : content.forgotPassword)) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"yt-fp-top-back-tag-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      }, content.createNewPassword)), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"yt-fp-tag-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, content.getStarted), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"yt-fp-tag-line-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, this.state.otpToken == '' ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }\n      }, this.state.emailError == 'success' ? content.otpHasBeenSent : content.forgotPasswordContentText) : ''), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-fp-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      }, this.state.otpToken == '' ? /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.SendOtpBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: 'mb-1 ' + (this.state.emailError == 'empty' || this.state.emailError == 'wrong' || this.state.notRegister != '' ? 'yt-form-err' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Email Icon\",\n        src: require('./images/emal-icn.png'),\n        className: 'yt-fp-icn',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        value: this.state.email,\n        ForgotPassFields: true,\n        placeholder: 'Email',\n        onChange: this.handleEmail,\n        className: this.state.emailError == '' || this.state.emailError == 'success' ? 'normal-input' : 'invalid-input',\n        invalid: !(this.state.emailError == '' || this.state.emailError == 'success'),\n        disabled: this.state.emailError == 'success',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        id: \"yt-fp-email-error\",\n        className: \"yt-fp-up-message-show\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }\n      }), this.state.emailError == 'empty' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      }, content.invalidEmail) : /*#__PURE__*/React.createElement(React.Fragment, null), this.state.emailError == 'wrong' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }, content.emailMustBeValid) : /*#__PURE__*/React.createElement(React.Fragment, null), this.state.notRegister ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      }, this.state.notRegister) : /*#__PURE__*/React.createElement(React.Fragment, null)), this.state.emailError == 'success' ? /*#__PURE__*/React.createElement(FormGroup, {\n        className: 'mt-1 ' + (this.state.otpError == 'empty' || this.state.otpError == 'invalid' || this.state.otpError == 'invalidResponse' ? 'yt-form-err' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Password Icon\",\n        src: require('./images/key-icn.png'),\n        className: 'yt-fp-icn',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"otp\",\n        id: \"otp\",\n        value: this.state.otp,\n        placeholder: \"OTP\",\n        onChange: this.handleOTP,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 31\n        }\n      })), this.state.otpError == 'empty' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 31\n        }\n      }, content.pleaseEnterOTP) : /*#__PURE__*/React.createElement(React.Fragment, null), this.state.otpError == 'invalid' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 31\n        }\n      }, content.pleaseEnter5DigitOTP) : /*#__PURE__*/React.createElement(React.Fragment, null), this.state.otpError == 'invalidResponse' ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid yt-form-err\",\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 31\n        }\n      }, content.invalidOTP) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-4 pt-1 yt-otp-sd-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, this.state.showSpinner ? /*#__PURE__*/React.createElement(CgSpinner, {\n        style: {\n          color: 'black',\n          fontSize: 32,\n          width: '100%',\n          margin: 10\n        },\n        className: \"w3-spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        color: \"yt-fp-btn mt-1 send-otp-btn\",\n        className: \"smt-btn\",\n        block: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }\n      }, this.state.emailError === 'success' ? 'Verify OTP' : 'Send OTP'))) : /*#__PURE__*/React.createElement(NewPassword // token={this.state.otpToken}\n      // onChangeSuccess={this.props.onChangeSuccess}\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 19\n        }\n      }, this.state.emailError != 'success' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-forpass-bottom-info text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          // CacheState.set({ continueAsGuest: true });\n          // history.push('/');\n          _this.guestUserHandler();\n\n          console.log(\"YOUUU clicked\");\n        },\n        className: \"yt-fp-skip-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }\n      }, content.skipAsGuest)) : /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 23\n        }\n      }, this.state.otpToken == '' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-forpass-bottom-info text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }\n      }, this.state.timer > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"otp-timer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 33\n        }\n      }, \"00:\", this.state.timer) : /*#__PURE__*/React.createElement(Button, {\n        color: \"link yt-resent-otp-btn\",\n        onClick: this.emailConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 33\n        }\n      }, content.resendOTP)))))))))));\n    }\n  }]);\n\n  return ForgotPasswordOTP;\n}(ForgotPasswordController); // @ts-ignore\n\n\nexport default withRouter(ForgotPasswordOTP); // Customizable Area Start\n// Customizable Area End","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/forgot-password/src/ForgotPassword.web/index.tsx"],"names":["React","Fragment","Button","Form","FormGroup","Input","Container","CgSpinner","RiArrowLeftSLine","Link","withRouter","content","ForgotPasswordController","NewPassword","Loader","ForgotPasswordOTP","props","state","loading","otpToken","pathname","emailError","otpVerification","forgotPassword","createNewPassword","getStarted","otpHasBeenSent","forgotPasswordContentText","SendOtpBtn","notRegister","require","email","handleEmail","position","invalidEmail","emailMustBeValid","otpError","otp","handleOTP","pleaseEnterOTP","pleaseEnter5DigitOTP","invalidOTP","showSpinner","color","fontSize","width","margin","cursor","guestUserHandler","console","log","skipAsGuest","timer","emailConfirm","resendOTP"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport { CgSpinner } from 'react-icons/cg';\nimport { RiArrowLeftSLine } from 'react-icons/ri';\nimport { Link, withRouter } from 'react-router-dom';\n// @ts-ignore\nimport content from \"../../../../components/src/content\";\nimport ForgotPasswordController, { Props } from \"./ForgotPasswordController\";\nimport './css/index.scoped.css';\nimport NewPassword from \"./NewPassword.web\";\nimport Loader from \"../../../../components/src/Loader.web\";\n\n\nclass ForgotPasswordOTP extends ForgotPasswordController {\n  constructor(props: Props) {\n    super(props);\n    // Customizable Area Start\n    // Customizable Area End\n  }\n\n  render() {\n\n    return (\n      <>\n        {this.state.loading && <Loader loading={this.state.loading} />}\n        <Container>\n          <div className=\"yt-forgot-pw-wrap yt-fpp-mb-5 yt-fpp-mt-5\">\n            <div className=\"d-flex flex-wrap yt-frgt-row\">\n              <div className=\"yt-fp-inner-content yt-form-col\">\n                <div className=\"yt-fp-wrap\">\n                  {this.state.otpToken == '' ? (\n                    <Link to={{\n                      pathname: \"/\", state: { \"calledFrom\": \"cart\", \"redirect\": \"wishlist\" }\n                    }}\n                      className=\"d-flex align-items-end\" >\n                      <RiArrowLeftSLine className=\"mr-2 yt-fp-back-icn\" />\n                      <h3 className=\"yt-fp-top-back-tag-name\">\n                        {this.state.emailError == 'success' ? content.otpVerification : content.forgotPassword}\n                      </h3>\n                    </Link>\n                  ) : (\n                    <div className=\"d-flex\">\n                      <h3 className=\"yt-fp-top-back-tag-name\">\n                        {content.createNewPassword}\n                      </h3>\n                    </div>\n                  )}\n\n                  <h2 className=\"yt-fp-tag-line\">\n                    {content.getStarted}\n                  </h2>\n                  <h2 className=\"yt-fp-tag-line-2\">\n                    {this.state.otpToken == '' ? (\n                      <span>\n                        {this.state.emailError == 'success'\n                          ? content.otpHasBeenSent\n                          :\n                          content.forgotPasswordContentText\n                        }\n                      </span>\n                    ) : (\n                      ''\n                    )}\n                  </h2>\n                  <div className=\"yt-fp-form\">\n                    {this.state.otpToken == '' ? (\n                      <Form onSubmit={this.SendOtpBtn}>\n                        <FormGroup\n                          className={\n                            'mb-1 ' +\n                            (this.state.emailError == 'empty' ||\n                              this.state.emailError == 'wrong' ||\n                              this.state.notRegister != ''\n                              ? 'yt-form-err'\n                              : '')\n                          }\n                        >\n                          <img\n                            alt=\"Email Icon\"\n                            src={require('./images/emal-icn.png')}\n                            className={'yt-fp-icn'}\n                          />\n                          <Input\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\"\n                            value={this.state.email}\n                            ForgotPassFields\n                            placeholder={'Email'}\n                            onChange={this.handleEmail}\n                            className={\n                              this.state.emailError == '' || this.state.emailError == 'success'\n                                ? 'normal-input'\n                                : 'invalid-input'\n                            }\n                            invalid={!(this.state.emailError == '' || this.state.emailError == 'success')}\n                            disabled={this.state.emailError == 'success'}\n                          />\n                          <span id=\"yt-fp-email-error\" className=\"yt-fp-up-message-show\" />\n                          {this.state.emailError == 'empty' ? (\n                            <span\n                              className=\"invalid yt-form-err\"\n                              style={{ position: 'absolute' }}\n                            >\n                              {content.invalidEmail}\n                            </span>\n                          ) : (\n                            <></>\n                          )}\n                          {this.state.emailError == 'wrong' ? (\n                            <span\n                              className=\"invalid yt-form-err\"\n                              style={{ position: 'absolute' }}\n                            >\n                              {content.emailMustBeValid}\n                            </span>\n                          ) : (\n                            <></>\n                          )}\n                          {this.state.notRegister ? (\n                            <span\n                              className=\"invalid yt-form-err\"\n                              style={{ position: 'absolute' }}\n                            >\n                              {this.state.notRegister}\n                            </span>\n                          ) : (\n                            <></>\n                          )}\n                        </FormGroup>\n\n                        {this.state.emailError == 'success' ? (\n                          <FormGroup\n                            className={\n                              'mt-1 ' +\n                              (this.state.otpError == 'empty' ||\n                                this.state.otpError == 'invalid' ||\n                                this.state.otpError == 'invalidResponse'\n                                ? 'yt-form-err'\n                                : '')\n                            }\n                          >\n                            <div>\n                              <img\n                                alt=\"Password Icon\"\n                                src={require('./images/key-icn.png')}\n                                className={'yt-fp-icn'}\n                              />\n                              <Input\n                                type=\"text\"\n                                name=\"otp\"\n                                id=\"otp\"\n                                value={this.state.otp}\n                                placeholder=\"OTP\"\n                                onChange={this.handleOTP}\n                              />\n                              {/*<FaEye\n                                className={\n                                  otpError != \"\" ? \"yt-pas-eye-icn2\" : \"yt-pas-eye-icn\"\n                                }\n                              />*/}\n                            </div>\n                            {this.state.otpError == 'empty' ? (\n                              <span\n                                className=\"invalid yt-form-err\"\n                                style={{ position: 'absolute' }}\n                              >\n                                {content.pleaseEnterOTP}\n                              </span>\n                            ) : (\n                              <></>\n                            )}\n                            {this.state.otpError == 'invalid' ? (\n                              <span\n                                className=\"invalid yt-form-err\"\n                                style={{ position: 'absolute' }}\n                              >\n                                {content.pleaseEnter5DigitOTP}\n                              </span>\n                            ) : (\n                              <></>\n                            )}\n                            {this.state.otpError == 'invalidResponse' ? (\n                              <span\n                                className=\"invalid yt-form-err\"\n                                style={{ position: 'absolute' }}\n                              >\n                                {content.invalidOTP}\n                              </span>\n                            ) : (\n                              <></>\n                            )}\n                          </FormGroup>\n                        ) : (\n                          <></>\n                        )}\n                        <div className=\"mt-4 pt-1 yt-otp-sd-wrap\">\n                          {this.state.showSpinner ? (\n                            <CgSpinner\n                              style={{\n                                color: 'black',\n                                fontSize: 32,\n                                width: '100%',\n                                margin: 10,\n                              }}\n                              className=\"w3-spin\"\n                            />\n                          ) : (\n                            <Button type=\"submit\" color=\"yt-fp-btn mt-1 send-otp-btn\" className=\"smt-btn\" block>\n                              {this.state.emailError === 'success'\n                                ? 'Verify OTP'\n                                : 'Send OTP'\n                              }\n                            </Button>\n                          )}\n                        </div>\n                      </Form>\n                    ) : (\n                      <NewPassword\n                      // token={this.state.otpToken}\n                      // onChangeSuccess={this.props.onChangeSuccess}\n                      />\n                    )}\n                  </div>\n                  <Fragment>\n                    {this.state.emailError != 'success' ? (\n                      <div className=\"yt-forpass-bottom-info text-center\">\n                        <span\n                          style={{ cursor: 'pointer' }}\n                          onClick={() => {\n                            // CacheState.set({ continueAsGuest: true });\n                            // history.push('/');\n                            this.guestUserHandler();\n                            console.log(\"YOUUU clicked\");\n                          }}\n                          className=\"yt-fp-skip-btn\"\n                        >\n                          {content.skipAsGuest}\n                        </span>\n                      </div>\n                    ) : (\n                      <Fragment>\n                        {this.state.otpToken == '' && (\n                          <div className=\"yt-forpass-bottom-info text-center\">\n                            <div>\n                              {this.state.timer > 0 ? (\n                                <div className=\"otp-timer\">00:{this.state.timer}</div>\n                              ) : (\n                                <Button\n                                  color=\"link yt-resent-otp-btn\"\n                                  onClick={this.emailConfirm}\n                                >\n                                  {content.resendOTP}\n                                </Button>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Fragment>\n                    )}\n                  </Fragment>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n\n// @ts-ignore\nexport default withRouter(ForgotPasswordOTP);\n// Customizable Area Start\n\n// Customizable Area End\n"]},"metadata":{},"sourceType":"module"}