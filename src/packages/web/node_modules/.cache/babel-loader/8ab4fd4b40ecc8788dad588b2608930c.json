{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // @ts-ignore\n\nimport isEmpty from \"lodash/isEmpty\"; // Customizable Area Start\n// Customizable Area End\n\nexport var configJSON = require(\"./config\");\n\nvar HelpCenterController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(HelpCenterController, _BlockComponent);\n\n  var _super = _createSuper(HelpCenterController);\n\n  // Customizable Area Start\n  // Customizable Area End\n  function HelpCenterController(props) {\n    var _this;\n\n    _classCallCheck(this, HelpCenterController);\n\n    _this = _super.call(this, props);\n    _this.helpCenterallId = \"\";\n    _this.validationApiCallId = \"\";\n    _this.emailReg = void 0;\n    _this.labelTitle = \"\";\n\n    _this.routeToProfile = function () {\n      var isLoggedIn = _this.state.isLoggedIn;\n\n      _this.props.history.push(isLoggedIn ? '/profilebio' : '/');\n    };\n\n    _this.routeHelpCenter = function (value) {\n      if (value !== undefined) {\n        var path = '/help-center/' + value;\n\n        _this.props.history.push(path);\n      } else {\n        var _path = '/help-center';\n\n        _this.props.history.push(_path);\n      }\n    };\n\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this)); // Customizable Area Start\n\n    _this.subScribedMessages = [getName(MessageEnum.CountryCodeMessage), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.ReciveUserCredentials)];\n    _this.state = {\n      activeTab: \"1\",\n      activeMobileTab: false,\n      errorData: null,\n      loading: true,\n      helpCenterData: [],\n      tabName: undefined,\n      isLoggedIn: false\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(HelpCenterController, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _nextProps$match, _nextProps$match$para;\n\n      if (nextProps === null || nextProps === void 0 ? void 0 : (_nextProps$match = nextProps.match) === null || _nextProps$match === void 0 ? void 0 : (_nextProps$match$para = _nextProps$match.params) === null || _nextProps$match$para === void 0 ? void 0 : _nextProps$match$para.slug) {\n        var _nextProps$match2, _nextProps$match2$par;\n\n        this.setState({\n          tabName: nextProps === null || nextProps === void 0 ? void 0 : (_nextProps$match2 = nextProps.match) === null || _nextProps$match2 === void 0 ? void 0 : (_nextProps$match2$par = _nextProps$match2.params) === null || _nextProps$match2$par === void 0 ? void 0 : _nextProps$match2$par.slug\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this$props, _this$props$match, _this$props$match$par;\n\n        var user, _this$props2, _this$props2$match, _this$props2$match$pa;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                window.scrollTo(0, 0); // @ts-ignore\n\n                user = JSON.parse(localStorage.getItem(\"user\"));\n\n                if (!isEmpty(user)) {\n                  this.setState({\n                    isLoggedIn: true\n                  });\n                }\n\n                if ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$match = _this$props.match) === null || _this$props$match === void 0 ? void 0 : (_this$props$match$par = _this$props$match.params) === null || _this$props$match$par === void 0 ? void 0 : _this$props$match$par.slug) {\n                  this.setState({\n                    tabName: (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$match = _this$props2.match) === null || _this$props2$match === void 0 ? void 0 : (_this$props2$match$pa = _this$props2$match.params) === null || _this$props2$match$pa === void 0 ? void 0 : _this$props2$match$pa.slug\n                  });\n                }\n\n                this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n                this.getHelpceterData(); // Customizable Area Start\n                // Customizable Area End\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps() {\n      window.scrollTo(0, 0);\n    } // Customizable Area Start\n    // Customizable Area End\n\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var apiRequestCallID, responseJSON, errorMessage;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Customizable Area Start\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallID = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (this.helpCenterallId === apiRequestCallID) {\n                    this.setState({\n                      helpCenterData: responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.data,\n                      loading: false\n                    });\n                  }\n                } // Customizable Area End\n\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"getHelpceterData\",\n    value: function getHelpceterData() {\n      // const serviceType = serviceTypes.getHelpCenterData();\n      var token = localStorage.getItem(\"token\");\n      var headers = {\n        token: token,\n        \"Content-Type\": \"application/json\"\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.helpCenterallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getHelpCenterAPIEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.GetMethodType);\n      console.log(\"request\", requestMessage); // Sending Request to call API.\n\n      runEngine.sendMessage(requestMessage.id, requestMessage); // axios.get(\"https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/bx_block_help_center/help_centers\", {\n      //   headers: {\n      //   'Content-Type': 'application/json'\n      //   }\n      // })\n      //   .then((res) => {\n      //     if(res?.data?.data) {\n      //       this.setState({helpCenterData: res?.data?.data });\n      //     }\n      //     // if (error) {\n      //       // window.notify([{ message: error.message }]);\n      //     //   if (error.status === 404) {\n      //     //     setErrorData({\n      //     //       title: 'Oh Noes!, 404 Not Found',\n      //     //       message: 'The product you are looking for is not available!',\n      //     //       buttonText: 'Go to Home',\n      //     //       onButtonPress: () => props.history.push('/'),\n      //     //     });\n      //     //   } else {\n      //     //     setErrorData({\n      //     //       title: 'Oh Noes!, Error Occured',\n      //     //       message: error.message,\n      //     //       buttonText: 'Retry',\n      //     //       onButtonPress: () => {\n      //     //         setLoading(true);\n      //     //         setErrorData(null);\n      //     //         setHelpCenterData(undefined);\n      //     //         getHelpceterData();\n      //     //       },\n      //     //     });\n      //     //   }\n      //     // } else if (response) {\n      //     //   if (typeof response.data.data.help_centers === 'object') {\n      //     //     console.log('Help center data', response.data.data.help_centers);\n      //     //     setHelpCenterData(response?.data?.data?.help_centers);\n      //     //     setErrorData(null);\n      //     //   } else {\n      //     //     setErrorData({\n      //     //       title: 'Oh Noes!, Error Occured',\n      //     //       message: 'Unknown response received from server.',\n      //     //       buttonText: 'Retry',\n      //     //       onButtonPress: () => {\n      //     //         setLoading(true);\n      //     //         setErrorData(null);\n      //     //         setHelpCenterData(undefined);\n      //     //         getHelpceterData();\n      //     //       },\n      //     //     });\n      //     //   }\n      //     // }\n      //   })\n      //   .finally(() => setTimeout(() => this.setState({ loading: false }), 1000));\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      var activeTab = this.state.activeTab;\n\n      if (activeTab !== tab) {\n        // setActiveTab(tab);\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"routeHelpCenterMb\",\n    value: function routeHelpCenterMb(value) {\n      if (value !== undefined) {\n        var path = '/help-center/' + value;\n        this.props.history.push(path); // setactiveMobileTab(!activeMobileTab);\n\n        this.setState(function (preState) {\n          return {\n            activeMobileTab: !preState.activeMobileTab\n          };\n        });\n      } else {\n        var _path2 = '/help-center';\n        this.props.history.push(_path2);\n        this.setState(function (preState) {\n          return {\n            activeMobileTab: !preState.activeMobileTab\n          };\n        }); // setactiveMobileTab(!activeMobileTab);\n      }\n    }\n  }]);\n\n  return HelpCenterController;\n}(BlockComponent);\n\nexport { HelpCenterController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/helpcenter/src/HelpCenterController.web.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","isEmpty","configJSON","require","HelpCenterController","props","helpCenterallId","validationApiCallId","emailReg","labelTitle","routeToProfile","isLoggedIn","state","history","push","routeHelpCenter","value","undefined","path","receive","bind","subScribedMessages","CountryCodeMessage","RestAPIResponceMessage","ReciveUserCredentials","activeTab","activeMobileTab","errorData","loading","helpCenterData","tabName","attachBuildingBlock","nextProps","match","params","slug","setState","window","scrollTo","user","JSON","parse","localStorage","getItem","send","RequestUserCredentials","getHelpceterData","from","message","id","apiRequestCallID","getData","RestAPIResponceDataMessage","responseJSON","RestAPIResponceSuccessMessage","errorMessage","RestAPIResponceErrorMessage","data","token","headers","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","getHelpCenterAPIEndPoint","RestAPIRequestHeaderMessage","RestAPIRequestMethodMessage","GetMethodType","console","log","sendMessage","tab","preState"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\n\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n// @ts-ignore\nimport isEmpty from \"lodash/isEmpty\";\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  history: any;\n  match: any;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  activeTab: string;\n  activeMobileTab: boolean;\n  errorData: any;\n  loading: boolean;\n  helpCenterData: any;\n  tabName: any;\n  isLoggedIn: boolean;\n  // Customizable Area End\n}\n\ninterface SS {\n  // Customizable Area Start\n  id: any;\n  // Customizable Area End\n}\n\nexport default class HelpCenterController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n\n  // Customizable Area Start\n  helpCenterallId: string = \"\";\n  validationApiCallId: string = \"\";\n  emailReg: RegExp;\n  labelTitle: string = \"\";\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.CountryCodeMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.ReciveUserCredentials)\n    ]\n\n    this.state = {\n      activeTab: \"1\",\n      activeMobileTab: false,\n      errorData: null,\n      loading: true,\n      helpCenterData: [],\n      tabName: undefined,\n      isLoggedIn: false,\n    };\n\n    // Customizable Area End\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    if (nextProps?.match?.params?.slug) {\n      this.setState({ tabName: nextProps?.match?.params?.slug })\n    }\n  }\n\n  async componentDidMount() {\n    window.scrollTo(0, 0);\n    // @ts-ignore\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if (!isEmpty(user)) {\n      this.setState({ isLoggedIn: true });\n    }\n    if (this.props?.match?.params?.slug) {\n      this.setState({ tabName: this.props?.match?.params?.slug })\n    }\n    this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n    this.getHelpceterData();\n    // Customizable Area Start\n    // Customizable Area End\n  }\n\n  UNSAFE_componentWillReceiveProps() {\n    window.scrollTo(0, 0);\n  }\n\n  // Customizable Area Start\n\n  // Customizable Area End\n\n  async receive(from: string, message: Message) {\n\n    // Customizable Area Start\n    if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n      const apiRequestCallID = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n      const responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      const errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n      if (this.helpCenterallId === apiRequestCallID) {\n        this.setState({ helpCenterData: responseJSON?.data, loading: false });\n      }\n    }\n    // Customizable Area End\n  }\n\n  getHelpceterData() {\n    // const serviceType = serviceTypes.getHelpCenterData();\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      token,\n      \"Content-Type\": \"application/json\"\n    }\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.helpCenterallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getHelpCenterAPIEndPoint);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.GetMethodType);\n    console.log(\"request\", requestMessage);\n\n    // Sending Request to call API.\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    // axios.get(\"https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/bx_block_help_center/help_centers\", {\n    //   headers: {\n    //   'Content-Type': 'application/json'\n    //   }\n    // })\n    //   .then((res) => {\n    //     if(res?.data?.data) {\n    //       this.setState({helpCenterData: res?.data?.data });\n    //     }\n    //     // if (error) {\n    //       // window.notify([{ message: error.message }]);\n    //     //   if (error.status === 404) {\n    //     //     setErrorData({\n    //     //       title: 'Oh Noes!, 404 Not Found',\n    //     //       message: 'The product you are looking for is not available!',\n    //     //       buttonText: 'Go to Home',\n    //     //       onButtonPress: () => props.history.push('/'),\n    //     //     });\n    //     //   } else {\n    //     //     setErrorData({\n    //     //       title: 'Oh Noes!, Error Occured',\n    //     //       message: error.message,\n    //     //       buttonText: 'Retry',\n    //     //       onButtonPress: () => {\n    //     //         setLoading(true);\n    //     //         setErrorData(null);\n    //     //         setHelpCenterData(undefined);\n    //     //         getHelpceterData();\n    //     //       },\n    //     //     });\n    //     //   }\n    //     // } else if (response) {\n    //     //   if (typeof response.data.data.help_centers === 'object') {\n    //     //     console.log('Help center data', response.data.data.help_centers);\n    //     //     setHelpCenterData(response?.data?.data?.help_centers);\n    //     //     setErrorData(null);\n    //     //   } else {\n    //     //     setErrorData({\n    //     //       title: 'Oh Noes!, Error Occured',\n    //     //       message: 'Unknown response received from server.',\n    //     //       buttonText: 'Retry',\n    //     //       onButtonPress: () => {\n    //     //         setLoading(true);\n    //     //         setErrorData(null);\n    //     //         setHelpCenterData(undefined);\n    //     //         getHelpceterData();\n    //     //       },\n    //     //     });\n    //     //   }\n    //     // }\n    //   })\n    //   .finally(() => setTimeout(() => this.setState({ loading: false }), 1000));\n  }\n\n  toggle(tab: any) {\n    const { activeTab } = this.state;\n    if (activeTab !== tab) {\n      // setActiveTab(tab);\n      this.setState({ activeTab: tab })\n    }\n  };\n\n  // const history = useHistory();\n  routeToProfile = () => {\n    const { isLoggedIn } = this.state;\n    this.props.history.push(isLoggedIn ? '/profilebio' : '/');\n  };\n\n  routeHelpCenter = (value: any) => {\n    if (value !== undefined) {\n      let path = '/help-center/' + value;\n      this.props.history.push(path);\n    } else {\n      let path = '/help-center';\n      this.props.history.push(path);\n    }\n  };\n\n  routeHelpCenterMb(value: any) {\n    if (value !== undefined) {\n      let path = '/help-center/' + value;\n      this.props.history.push(path);\n      // setactiveMobileTab(!activeMobileTab);\n      this.setState(preState => ({\n        activeMobileTab: !preState.activeMobileTab\n      }))\n    } else {\n      let path = '/help-center';\n      this.props.history.push(path);\n      this.setState(preState => ({\n        activeMobileTab: !preState.activeMobileTab\n      }))\n      // setactiveMobileTab(!activeMobileTab);\n    }\n  };\n\n  // if (tabName !== undefined && helpCenterData !== undefined) {\n  //   let matchTabName = '';\n  //   helpCenterData.map((data, index) => {\n  //     if (tabName === data.title) {\n  //       matchTabName = index + 1;\n  //     }\n  //   });\n  //   toggle(matchTabName);\n  // }\n\n  // if (tabName === undefined && helpCenterData !== undefined) {\n  //   toggle(1);\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module"}