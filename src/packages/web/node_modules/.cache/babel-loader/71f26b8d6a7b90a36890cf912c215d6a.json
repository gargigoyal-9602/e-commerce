{"ast":null,"code":"import _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Do not change anything in the protected area. Doing so will be detected and your commit will be rejected.\n// Protected Area Start\nimport { Channel } from './Channel';\n\nvar RunEngine = /*#__PURE__*/function () {\n  function RunEngine() {\n    _classCallCheck(this, RunEngine);\n\n    this.channels = void 0;\n\n    this.debugLog = function (tag) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      // console.log('=====================Debug Log Start======================');\n      if (data !== undefined) {//console.log(tag + '====>' + JSON.stringify(data));\n      } //console.log('=====================Debug Log End======================');\n      //console.log('        ');\n\n    };\n\n    this.channels = new Map();\n    this.addChannel = this.addChannel.bind(this);\n    this.attachBuildingBlock = this.attachBuildingBlock.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.unSubscribeFromMessages = this.unSubscribeFromMessages.bind(this);\n  }\n\n  _createClass(RunEngine, [{\n    key: \"addChannel\",\n    value: function addChannel(topic) {\n      this.channels.set(topic, new Channel(topic));\n    }\n  }, {\n    key: \"unSubscribeFromMessages\",\n    value: function unSubscribeFromMessages(block, subscribedMessages) {\n      var _this = this;\n\n      if (subscribedMessages) {\n        subscribedMessages.forEach(function (topic) {\n          var channel = _this.channels.get(topic);\n\n          if (channel) {\n            channel.unsub(block);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"attachBuildingBlock\",\n    value: function attachBuildingBlock(block, subscribedMessages) {\n      var _this2 = this;\n\n      subscribedMessages.forEach(function (topic) {\n        if (!_this2.channels.has(topic)) {\n          _this2.addChannel(topic);\n        }\n\n        var channel = _this2.channels.get(topic);\n\n        if (channel) {\n          channel.sub(block);\n        }\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(from, message) {\n      if (message && message.id) {\n        var channel = this.channels.get(message.id);\n\n        if (channel) {\n          channel.subscribers.forEach(function (block) {\n            return block.receive(from, message);\n          });\n        }\n      }\n    }\n  }]);\n\n  return RunEngine;\n}();\n\nvar runEngine = new RunEngine();\nexport { runEngine }; // Protected Area End","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/framework/src/RunEngine.tsx"],"names":["Channel","RunEngine","channels","debugLog","tag","data","undefined","Map","addChannel","bind","attachBuildingBlock","sendMessage","unSubscribeFromMessages","topic","set","block","subscribedMessages","forEach","channel","get","unsub","has","sub","from","message","id","subscribers","receive","runEngine"],"mappings":";;AAAA;AAEA;AAEA,SAASA,OAAT,QAAwB,WAAxB;;IAIMC,S;AAYJ,uBAAc;AAAA;;AAAA,SAXdC,QAWc;;AAAA,SATdC,QASc,GATH,UAACC,GAAD,EAAgC;AAAA,UAArBC,IAAqB,uEAAT,IAAS;;AAC1C;AACC,UAAIA,IAAI,KAAKC,SAAb,EAAwB,CACtB;AACD,OAJwC,CAKzC;AACA;;AACD,KAEa;;AACZ,SAAKJ,QAAL,GAAgB,IAAIK,GAAJ,EAAhB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BH,IAA7B,CAAkC,IAAlC,CAA/B;AACD;;;;WAED,oBAAWI,KAAX,EAAgC;AAC9B,WAAKX,QAAL,CAAcY,GAAd,CAAkBD,KAAlB,EAAyB,IAAIb,OAAJ,CAAYa,KAAZ,CAAzB;AACD;;;WAED,iCAAwBE,KAAxB,EAAuCC,kBAAvC,EAA2E;AAAA;;AACzE,UAAIA,kBAAJ,EAAwB;AACtBA,QAAAA,kBAAkB,CAACC,OAAnB,CAA2B,UAAAJ,KAAK,EAAI;AAClC,cAAMK,OAAO,GAAG,KAAI,CAAChB,QAAL,CAAciB,GAAd,CAAkBN,KAAlB,CAAhB;;AACA,cAAIK,OAAJ,EAAa;AACXA,YAAAA,OAAO,CAACE,KAAR,CAAcL,KAAd;AACD;AACF,SALD;AAMD;AACF;;;WAED,6BAAoBA,KAApB,EAAmCC,kBAAnC,EAAuE;AAAA;;AACrEA,MAAAA,kBAAkB,CAACC,OAAnB,CAA2B,UAAAJ,KAAK,EAAI;AAClC,YAAI,CAAC,MAAI,CAACX,QAAL,CAAcmB,GAAd,CAAkBR,KAAlB,CAAL,EAA+B;AAC7B,UAAA,MAAI,CAACL,UAAL,CAAgBK,KAAhB;AACD;;AAED,YAAMK,OAAO,GAAG,MAAI,CAAChB,QAAL,CAAciB,GAAd,CAAkBN,KAAlB,CAAhB;;AACA,YAAIK,OAAJ,EAAa;AACXA,UAAAA,OAAO,CAACI,GAAR,CAAYP,KAAZ;AACD;AACF,OATD;AAUD;;;WAED,qBAAYQ,IAAZ,EAA0BC,OAA1B,EAAkD;AAChD,UAAIA,OAAO,IAAIA,OAAO,CAACC,EAAvB,EAA2B;AACzB,YAAMP,OAAO,GAAG,KAAKhB,QAAL,CAAciB,GAAd,CAAkBK,OAAO,CAACC,EAA1B,CAAhB;;AACA,YAAIP,OAAJ,EAAa;AACXA,UAAAA,OAAO,CAACQ,WAAR,CAAoBT,OAApB,CAA4B,UAAAF,KAAK;AAAA,mBAAIA,KAAK,CAACY,OAAN,CAAcJ,IAAd,EAAoBC,OAApB,CAAJ;AAAA,WAAjC;AACD;AACF;AACF;;;;;;AAGH,IAAMI,SAAS,GAAG,IAAI3B,SAAJ,EAAlB;AACA,SAAS2B,SAAT,G,CAEA","sourcesContent":["// Do not change anything in the protected area. Doing so will be detected and your commit will be rejected.\n\n// Protected Area Start\n\nimport { Channel } from './Channel';\nimport { IBlock } from './IBlock';\nimport { Message } from './Message';\n\nclass RunEngine {\n  channels: Map<string, Channel>;\n\n  debugLog = (tag: any, data: any = null) => {\n   // console.log('=====================Debug Log Start======================');\n    if (data !== undefined) {\n      //console.log(tag + '====>' + JSON.stringify(data));\n    }\n    //console.log('=====================Debug Log End======================');\n    //console.log('        ');\n  };\n\n  constructor() {\n    this.channels = new Map<string, Channel>();\n    this.addChannel = this.addChannel.bind(this);\n    this.attachBuildingBlock = this.attachBuildingBlock.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.unSubscribeFromMessages = this.unSubscribeFromMessages.bind(this);\n  }\n\n  addChannel(topic: string): void {\n    this.channels.set(topic, new Channel(topic));\n  }\n\n  unSubscribeFromMessages(block: IBlock, subscribedMessages: string[]): void {\n    if (subscribedMessages) {\n      subscribedMessages.forEach(topic => {\n        const channel = this.channels.get(topic);\n        if (channel) {\n          channel.unsub(block);\n        }\n      });\n    }\n  }\n\n  attachBuildingBlock(block: IBlock, subscribedMessages: string[]): void {\n    subscribedMessages.forEach(topic => {\n      if (!this.channels.has(topic)) {\n        this.addChannel(topic);\n      }\n\n      const channel = this.channels.get(topic);\n      if (channel) {\n        channel.sub(block);\n      }\n    });\n  }\n\n  sendMessage(from: string, message: Message): void {\n    if (message && message.id) {\n      const channel = this.channels.get(message.id);\n      if (channel) {\n        channel.subscribers.forEach(block => block.receive(from, message));\n      }\n    }\n  }\n}\n\nconst runEngine = new RunEngine();\nexport { runEngine };\n\n// Protected Area End\n"]},"metadata":{},"sourceType":"module"}