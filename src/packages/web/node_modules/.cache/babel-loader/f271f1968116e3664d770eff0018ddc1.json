{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/email-account-registration/src/EmailRegistartion.web.tsx\";\n//@ts-nocheck;\nimport React, { Fragment } from 'react';\nimport { Button, FormGroup, Alert } from 'reactstrap';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { CgSpinner } from 'react-icons/cg';\nimport firebase from 'firebase'; // @ts-ignore\n\nimport content from '../../../components/src/content.js'; // import content from \"../../theme/src/content\";\n\nimport '../assets/styles/index.css';\nimport EmailAccountRegistrationController from \"./EmailRegistartionController.web\";\nimport { EmailIcon, pwdIcon, userIcon, numberImg } from './assets'; // import Loader from \"../../theme/src/Loader.web\";\n\nimport Loader from '../../../components/src/Loader.web'; // @ts-ignore\n\nimport includes from \"lodash/includes\"; // Validations start\n\nvar signUpValidation = Yup.object().shape({\n  FullName: Yup.string().min(3, 'Name is Too Short').required('Name is Required'),\n  Email: Yup.string().email().required('Email is Required'),\n  password: Yup.string().matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, 'Password must contain atleast a capital letter, a lowercase letter, a number and a special character').required('Password is Required'),\n  fullPhoneNumber: Yup.string().matches(/^\\d+$/, \"Only Numbers allow\").required(\"Phone Number is required\")\n}); //Validations End\n\nvar EmailAccountLoginBlock = /*#__PURE__*/function (_EmailAccountRegistra) {\n  _inherits(EmailAccountLoginBlock, _EmailAccountRegistra);\n\n  var _super = _createSuper(EmailAccountLoginBlock);\n\n  function EmailAccountLoginBlock() {\n    var _this;\n\n    _classCallCheck(this, EmailAccountLoginBlock);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.routeHelpCenter = function (value) {\n      if (value !== undefined && includes(value.toLowerCase(), \"about\")) {\n        //@ts-ignore\n        _this.props.history.push(\"/aboutus\");\n      } else if (value !== undefined) {\n        var path = '/help-center/' + value; //@ts-ignore\n\n        _this.props.history.push(path);\n      } else {\n        var _path = '/help-center'; //@ts-ignore\n\n        _this.props.history.push(_path);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(EmailAccountLoginBlock, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!firebase.apps.length) {\n                  // firebase.initializeApp(config);\n                  firebase.initializeApp({\n                    apiKey: 'AIzaSyCp4CXWD1k7C83aDqbBjqupWcgXib1xTuo',\n                    authDomain: 'studio-store-eb05b.firebaseapp.com'\n                  });\n                }\n\n                firebase.auth().onAuthStateChanged(function (result) {\n                  _this2.setState(_objectSpread({}, _this2.state));\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(a, b) {\n      var _this3 = this;\n\n      if (b.showAlert) {\n        //console.log(\"HI \");\n        setTimeout(function () {\n          _this3.setState({\n            showAlert: false,\n            message: '',\n            messageType: ''\n          });\n        }, 2000);\n        return true;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(\"thisRegistartion,\", this.props);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.loading && /*#__PURE__*/React.createElement(Loader, {\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-signup-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"yt-signup-tag-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, content.getStarted), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-signup-form mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          FullName: '',\n          Email: '',\n          password: '',\n          fullPhoneNumber: \"\"\n        },\n        onSubmit: this.signupUser // onSubmit={(values) => {\n        //   this.registartionEmail(values);\n        // }}\n        ,\n        validationSchema: signUpValidation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, function (_ref) {\n        var _this4$props, _this4$props2, _this4$props3, _this4$props4, _this4$props5, _this4$props6;\n\n        var errors = _ref.errors,\n            touched = _ref.touched,\n            setValues = _ref.setValues,\n            values = _ref.values,\n            handleSubmit = _ref.handleSubmit;\n        // const cacheState = useSelector((state) => state.cache);\n        // useEffect(() => {\n        //   setValues(values);\n        // }, [cacheState?.language]);\n        return /*#__PURE__*/React.createElement(Form, {\n          translate: \"yes\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup // className={errors.FullName && touched.FullName && 'yt-form-err'}\n        , {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"User Profile Image\",\n          src: userIcon // src={require('./images/userprofile-icn.png')}\n          ,\n          className: errors.FullName && touched.FullName ? ' yt-login-icn2' : 'yt-login-icn',\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Field, {\n          name: \"FullName\",\n          type: \"text\",\n          id: \"FullName\",\n          placeholder: \"Full Name\",\n          className: 'form-control' + (errors.FullName && touched.FullName ? ' is-invalid invalid' : ''),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          id: \"yt-signup-name-error\",\n          className: \"yt-sign-up-message-show\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 45\n          }\n        }), touched.FullName && errors.FullName && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"invalid-feedback\",\n          style: {\n            position: 'absolute'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 49\n          }\n        }, errors.FullName)), /*#__PURE__*/React.createElement(FormGroup // className={errors.Email && touched.Email && 'yt-form-err'}\n        , {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"Email Icon\",\n          src: EmailIcon // src={require('./images/emal-icn.png')}\n          ,\n          className: errors.Email && touched.Email ? ' yt-login-icn2' : 'yt-login-icn',\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Field, {\n          name: \"Email\",\n          type: \"text\",\n          placeholder: \"Email\",\n          className: 'form-control' + (errors.Email && touched.Email ? ' is-invalid invalid' : ''),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 45\n          }\n        }), touched.Email && errors.Email && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"invalid-feedback\",\n          style: {\n            position: 'absolute'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 53\n          }\n        }, errors.Email)), /*#__PURE__*/React.createElement(FormGroup // className={errors.Email && touched.Email && 'yt-form-err'}\n        , {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"Phone Icon\",\n          src: numberImg // src={require('./images/number-icn-min.png')}\n          ,\n          className: errors.Email && touched.Email ? ' yt-login-icn2' : 'yt-login-icn',\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Field, {\n          name: \"fullPhoneNumber\",\n          type: \"text\",\n          placeholder: \"Phone Number\",\n          className: 'form-control' + (errors.fullPhoneNumber && touched.fullPhoneNumber ? ' is-invalid invalid' : ''),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 45\n          }\n        }), touched.fullPhoneNumber && errors.fullPhoneNumber && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"invalid-feedback\",\n          style: {\n            position: 'absolute'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 53\n          }\n        }, errors.fullPhoneNumber)), /*#__PURE__*/React.createElement(FormGroup // className={'mb-4 ' + errors.password &&touched.password &&'yt-form-err'}\n        , {\n          className: \"mb-4\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"Password Icon\" //@ts-ignore\n          ,\n          id: ((_this4$props = _this4.props) === null || _this4$props === void 0 ? void 0 : _this4$props.isOpenPopUp) ? 'passwordkey' : '',\n          src: pwdIcon // src={require('./images/key-icn.png')}\n          ,\n          className: errors.password && touched.password ? 'yt-login-icn2' : 'yt-login-icn',\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Field, {\n          name: \"password\",\n          type: _this4.state.showPass ? 'text' : 'password',\n          id: \"password\",\n          placeholder: \"Password\",\n          className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 45\n          }\n        }), touched.password && errors.password ? _this4.state.showPass ? /*#__PURE__*/React.createElement(FaEyeSlash, {\n          onClick: _this4.showPassword,\n          className: \"yt-login-pass-vie-icn\" //@ts-ignore\n          ,\n          id: ((_this4$props2 = _this4.props) === null || _this4$props2 === void 0 ? void 0 : _this4$props2.isOpenPopUp) ? 'eyeicon' : '',\n          style: {\n            marginRight: 20\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 53\n          }\n        }) : /*#__PURE__*/React.createElement(FaEye, {\n          onClick: _this4.showPassword,\n          className: \"yt-login-pass-vie-icn\" //@ts-ignore\n          ,\n          id: ((_this4$props3 = _this4.props) === null || _this4$props3 === void 0 ? void 0 : _this4$props3.isOpenPopUp) ? 'eyeicon' : '',\n          style: {\n            marginRight: 20\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 53\n          }\n        }) : _this4.state.showPass ? /*#__PURE__*/React.createElement(FaEyeSlash, {\n          onClick: _this4.showPassword,\n          className: \"yt-login-pass-vie-icn\" //@ts-ignore\n          ,\n          id: ((_this4$props4 = _this4.props) === null || _this4$props4 === void 0 ? void 0 : _this4$props4.isOpenPopUp) ? 'eyeicon' : '',\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 49\n          }\n        }) : /*#__PURE__*/React.createElement(FaEye, {\n          onClick: _this4.showPassword,\n          className: \"yt-login-pass-vie-icn\" //@ts-ignore\n          ,\n          id: ((_this4$props5 = _this4.props) === null || _this4$props5 === void 0 ? void 0 : _this4$props5.isOpenPopUp) ? 'eyeicon' : '',\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 49\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"yt-signup-pass-info pb-1\" //@ts-ignore\n          ,\n          style: ((_this4$props6 = _this4.props) === null || _this4$props6 === void 0 ? void 0 : _this4$props6.isOpenPopUp) ? {\n            opacity: touched.password && errors.password ? 0 : 1,\n            display: 'block'\n          } : {\n            opacity: touched.password && errors.password ? 0 : 1\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 45\n          }\n        }, content.passwordSuggestionMsg), touched.password && errors.password && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"invalid-feedback pb-1\",\n          style: {\n            position: 'absolute'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 49\n          }\n        }, errors.password)), _this4.state.emailErr.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"err_invalid\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 45\n          }\n        }, _this4.state.emailErr, /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 49\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 41\n          }\n        }, _this4.state.showSpinner ? /*#__PURE__*/React.createElement(CgSpinner, {\n          style: {\n            color: 'black',\n            fontSize: 32,\n            width: '100%',\n            margin: 10\n          },\n          className: \"w3-spin\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 49\n          }\n        }) : /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          className: \"signup-btn\",\n          color: \"secondary yt-signup-btn mt-5\",\n          block: true,\n          class: \"w3-ripple\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 49\n          }\n        }, content.signup)));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-signup-bottom-info text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }\n      }, true && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-4text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          cursor: 'pointer'\n        },\n        className: \"w3-ripple yt-signup-skip-btn\",\n        onClick: function onClick() {\n          return _this4.guestRegister();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 33\n        }\n      }, content.skipAsGuest))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lp-bottom-links\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"yt-signup-aggre-tag mb-3 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }\n      }, content.bySigningIn), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex yt-signup-term-privacy-link justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/help-center/Terms%20&%20Conditions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 29\n        }\n      }, content.termNcondition), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mx-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 29\n        }\n      }, \"&\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/help-center/Privacy%20Policy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 29\n        }\n      }, content.privacyPolicy))), this.state.showAlert ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n        color: this.state.messageType ? this.state.messageType : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 29\n        }\n      }, this.state.message && this.state.message)) : ''));\n    }\n  }]);\n\n  return EmailAccountLoginBlock;\n}(EmailAccountRegistrationController); // @ts-ignore\n\n\nexport default withRouter(EmailAccountLoginBlock);","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/email-account-registration/src/EmailRegistartion.web.tsx"],"names":["React","Fragment","Button","FormGroup","Alert","Formik","Field","Form","Yup","Link","withRouter","FaEye","FaEyeSlash","CgSpinner","firebase","content","EmailAccountRegistrationController","EmailIcon","pwdIcon","userIcon","numberImg","Loader","includes","signUpValidation","object","shape","FullName","string","min","required","Email","email","password","matches","fullPhoneNumber","EmailAccountLoginBlock","routeHelpCenter","value","undefined","toLowerCase","props","history","push","path","apps","length","initializeApp","apiKey","authDomain","auth","onAuthStateChanged","result","setState","state","a","b","showAlert","setTimeout","message","messageType","console","log","loading","getStarted","signupUser","errors","touched","setValues","values","handleSubmit","position","isOpenPopUp","showPass","showPassword","marginRight","opacity","display","passwordSuggestionMsg","emailErr","showSpinner","color","fontSize","width","margin","signup","cursor","guestRegister","skipAsGuest","bySigningIn","termNcondition","privacyPolicy"],"mappings":"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","sourcesContent":["//@ts-nocheck;\nimport React, { Fragment } from 'react';\nimport { Button, FormGroup, Alert } from 'reactstrap';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FaFacebookF, FaRegEnvelope, FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { CgSpinner } from 'react-icons/cg';\nimport firebase from 'firebase';\n// @ts-ignore\nimport content from '../../../components/src/content.js';\n// import content from \"../../theme/src/content\";\nimport '../assets/styles/index.css';\nimport EmailAccountRegistrationController from \"./EmailRegistartionController.web\";\nimport { EmailIcon, pwdIcon, phoneIcon, userIcon, numberImg, logoImg } from './assets';\n// import Loader from \"../../theme/src/Loader.web\";\nimport Loader from '../../../components/src/Loader.web';\n// @ts-ignore\nimport includes from \"lodash/includes\";\n\n// Validations start\nconst signUpValidation = Yup.object().shape({\n    FullName: Yup.string().min(3, 'Name is Too Short').required('Name is Required'),\n    Email: Yup.string().email().required('Email is Required'),\n    password: Yup.string().matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, 'Password must contain atleast a capital letter, a lowercase letter, a number and a special character').required('Password is Required'),\n    fullPhoneNumber: Yup.string().matches(/^\\d+$/, \"Only Numbers allow\").required(\"Phone Number is required\")\n});\n//Validations End\n\nclass EmailAccountLoginBlock extends EmailAccountRegistrationController {\n   \n\n    async componentDidMount() {\n        if (!firebase.apps.length) {\n            // firebase.initializeApp(config);\n            firebase.initializeApp({\n                apiKey: 'AIzaSyCp4CXWD1k7C83aDqbBjqupWcgXib1xTuo',\n                authDomain: 'studio-store-eb05b.firebaseapp.com',\n            });\n        }\n        firebase.auth().onAuthStateChanged(result => {\n            this.setState({\n                ...this.state,\n                // socialAccountResult: result\n            })\n        });\n    };\n    public shouldComponentUpdate(a: any, b: any) {\n        if (b.showAlert) {\n            //console.log(\"HI \");\n            setTimeout(() => {\n                this.setState({\n                    showAlert: false,\n                    message: '',\n                    messageType: ''\n                })\n            }, 2000);\n            return true\n        } else {\n            return true\n        }\n    }\n    routeHelpCenter = (value: any) => {\n        if (value !== undefined && includes(value.toLowerCase(), \"about\")) {\n            //@ts-ignore\n            this.props.history.push(\"/aboutus\");\n        } else if (value !== undefined) {\n            let path = '/help-center/' + value;\n            //@ts-ignore\n            this.props.history.push(path);\n        } else {\n            let path = '/help-center';\n            //@ts-ignore\n            this.props.history.push(path);\n        }\n    };\n\n    render() {\n        console.log(\"thisRegistartion,\", this.props);\n        return (\n            <>\n                {this.state.loading && <Loader loading={this.state.loading} />}\n                <div className=\"yt-signup-wrap\">\n                    <h2 className=\"yt-signup-tag-line\">\n                        {content.getStarted}\n                    </h2>\n                    {/* @ts-ignore */}\n                    <div className=\"yt-signup-form mb-4\">\n                        <Formik\n                            initialValues={{ FullName: '', Email: '', password: '', fullPhoneNumber: \"\" }}\n                            onSubmit={this.signupUser}\n                            // onSubmit={(values) => {\n                            //   this.registartionEmail(values);\n                            // }}\n                            validationSchema={signUpValidation}\n                        >\n                            {({ errors, touched, setValues, values, handleSubmit }) => {\n                                // const cacheState = useSelector((state) => state.cache);\n                                // useEffect(() => {\n                                //   setValues(values);\n                                // }, [cacheState?.language]);\n\n                                return (\n                                    <Form translate=\"yes\">\n                                        <FormGroup\n                                        // className={errors.FullName && touched.FullName && 'yt-form-err'}\n                                        >\n                                            <img\n                                                alt=\"User Profile Image\"\n                                                src={userIcon}\n                                                // src={require('./images/userprofile-icn.png')}\n                                                className={\n                                                    errors.FullName && touched.FullName\n                                                        ? ' yt-login-icn2'\n                                                        : 'yt-login-icn'\n                                                }\n                                            />\n                                            <Field\n                                                name=\"FullName\"\n                                                type=\"text\"\n                                                id=\"FullName\"\n                                                placeholder='Full Name'\n                                                className={\n                                                    'form-control' +\n                                                    (errors.FullName && touched.FullName\n                                                        ? ' is-invalid invalid'\n                                                        : '')\n                                                }\n                                            />\n                                            <span\n                                                id=\"yt-signup-name-error\"\n                                                className=\"yt-sign-up-message-show\"\n                                            />\n                                            {touched.FullName && errors.FullName && (\n                                                <span\n                                                    className=\"invalid-feedback\"\n                                                    style={{ position: 'absolute' }}\n                                                >\n                                                    {errors.FullName}\n                                                </span>\n                                            )}\n                                        </FormGroup>\n                                        <FormGroup\n                                        // className={errors.Email && touched.Email && 'yt-form-err'}\n                                        >\n                                            <img\n                                                alt=\"Email Icon\"\n                                                src={EmailIcon}\n                                                // src={require('./images/emal-icn.png')}\n                                                className={\n                                                    errors.Email && touched.Email\n                                                        ? ' yt-login-icn2'\n                                                        : 'yt-login-icn'\n                                                }\n                                            />\n                                            <Field\n                                                name=\"Email\"\n                                                type=\"text\"\n                                                placeholder='Email'\n                                                className={\n                                                    'form-control' +\n                                                    (errors.Email && touched.Email\n                                                        ? ' is-invalid invalid'\n                                                        : '')\n                                                }\n                                            />\n\n                                            {touched.Email && errors.Email &&\n                                                (\n                                                    <span\n                                                        className=\"invalid-feedback\"\n                                                        style={{ position: 'absolute' }}\n                                                    >\n                                                        {errors.Email}\n                                                    </span>\n                                                )\n                                            }\n                                        </FormGroup>\n                                        <FormGroup\n                                        // className={errors.Email && touched.Email && 'yt-form-err'}\n                                        >\n                                            <img\n                                                alt=\"Phone Icon\"\n                                                src={numberImg}\n                                                // src={require('./images/number-icn-min.png')}\n                                                className={\n                                                    errors.Email && touched.Email\n                                                        ? ' yt-login-icn2'\n                                                        : 'yt-login-icn'\n                                                }\n                                            />\n                                            <Field\n                                                name=\"fullPhoneNumber\"\n                                                type=\"text\"\n                                                placeholder='Phone Number'\n                                                className={\n                                                    'form-control' +\n                                                    (errors.fullPhoneNumber && touched.fullPhoneNumber\n                                                        ? ' is-invalid invalid'\n                                                        : '')\n                                                }\n                                            />\n\n                                            {touched.fullPhoneNumber && errors.fullPhoneNumber &&\n                                                (\n                                                    <span\n                                                        className=\"invalid-feedback\"\n                                                        style={{ position: 'absolute' }}\n                                                    >\n                                                        {errors.fullPhoneNumber}\n                                                    </span>\n                                                )\n                                            }\n                                        </FormGroup>\n\n                                        <FormGroup\n                                            // className={'mb-4 ' + errors.password &&touched.password &&'yt-form-err'}\n                                            className='mb-4'\n                                        >\n                                            <img\n                                                alt=\"Password Icon\"\n                                                //@ts-ignore\n                                                id={this.props?.isOpenPopUp ? 'passwordkey' : ''}\n                                                src={pwdIcon}\n                                                // src={require('./images/key-icn.png')}\n                                                className={errors.password && touched.password\n                                                    ? 'yt-login-icn2'\n                                                    : 'yt-login-icn'\n                                                }\n                                            />\n                                            <Field\n                                                name=\"password\"\n                                                type={this.state.showPass ? 'text' : 'password'}\n                                                id=\"password\"\n                                                placeholder='Password'\n                                                className={\n                                                    'form-control' +\n                                                    (errors.password && touched.password ? ' is-invalid' : '')\n                                                }\n                                            />\n                                            <br />\n                                            {touched.password && errors.password ? (\n                                                this.state.showPass ? (\n                                                    <FaEyeSlash\n                                                        onClick={this.showPassword}\n                                                        className=\"yt-login-pass-vie-icn\"\n                                                        //@ts-ignore\n                                                        id={this.props?.isOpenPopUp ? 'eyeicon' : ''}\n                                                        style={{ marginRight: 20 }}\n                                                    />\n                                                ) : (\n                                                    <FaEye\n                                                        onClick={this.showPassword}\n                                                        className=\"yt-login-pass-vie-icn\"\n                                                        //@ts-ignore\n                                                        id={this.props?.isOpenPopUp ? 'eyeicon' : ''}\n                                                        style={{ marginRight: 20 }}\n                                                    />\n                                                )\n                                            ) : this.state.showPass ? (\n                                                <FaEyeSlash\n                                                    onClick={this.showPassword}\n                                                    className=\"yt-login-pass-vie-icn\"\n                                                    //@ts-ignore\n                                                    id={this.props?.isOpenPopUp ? 'eyeicon' : ''}\n                                                />\n                                            ) : (\n                                                <FaEye\n                                                    onClick={this.showPassword}\n                                                    className=\"yt-login-pass-vie-icn\"\n                                                    //@ts-ignore\n                                                    id={this.props?.isOpenPopUp ? 'eyeicon' : ''}\n                                                />\n                                            )\n                                            }\n                                            <span\n                                                className=\"yt-signup-pass-info pb-1\"\n                                                //@ts-ignore\n                                                style={this.props?.isOpenPopUp ?\n                                                    {\n                                                        opacity: touched.password && errors.password ? 0 : 1,\n                                                        display: 'block'\n                                                    } :\n\n                                                    {\n                                                        opacity: touched.password && errors.password ? 0 : 1,\n                                                    }\n                                                }\n                                            >\n                                                {content.passwordSuggestionMsg}\n                                            </span>\n                                            {touched.password && errors.password && (\n                                                <span\n                                                    className=\"invalid-feedback pb-1\"\n                                                    style={{ position: 'absolute' }}\n                                                >\n                                                    {errors.password}\n                                                </span>\n                                            )}\n                                        </FormGroup>\n                                        {this.state.emailErr.length > 0 ? (\n                                            <span className=\"err_invalid\">\n                                                {this.state.emailErr}\n                                                <br />\n                                            </span>\n                                        ) : (\n                                            <></>\n                                        )}\n\n                                        <Fragment>\n                                            {this.state.showSpinner ? (\n                                                <CgSpinner\n                                                    style={{\n                                                        color: 'black',\n                                                        fontSize: 32,\n                                                        width: '100%',\n                                                        margin: 10,\n                                                    }}\n                                                    className=\"w3-spin\"\n                                                />\n                                            ) : (\n                                                <Button\n                                                    type=\"submit\"\n                                                    className=\"signup-btn\"\n                                                    color=\"secondary yt-signup-btn mt-5\"\n                                                    block\n                                                    class=\"w3-ripple\"\n                                                >\n                                                    {content.signup}\n                                                </Button>\n                                            )}\n                                        </Fragment>\n                                    </Form>\n                                );\n                            }}\n                        </Formik>\n                    </div>\n                    <div className=\"yt-signup-bottom-info text-center\">\n                        {/* {this.props.isPopup && ( */}\n                        {true && (\n                            <div className=\"my-4text-center\">\n                                <span\n                                    style={{ cursor: 'pointer' }}\n                                    className=\"w3-ripple yt-signup-skip-btn\"\n                                    onClick={() => this.guestRegister()}\n                                >\n                                    {content.skipAsGuest}\n                                </span>\n                            </div>\n                        )}\n                        {/* <p className=\"yt-signup-via-tag\">\n                            {content.signupVia}\n                        </p>\n                        <div className=\"d-flex align-items-center justify-content-center\">\n                            <Button\n                                // onClick={this.signUPnWithFacebook}\n                                onClick={() => this.connectFacebook()}\n                                color=\"secondary d-flex align-items-center mr-3 yt-signup-via-fb\"\n                            >\n                                <FaFacebookF className=\"mr-2\" />{' '}\n                                {content.facebook}\n                            </Button>\n                            <Button\n                                // onClick={this.signUPnWithGoogle}\n                                onClick={() => this.connectGoogle()}\n                                color=\"secondary d-flex align-items-center yt-signup-via-email\"\n                            >\n                                <FaRegEnvelope className=\"mr-2\" />{' '}\n                                {content.google}\n                            </Button>\n                        </div> */}\n                    </div>\n                    <div className=\"lp-bottom-links\">\n                        <p className=\"yt-signup-aggre-tag mb-3 text-center\">\n                            {content.bySigningIn}\n                        </p>\n                        <div className=\"d-flex yt-signup-term-privacy-link justify-content-center\">\n                            <Link to=\"/help-center/Terms%20&%20Conditions\">\n                                {content.termNcondition}\n                            </Link>\n                            <span className=\"mx-2\">&</span>\n                            <Link to=\"/help-center/Privacy%20Policy\">\n                                {content.privacyPolicy}\n                            </Link>\n                        </div>\n                    </div>\n\n                    {/* showing alert's */}\n                    {this.state.showAlert ? (\n                        <>\n                            <Alert color={this.state.messageType ? this.state.messageType : ''}>\n                                {this.state.message && this.state.message}\n                            </Alert>\n                        </>\n                    ) : ''}\n\n                </div>\n            </>\n        );\n    }\n}\n\n// @ts-ignore\nexport default withRouter(EmailAccountLoginBlock);"]},"metadata":{},"sourceType":"module"}