{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport MessageEnum, { getName } from '../Messages/MessageEnum';\nimport { runEngine } from '../RunEngine';\nimport { Message } from '../Message';\nimport { Block } from '../Block';\nimport StorageProvider from '../StorageProvider';\n\nvar AuthManagerBlock = /*#__PURE__*/function (_Block) {\n  _inherits(AuthManagerBlock, _Block);\n\n  var _super = _createSuper(AuthManagerBlock);\n\n  function AuthManagerBlock() {\n    var _this;\n\n    _classCallCheck(this, AuthManagerBlock);\n\n    _this = _super.call(this);\n    _this.userCredsKey = 'saveUserInfo';\n    _this.userName = void 0;\n    _this.phoneNumber = void 0;\n    _this.countryCode = void 0;\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), [getName(MessageEnum.AuthenticateUserMessage), getName(MessageEnum.LoginFaliureMessage), getName(MessageEnum.RequestUserSession)]);\n    return _this;\n  }\n\n  _createClass(AuthManagerBlock, [{\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(from, message) {\n        var requestMessage;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = message.id;\n                _context.next = _context.t0 === getName(MessageEnum.AuthenticateUserMessage) ? 3 : _context.t0 === getName(MessageEnum.RequestUserSession) ? 6 : 7;\n                break;\n\n              case 3:\n                requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n                requestMessage.initializeFromObject(message.properties);\n                return _context.abrupt(\"break\", 7);\n\n              case 6:\n                return _context.abrupt(\"break\", 7);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"saveUserData\",\n    value: function () {\n      var _saveUserData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(countryCode, userName, password, isRememberMe) {\n        var userInfo;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (isRememberMe) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                this.clearUserData();\n                _context2.next = 14;\n                break;\n\n              case 4:\n                _context2.prev = 4;\n                userInfo = {\n                  id: userName,\n                  countrycode: countryCode,\n                  password: password\n                };\n                _context2.next = 8;\n                return StorageProvider.set(this.userCredsKey, JSON.stringify(userInfo));\n\n              case 8:\n                this.countryCode = countryCode;\n                this.userName = userName;\n                _context2.next = 14;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](4);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 12]]);\n      }));\n\n      function saveUserData(_x3, _x4, _x5, _x6) {\n        return _saveUserData.apply(this, arguments);\n      }\n\n      return saveUserData;\n    }()\n  }, {\n    key: \"clearUserData\",\n    value: function () {\n      var _clearUserData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return StorageProvider.set(this.userCredsKey, '');\n\n              case 2:\n                this.userName = null;\n                this.countryCode = null;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function clearUserData() {\n        return _clearUserData.apply(this, arguments);\n      }\n\n      return clearUserData;\n    }()\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!AuthManagerBlock.instance) {\n        AuthManagerBlock.instance = new AuthManagerBlock();\n      }\n\n      return AuthManagerBlock.instance;\n    }\n  }]);\n\n  return AuthManagerBlock;\n}(Block);\n\nAuthManagerBlock.instance = void 0;\nexport { AuthManagerBlock as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/framework/src/Blocks/AuthManagerBlock.tsx"],"names":["MessageEnum","getName","runEngine","Message","Block","StorageProvider","AuthManagerBlock","userCredsKey","userName","phoneNumber","countryCode","attachBuildingBlock","AuthenticateUserMessage","LoginFaliureMessage","RequestUserSession","from","message","id","requestMessage","RestAPIRequestMessage","initializeFromObject","properties","password","isRememberMe","clearUserData","userInfo","countrycode","set","JSON","stringify","instance"],"mappings":";;;;;;;AAAA,OAAOA,WAAP,IAAsBC,OAAtB,QAAqC,yBAArC;AAGA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;IAEqBC,gB;;;;;AASnB,8BAAsB;AAAA;;AAAA;;AACpB;AADoB,UANtBC,YAMsB,GANC,cAMD;AAAA,UAJtBC,QAIsB;AAAA,UAHtBC,WAGsB;AAAA,UAFtBC,WAEsB;AAGpBR,IAAAA,SAAS,CAACS,mBAAV,gCAA8C,CAC5CV,OAAO,CAACD,WAAW,CAACY,uBAAb,CADqC,EAE5CX,OAAO,CAACD,WAAW,CAACa,mBAAb,CAFqC,EAG5CZ,OAAO,CAACD,WAAW,CAACc,kBAAb,CAHqC,CAA9C;AAHoB;AAQrB;;;;;8EASD,iBAAcC,IAAd,EAA4BC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACUA,OAAO,CAACC,EADlB;AAAA,gDAEShB,OAAO,CAACD,WAAW,CAACY,uBAAb,CAFhB,uBAUSX,OAAO,CAACD,WAAW,CAACc,kBAAb,CAVhB;AAAA;;AAAA;AAGYI,gBAAAA,cAHZ,GAG6B,IAAIf,OAAJ,CACrBF,OAAO,CAACD,WAAW,CAACmB,qBAAb,CADc,CAH7B;AAMMD,gBAAAA,cAAc,CAACE,oBAAf,CAAoCJ,OAAO,CAACK,UAA5C;AANN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;mFAgBA,kBACEX,WADF,EAEEF,QAFF,EAGEc,QAHF,EAIEC,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMOA,YANP;AAAA;AAAA;AAAA;;AAOI,qBAAKC,aAAL;AAPJ;AAAA;;AAAA;AAAA;AAUYC,gBAAAA,QAVZ,GAUuB;AACfR,kBAAAA,EAAE,EAAET,QADW;AAEfkB,kBAAAA,WAAW,EAAEhB,WAFE;AAGfY,kBAAAA,QAAQ,EAAEA;AAHK,iBAVvB;AAAA;AAAA,uBAeYjB,eAAe,CAACsB,GAAhB,CAAoB,KAAKpB,YAAzB,EAAuCqB,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAvC,CAfZ;;AAAA;AAiBM,qBAAKf,WAAL,GAAmBA,WAAnB;AACA,qBAAKF,QAAL,GAAgBA,QAAhB;AAlBN;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;oFAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQH,eAAe,CAACsB,GAAhB,CAAoB,KAAKpB,YAAzB,EAAuC,EAAvC,CADR;;AAAA;AAEE,qBAAKC,QAAL,GAAgB,IAAhB;AACA,qBAAKE,WAAL,GAAmB,IAAnB;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WA9CA,uBAAuC;AACrC,UAAI,CAACJ,gBAAgB,CAACwB,QAAtB,EAAgC;AAC9BxB,QAAAA,gBAAgB,CAACwB,QAAjB,GAA4B,IAAIxB,gBAAJ,EAA5B;AACD;;AACD,aAAOA,gBAAgB,CAACwB,QAAxB;AACD;;;;EAxB2C1B,K;;AAAzBE,gB,CACJwB,Q;SADIxB,gB","sourcesContent":["import MessageEnum, { getName } from '../Messages/MessageEnum';\nimport { IBlock } from '../IBlock';\nimport { IUserSession } from '../Interfaces/IUserSession';\nimport { runEngine } from '../RunEngine';\nimport { Message } from '../Message';\nimport { Block } from '../Block';\nimport StorageProvider from '../StorageProvider';\n\nexport default class AuthManagerBlock extends Block {\n  private static instance: AuthManagerBlock;\n\n  userCredsKey: string = 'saveUserInfo';\n\n  userName: null;\n  phoneNumber: null;\n  countryCode: null;\n\n  private constructor() {\n    super();\n\n    runEngine.attachBuildingBlock(this as IBlock, [\n      getName(MessageEnum.AuthenticateUserMessage),\n      getName(MessageEnum.LoginFaliureMessage),\n      getName(MessageEnum.RequestUserSession),\n    ]);\n  }\n\n  static getInstance(): AuthManagerBlock {\n    if (!AuthManagerBlock.instance) {\n      AuthManagerBlock.instance = new AuthManagerBlock();\n    }\n    return AuthManagerBlock.instance;\n  }\n\n  async receive(from: string, message: Message) {\n    switch (message.id) {\n      case getName(MessageEnum.AuthenticateUserMessage): {\n        const requestMessage = new Message(\n          getName(MessageEnum.RestAPIRequestMessage)\n        );\n        requestMessage.initializeFromObject(message.properties);\n\n        break;\n      }\n      case getName(MessageEnum.RequestUserSession): {\n        break;\n      }\n    }\n  }\n\n  async saveUserData(\n    countryCode: any,\n    userName: any,\n    password: any,\n    isRememberMe: any\n  ) {\n    if (!isRememberMe) {\n      this.clearUserData();\n    } else {\n      try {\n        const userInfo = {\n          id: userName,\n          countrycode: countryCode,\n          password: password,\n        };\n        await StorageProvider.set(this.userCredsKey, JSON.stringify(userInfo));\n\n        this.countryCode = countryCode;\n        this.userName = userName;\n      } catch {}\n    }\n  }\n\n  async clearUserData() {\n    await StorageProvider.set(this.userCredsKey, '');\n    this.userName = null;\n    this.countryCode = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}