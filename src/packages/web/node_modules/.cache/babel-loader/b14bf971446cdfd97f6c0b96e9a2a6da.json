{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/contactus/src/contactus.web/index.tsx\";\n//@ts-nocheck\nimport React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col, Button, Form } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as yup from \"yup\";\nimport SuccessBlock from './SuccessBlock.web';\nimport { CgSpinner } from 'react-icons/cg';\nimport ContactusController from \"./ContactusController.web\";\nimport Loader from \"../../../../components/src/Loader.web\";\nimport \"./css/styles.css\";\nvar ContactusSchema = yup.object().shape({\n  name: yup.string().min(3, 'Minimum 3 characters are required').max(20, 'Maximum 20 characters are allowed.').matches(/^[a-zA-Z ]+$/, 'Only letters are allowed.').required('Name is required.'),\n  email: yup.string().email('Please enter a valid email address.').required('Email is required.'),\n  phone: yup.number().transform(function (value) {\n    return isNaN(value) ? undefined : value;\n  }).typeError('Only numbers are allowed.').positive('Negative numbers are not allowed.').integer(\"Phone can't contain a decimal.\").min(1000000000, 'Minimum 10 digits are required.').max(9999999999, 'Maximum 10 digits are allowed.').required('Phone is required.'),\n  title: yup.string().required('Purpose is required.'),\n  message: yup.string().typeError('Message is required.').required('Message is required.')\n}); // @ts-ignore\n\nfunction FieldError(_ref) {\n  var error = _ref.error,\n      touched = _ref.touched;\n  return error && touched ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#e65e52'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, error) : null;\n}\n\n;\n\nvar Contactus = /*#__PURE__*/function (_ContactusController) {\n  _inherits(Contactus, _ContactusController);\n\n  var _super = _createSuper(Contactus);\n\n  function Contactus() {\n    _classCallCheck(this, Contactus);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Contactus, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                window.scrollTo(0, 0);\n                this.setState({\n                  userDetails: JSON.parse(localStorage.getItem('user'))\n                }); // const token = await localStorage.getItem('token');\n                // if (!token) {\n                //   //@ts-ignore\n                //   window.notify([{ type: \"info\", message: \"Please Login to Submit the Contact Form !\" }]);\n                //   setTimeout(\n                //     () => this.props?.history?.push('/'),\n                //     1500\n                //   );\n                // }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state,\n          _this$state$userDetai,\n          _this$state$userDetai2,\n          _this = this,\n          _this$state2,\n          _this$state2$userDeta,\n          _this$state2$userDeta2,\n          _this$state3,\n          _this$state3$userDeta,\n          _this$state3$userDeta2,\n          _this$state4,\n          _this$state4$userDeta,\n          _this$state4$userDeta2;\n\n      console.log((_this$state = this.state) === null || _this$state === void 0 ? void 0 : (_this$state$userDetai = _this$state.userDetails) === null || _this$state$userDetai === void 0 ? void 0 : (_this$state$userDetai2 = _this$state$userDetai.attributes) === null || _this$state$userDetai2 === void 0 ? void 0 : _this$state$userDetai2.full_name, \"sdhgfjgdkjgbfdgbfd\", this.state.userDetails);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.loading && /*#__PURE__*/React.createElement(Loader, {\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 32\n        }\n      }), !this.state.messageSent && /*#__PURE__*/React.createElement(\"section\", {\n        className: \"contactform yt-main-contact-us-pg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-cm-mobile-bread\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pageroute profile-pg-breadcrumbs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"profile-pg-home\",\n        onClick: function onClick() {\n          var _this$props, _this$props$history;\n\n          (_this$props = _this.props) === null || _this$props === void 0 ? void 0 : (_this$props$history = _this$props.history) === null || _this$props$history === void 0 ? void 0 : _this$props$history.push('/home-page');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, \"Home \", '>'), ' ', /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }, \"Contact Us\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yt-main-wrapper2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, \"Contact us\"), /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          name: ((_this$state2 = this.state) === null || _this$state2 === void 0 ? void 0 : (_this$state2$userDeta = _this$state2.userDetails) === null || _this$state2$userDeta === void 0 ? void 0 : (_this$state2$userDeta2 = _this$state2$userDeta.attributes) === null || _this$state2$userDeta2 === void 0 ? void 0 : _this$state2$userDeta2.full_name) || '',\n          email: ((_this$state3 = this.state) === null || _this$state3 === void 0 ? void 0 : (_this$state3$userDeta = _this$state3.userDetails) === null || _this$state3$userDeta === void 0 ? void 0 : (_this$state3$userDeta2 = _this$state3$userDeta.attributes) === null || _this$state3$userDeta2 === void 0 ? void 0 : _this$state3$userDeta2.email) || '',\n          phone: ((_this$state4 = this.state) === null || _this$state4 === void 0 ? void 0 : (_this$state4$userDeta = _this$state4.userDetails) === null || _this$state4$userDeta === void 0 ? void 0 : (_this$state4$userDeta2 = _this$state4$userDeta.attributes) === null || _this$state4$userDeta2 === void 0 ? void 0 : _this$state4$userDeta2.full_phone_number) || '',\n          title: '',\n          message: ''\n        },\n        onSubmit: function onSubmit(values, _ref2) {\n          var resetForm = _ref2.resetForm;\n\n          _this.submitContactusForm(values);\n\n          resetForm({\n            values: ''\n          }); //@ts-ignore\n\n          window.scrollTo(0, 0);\n        },\n        validationSchema: ContactusSchema,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, function (_ref3) {\n        var values = _ref3.values,\n            handleChange = _ref3.handleChange,\n            errors = _ref3.errors,\n            setFieldTouched = _ref3.setFieldTouched,\n            touched = _ref3.touched,\n            handleSubmit = _ref3.handleSubmit;\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          onSubmit: handleSubmit,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form group contact-border\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          xs: 12,\n          md: 6,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          name: 'name',\n          onChange: handleChange,\n          onBlur: function onBlur() {\n            return setFieldTouched('name');\n          },\n          value: values.name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"highlight\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"bar\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 35\n          }\n        }, \"Name\"), /*#__PURE__*/React.createElement(FieldError, {\n          error: errors.name,\n          touched: touched.name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 35\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          xs: 12,\n          md: 6,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          name: 'email',\n          onChange: handleChange,\n          onBlur: function onBlur() {\n            return setFieldTouched('email');\n          },\n          value: values.email,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"highlight\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"bar\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 35\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(FieldError, {\n          error: errors.email,\n          touched: touched.email,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 35\n          }\n        })))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          xs: 12,\n          md: 6,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          required: true,\n          name: 'phone',\n          onChange: handleChange,\n          onBlur: function onBlur() {\n            return setFieldTouched('phone');\n          },\n          value: values.phone,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"highlight\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"bar\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 35\n          }\n        }, \"Phone Number\"), /*#__PURE__*/React.createElement(FieldError, {\n          error: errors.phone,\n          touched: touched.phone,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 35\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          xs: 12,\n          md: 6,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          name: 'title',\n          onChange: handleChange,\n          onBlur: function onBlur() {\n            return setFieldTouched('title');\n          },\n          value: values.title,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"highlight\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"bar\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 35\n          }\n        }, \"Purpose of Contact\"), /*#__PURE__*/React.createElement(FieldError, {\n          error: errors.title,\n          touched: touched.title,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 35\n          }\n        })))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"textarea\", {\n          placeholder: \"Write your message here...\",\n          name: 'message',\n          onChange: handleChange,\n          onBlur: function onBlur() {\n            return setFieldTouched('message');\n          },\n          value: values.message,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: '0px 20px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(FieldError, {\n          error: errors.message,\n          touched: touched.message,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }\n        }))), !_this.state.sending ? /*#__PURE__*/React.createElement(Button, {\n          color: \"secondary yt-contact-send-btn\",\n          type: \"submit\",\n          disabled: localStorage.getItem('token') == null ? true : false,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 31\n          }\n        }, \"Send\") : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"yt-contact-send-btn\",\n          style: {\n            backgroundColor: 'transparent'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(CgSpinner, {\n          style: {\n            color: 'black',\n            fontSize: 32\n          },\n          className: \"w3-spin\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }\n        })))));\n      })))), this.state.messageSent && /*#__PURE__*/React.createElement(SuccessBlock, {\n        title: \"Message Sent Successfully\",\n        message: \"We will connect with you soon regarding your query.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Contactus;\n}(ContactusController);\n\nexport default withRouter(Contactus);","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/contactus/src/contactus.web/index.tsx"],"names":["React","Fragment","withRouter","Container","Row","Col","Button","Form","Formik","yup","SuccessBlock","CgSpinner","ContactusController","Loader","ContactusSchema","object","shape","name","string","min","max","matches","required","email","phone","number","transform","value","isNaN","undefined","typeError","positive","integer","title","message","FieldError","error","touched","color","Contactus","window","scrollTo","setState","userDetails","JSON","parse","localStorage","getItem","console","log","state","attributes","full_name","loading","messageSent","props","history","push","full_phone_number","values","resetForm","submitContactusForm","handleChange","errors","setFieldTouched","handleSubmit","padding","sending","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["//@ts-nocheck\nimport React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col, Button, Form } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as yup from \"yup\";\nimport SuccessBlock from './SuccessBlock.web';\nimport { CgSpinner } from 'react-icons/cg';\nimport ContactusController from \"./ContactusController.web\";\nimport Header from \"../../../../components/src/AppHeader/\";\nimport Footer from \"../../../../components/src/AppFooter\";\nimport Loader from \"../../../../components/src/Loader.web\";\nimport \"./css/styles.css\";\n\n\nconst ContactusSchema = yup.object().shape({\n  name: yup.string().min(3, 'Minimum 3 characters are required').max(20, 'Maximum 20 characters are allowed.')\n    .matches(/^[a-zA-Z ]+$/, 'Only letters are allowed.').required('Name is required.'),\n  email: yup.string().email('Please enter a valid email address.').required('Email is required.'),\n  phone: yup.number().transform((value) => (isNaN(value) ? undefined : value))\n    .typeError('Only numbers are allowed.').positive('Negative numbers are not allowed.')\n    .integer(\"Phone can't contain a decimal.\").min(1000000000, 'Minimum 10 digits are required.')\n    .max(9999999999, 'Maximum 10 digits are allowed.').required('Phone is required.'),\n  title: yup.string().required('Purpose is required.'),\n  message: yup.string().typeError('Message is required.').required('Message is required.'),\n});\n\n// @ts-ignore\nfunction FieldError({ error, touched }) {\n  return error && touched ? (\n    <div style={{ color: '#e65e52' }}>{error}</div>\n  ) : null;\n};\n\nclass Contactus extends ContactusController {\n  async componentDidMount() {\n    window.scrollTo(0, 0);\n    this.setState({\n      userDetails: JSON.parse(localStorage.getItem('user'))\n    })\n    // const token = await localStorage.getItem('token');\n    // if (!token) {\n    //   //@ts-ignore\n    //   window.notify([{ type: \"info\", message: \"Please Login to Submit the Contact Form !\" }]);\n    //   setTimeout(\n    //     () => this.props?.history?.push('/'),\n    //     1500\n    //   );\n    // }\n  }\n  render() {\n    console.log(this.state?.userDetails?.attributes?.full_name, \"sdhgfjgdkjgbfdgbfd\", this.state.userDetails)\n    return (\n      <>\n        {this.state.loading && <Loader loading={this.state.loading} />}\n        {\n          !this.state.messageSent &&\n          <section className=\"contactform yt-main-contact-us-pg\">\n            <Container>\n              <div className=\"yt-cm-mobile-bread\">\n                <div className=\"pageroute profile-pg-breadcrumbs\">\n                  <span className=\"profile-pg-home\"\n                    onClick={() => {\n                      this.props?.history?.push('/home-page')\n                    }}\n                  >Home {'>'}</span>{' '}\n                  <span className=\"\">Contact Us</span>\n                </div>\n              </div>\n              <div className=\"yt-main-wrapper2\">\n                <div className=\"title\">Contact us</div>\n                <Formik\n                  initialValues={{\n                    name: this.state?.userDetails?.attributes?.full_name || '',\n                    email: this.state?.userDetails?.attributes?.email || '',\n                    phone: this.state?.userDetails?.attributes?.full_phone_number || '',\n                    title: '',\n                    message: ''\n                  }}\n                  onSubmit={(values, { resetForm }) => {\n                    this.submitContactusForm(values);\n                    resetForm({ values: '' });\n                    //@ts-ignore\n                    window.scrollTo(0, 0)\n                  }}\n                  validationSchema={ContactusSchema}\n                >\n                  {({\n                    values,\n                    handleChange,\n                    errors,\n                    setFieldTouched,\n                    touched,\n                    handleSubmit,\n                  }) => {\n                    return (\n                      <Fragment>\n                        <Form onSubmit={handleSubmit}>\n                          <div className=\"form group contact-border\">\n                            <Row>\n                              <Col xs={12} md={6}>\n                                <div className=\"group\">\n                                  <input\n                                    type=\"text\"\n                                    required\n                                    name={'name'}\n                                    onChange={handleChange}\n                                    onBlur={() => setFieldTouched('name')}\n                                    value={values.name}\n                                  />\n                                  <span className=\"highlight\" />\n                                  <span className=\"bar\" />\n                                  <label>Name</label>\n                                  <FieldError\n                                    error={errors.name}\n                                    touched={touched.name}\n                                  />\n                                </div>\n                              </Col>\n                              <Col xs={12} md={6}>\n                                <div className=\"group\">\n                                  <input\n                                    type=\"text\"\n                                    required\n                                    name={'email'}\n                                    onChange={handleChange}\n                                    onBlur={() => setFieldTouched('email')}\n                                    value={values.email}\n                                  />\n                                  <span className=\"highlight\" />\n                                  <span className=\"bar\" />\n                                  <label>Email</label>\n                                  <FieldError\n                                    error={errors.email}\n                                    touched={touched.email}\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col xs={12} md={6}>\n                                <div className=\"group\">\n                                  <input\n                                    type=\"number\"\n                                    required\n                                    name={'phone'}\n                                    onChange={handleChange}\n                                    onBlur={() => setFieldTouched('phone')}\n                                    value={values.phone}\n                                  />\n                                  <span className=\"highlight\" />\n                                  <span className=\"bar\" />\n                                  <label>\n                                    Phone Number\n                                  </label>\n                                  <FieldError\n                                    error={errors.phone}\n                                    touched={touched.phone}\n                                  />\n                                </div>\n                              </Col>\n                              <Col xs={12} md={6}>\n                                <div className=\"group\">\n                                  <input\n                                    type=\"text\"\n                                    required\n                                    name={'title'}\n                                    onChange={handleChange}\n                                    onBlur={() => setFieldTouched('title')}\n                                    value={values.title}\n                                  />\n                                  <span className=\"highlight\" />\n                                  <span className=\"bar\" />\n                                  <label>\n                                    Purpose of Contact\n                                  </label>\n                                  <FieldError\n                                    error={errors.title}\n                                    touched={touched.title}\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <textarea\n                                placeholder='Write your message here...'\n                                name={'message'}\n                                onChange={handleChange}\n                                onBlur={() => setFieldTouched('message')}\n                                value={values.message}\n                              />\n                              <div style={{ padding: '0px 20px' }}>\n                                <FieldError\n                                  error={errors.message}\n                                  touched={touched.message}\n                                />\n                              </div>\n                            </Row>\n                            {!this.state.sending ? (\n                              <Button\n                                color=\"secondary yt-contact-send-btn\"\n                                type=\"submit\"\n                                disabled={localStorage.getItem('token') == null ? true : false}\n                              >\n                                Send\n                              </Button>\n                            ) : (\n                              <div\n                                className=\"yt-contact-send-btn\"\n                                style={{ backgroundColor: 'transparent' }}\n                              >\n                                <CgSpinner\n                                  style={{ color: 'black', fontSize: 32 }}\n                                  className=\"w3-spin\"\n                                />\n                              </div>\n                            )}\n                          </div>\n                        </Form>\n                      </Fragment>\n                    );\n                  }}\n                </Formik>\n              </div>\n            </Container>\n          </section>\n        }\n        {\n          this.state.messageSent && (\n            <SuccessBlock title='Message Sent Successfully' message='We will connect with you soon regarding your query.' />\n          )\n        }\n      </>\n    )\n  }\n}\n\nexport default withRouter(Contactus);"]},"metadata":{},"sourceType":"module"}