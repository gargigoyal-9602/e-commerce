{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { BlockComponent } from \"../../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../../framework/src/RunEngine\";\nimport { Message } from \"../../../../framework/src/Message\";\nimport MessageEnum, { getName } from \"../../../../framework/src/Messages/MessageEnum\";\nimport axios from \"axios\"; // @ts-ignore\n\nimport map from \"lodash/map\";\nimport { uuid } from 'uuidv4'; // Customizable Area Start\n// Customizable Area End\n\nexport var configJSON = require(\"./../config\");\n\n// Customizable Area Start\n// Customizable Area End\nvar ForgotPasswordController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(ForgotPasswordController, _BlockComponent);\n\n  var _super = _createSuper(ForgotPasswordController);\n\n  // Customizable Area Start\n  // Customizable Area End\n  function ForgotPasswordController(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPasswordController);\n\n    _this = _super.call(this, props);\n    _this.validationAPICallId = void 0;\n    _this.guestLoginApiCallId = void 0;\n    _this.resetOTPApiCallId = void 0;\n    _this.confirmEmailAPiCallID = void 0;\n\n    _this.SendOtpBtn = function (e) {\n      e.preventDefault();\n      var res;\n      var _this$state = _this.state,\n          emailError = _this$state.emailError,\n          otp = _this$state.otp,\n          email = _this$state.email;\n\n      if (emailError === 'success') {\n        if (otp == '') {\n          // setOtpError('empty');\n          _this.setState({\n            otpError: \"empty\"\n          });\n        } else {\n          var v = _this.isValidOTP(otp);\n\n          if (!v) {\n            // setOtpError('invalid');\n            _this.setState({\n              otpError: \"invalid\"\n            });\n          } else {\n            // setOtpError('');\n            _this.setState({\n              otpError: \"\"\n            });\n\n            _this.verifyOTP();\n          }\n        }\n      } else {\n        if (email == '') {\n          _this.setState({\n            emailError: \"empty\"\n          }); // setEmailError('empty');\n\n\n          return;\n        } else {\n          var d = _this.isValidEmail(email);\n\n          if (!d) {\n            // setNotRegister('');\n            _this.setState({\n              emailError: \"wrong\",\n              notRegister: \"\"\n            }); // setEmailError('wrong');\n\n          } else {\n            if (emailError != 'success') {\n              _this.emailConfirm();\n            }\n          }\n        }\n      }\n    };\n\n    _this.emailConfirm = function () {\n      var email = _this.state.email; // setShowSpinner(true);\n\n      _this.setState({\n        showSpinner: true\n      });\n\n      var data = {\n        data: {\n          type: \"email_account\",\n          process: \"reset_password\",\n          attributes: {\n            email: email\n          }\n        }\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.resetOTPApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.sendOTPAPIEndPoint);\n      var headers = {\n        'Content-Type': 'application/json'\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpPostMethod);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(data));\n      return runEngine.sendMessage(requestMessage.id, requestMessage);\n      axios.post(\"https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/account/accounts/send_otp\", data).then(function (res) {\n        // @ts-ignore\n        if (res.data) {\n          var meta = res.data.meta;\n          localStorage.setItem(\"token\", meta.token); // @ts-ignore\n\n          _this.timer = 0;\n\n          _this.setState({\n            emailError: \"success\",\n            notRegister: \"\",\n            timer: 60,\n            seconds: 60\n          }, _this.startTimer); // @ts-ignore\n\n\n          window.notify([{\n            message: \"OTP has been sent to you\",\n            type: \"success\"\n          }]);\n        }\n      }).catch(function (error) {\n        var _error$request, _error$request2;\n\n        console.log(error);\n\n        if ((error === null || error === void 0 ? void 0 : (_error$request = error.request) === null || _error$request === void 0 ? void 0 : _error$request.response) && (error === null || error === void 0 ? void 0 : (_error$request2 = error.request) === null || _error$request2 === void 0 ? void 0 : _error$request2.status) !== 0) {\n          var response = JSON.parse(error.request.response);\n          map(response === null || response === void 0 ? void 0 : response.errors, function (errorMesage) {\n            map(errorMesage, function (val, key) {\n              console.log(key); // @ts-ignore\n\n              window.notify([{\n                message: val || \"Something went wrong\",\n                type: \"danger\"\n              }]);\n            });\n          });\n        }\n      }).finally(function () {\n        _this.setState({\n          showSpinner: false\n        });\n      });\n    };\n\n    _this.handleEmail = function (e) {\n      // setEmail(e.target.value);\n      _this.setState({\n        email: e.target.value\n      });\n\n      if (e.target.value.length > 0) {\n        // setOtp('');\n        _this.setState({\n          otp: \"\"\n        });\n      }\n\n      if (_this.state.emailError != '') {\n        var check = _this.isValidEmail(e.target.value);\n\n        if (check) {\n          // setEmailError('');\n          _this.setState({\n            emailError: \"\"\n          });\n        } else {\n          _this.setState({\n            emailError: \"wrong\"\n          }); // setEmailError('wrong');\n\n        }\n      }\n    };\n\n    _this.handleOTP = function (e) {\n      // setOtp(e.target.value);\n      _this.setState({\n        otp: e.target.value\n      });\n\n      if (_this.state.otpError != '' || e.target.value.length > 5) {\n        var check = _this.isValidOTP(e.target.value); // console.log(check, \"check\");\n\n\n        if (check) {\n          // setOtpError('');\n          _this.setState({\n            otpError: \"\"\n          });\n        } else {\n          // setOtpError('invalid');\n          _this.setState({\n            otpError: \"invalid\"\n          });\n        }\n      }\n    };\n\n    _this.verifyOTP = function () {\n      var token = localStorage.getItem(\"token\"); // setShowSpinner(true);\n\n      _this.setState({\n        showSpinner: true\n      });\n\n      var data = {\n        token: token,\n        pin: _this.state.otp\n      };\n\n      _this.setState({\n        otpToken: token\n      });\n\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.confirmEmailAPiCallID = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.verifyOTPAPIEndPoint);\n      var headers = {\n        'Content-Type': 'application/json'\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpPostMethod);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(data));\n      return runEngine.sendMessage(requestMessage.id, requestMessage);\n      axios.post(\"https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/account/accounts/email_confirmation\", data).then(function (res) {\n        var _res$meta;\n\n        if (res === null || res === void 0 ? void 0 : (_res$meta = res.meta) === null || _res$meta === void 0 ? void 0 : _res$meta.mesage) {\n          var _res$meta2;\n\n          // @ts-ignore\n          window.notify([{\n            message: res === null || res === void 0 ? void 0 : (_res$meta2 = res.meta) === null || _res$meta2 === void 0 ? void 0 : _res$meta2.mesage,\n            type: \"success\"\n          }]);\n        }\n\n        _this.setState({\n          otpToken: token\n        }); // setOtpToken(token);\n\n      }).catch(function (error) {\n        var _error$request3, _error$request4;\n\n        console.log(error);\n\n        if ((error === null || error === void 0 ? void 0 : (_error$request3 = error.request) === null || _error$request3 === void 0 ? void 0 : _error$request3.response) && (error === null || error === void 0 ? void 0 : (_error$request4 = error.request) === null || _error$request4 === void 0 ? void 0 : _error$request4.status) !== 0) {\n          var response = JSON.parse(error.request.response);\n          map(response === null || response === void 0 ? void 0 : response.errors, function (errorMesage) {\n            map(errorMesage, function (val, key) {\n              console.log(key); // @ts-ignore\n\n              window.notify([{\n                message: val || \"Something went wrong\",\n                type: \"danger\"\n              }]);\n            });\n          });\n        }\n      }).finally(function () {\n        _this.setState({\n          showSpinner: false\n        });\n      });\n    };\n\n    _this.guestUserHandler = function () {\n      _this.setState({\n        loading: true\n      });\n\n      var guestUserId = localStorage.getItem('guestUUID');\n      var generateID;\n\n      if (guestUserId) {\n        generateID = guestUserId;\n      } else {\n        generateID = uuid();\n        localStorage.setItem('guestUUID', generateID);\n      }\n\n      var headers = {\n        'Content-Type': 'application/json'\n      };\n      var requestBody = {\n        \"data\": {\n          \"type\": \"guest_account\",\n          \"attributes\": {\n            \"uuid\": generateID\n          }\n        }\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.guestLoginApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.guestLoginAPIEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(requestBody));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpPostMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.subScribedMessages = [// Customizable Area Start\n    getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.NavigationPayLoadMessage), getName(MessageEnum.CountryCodeMessage), getName(MessageEnum.ReciveUserCredentials) // Customizable Area End\n    ]; // @ts-ignore\n\n    _this.timer = 0;\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this));\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages); // Customizable Area Start\n\n    _this.state = {\n      email: \"\",\n      emailError: \"\",\n      notRegister: \"\",\n      otp: \"\",\n      otpError: \"\",\n      passwordError: \"\",\n      otpToken: \"\",\n      showSpinner: false,\n      timer: 0,\n      seconds: 5\n    }; // Customizable Area End\n\n    return _this;\n  }\n\n  _createClass(ForgotPasswordController, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        // \"h\": hours,\n        // \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      // @ts-ignore\n      if (this.timer == 0 && this.state.timer > 0) {\n        // @ts-ignore\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      // @ts-ignore\n      var timer = this.state.timer - 1;\n      this.setState({\n        timer: timer\n      }); // Check if we're at zero.\n\n      if (timer == 0) {\n        // @ts-ignore\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var apiRequestCallId, responseJson, errorResponse, _this$props, _this$props$history, meta, data, _responseJson$errors$, _responseJson$errors$2, _responseJson$meta;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                runEngine.debugLog('Message Received', message);\n\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorResponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (apiRequestCallId === this.guestLoginApiCallId) {\n                    if (responseJson && responseJson.data && responseJson.meta) {\n                      this.setState({\n                        // ...this.state,\n                        loading: false\n                      });\n                      localStorage.setItem('guestUserData', JSON.stringify(responseJson.data));\n                      localStorage.setItem('token', responseJson.meta.token); //@ts-ignore\n\n                      window.notify([{\n                        type: 'success',\n                        message: 'Welcome to Our Store !'\n                      }]); //@ts-ignore\n\n                      (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$history = _this$props.history) === null || _this$props$history === void 0 ? void 0 : _this$props$history.push('/home-page');\n                    }\n                  }\n\n                  if (apiRequestCallId === this.resetOTPApiCallId) {\n                    if (responseJson && responseJson.meta && responseJson.data) {\n                      this.setState({\n                        showSpinner: false\n                      });\n                      meta = responseJson.meta, data = responseJson.data;\n                      localStorage.setItem(\"token\", meta.token); // @ts-ignore\n\n                      this.timer = 0;\n                      this.setState({\n                        emailError: \"success\",\n                        notRegister: \"\",\n                        timer: 60,\n                        seconds: 60\n                      }, this.startTimer); // @ts-ignore\n\n                      window.notify([{\n                        message: \"OTP has been sent to you\",\n                        type: \"success\"\n                      }]);\n                    }\n\n                    if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n                      this.setState({\n                        showSpinner: false\n                      }); //@ts-ignore\n\n                      window.notify([{\n                        type: 'danger',\n                        message: ((_responseJson$errors$ = responseJson.errors[0]) === null || _responseJson$errors$ === void 0 ? void 0 : _responseJson$errors$.pin) || ((_responseJson$errors$2 = responseJson.errors[0]) === null || _responseJson$errors$2 === void 0 ? void 0 : _responseJson$errors$2.phone_number) || 'something went wrong!'\n                      }]);\n                    }\n                  }\n\n                  if (apiRequestCallId === this.confirmEmailAPiCallID) {\n                    if (responseJson) {\n                      this.setState({\n                        showSpinner: false\n                      }); // @ts-ignore\n\n                      window.notify([{\n                        message: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson$meta = responseJson.meta) === null || _responseJson$meta === void 0 ? void 0 : _responseJson$meta.mesage,\n                        type: \"success\"\n                      }]);\n                    }\n\n                    if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n                      this.setState({\n                        showSpinner: false\n                      }); //@ts-ignore\n\n                      window.notify([{\n                        type: 'danger',\n                        message: responseJson.errors[0] || 'something went wrong!'\n                      }]);\n                    }\n                  }\n                } else {}\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"isValidEmail\",\n    value: function isValidEmail(email) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n    }\n  }, {\n    key: \"isValidOTP\",\n    value: function isValidOTP(otp) {\n      var re = /^\\d{5}$/gm.test(otp);\n      return re;\n    }\n  }]);\n\n  return ForgotPasswordController;\n}(BlockComponent);\n\nexport { ForgotPasswordController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/forgot-password/src/ForgotPassword.web/ForgotPasswordController.tsx"],"names":["BlockComponent","runEngine","Message","MessageEnum","getName","axios","map","uuid","configJSON","require","ForgotPasswordController","props","validationAPICallId","guestLoginApiCallId","resetOTPApiCallId","confirmEmailAPiCallID","SendOtpBtn","e","preventDefault","res","state","emailError","otp","email","setState","otpError","v","isValidOTP","verifyOTP","d","isValidEmail","notRegister","emailConfirm","showSpinner","data","type","process","attributes","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","sendOTPAPIEndPoint","headers","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","httpPostMethod","RestAPIRequestBodyMessage","sendMessage","id","post","then","meta","localStorage","setItem","token","timer","seconds","startTimer","window","notify","message","catch","error","console","log","request","response","status","parse","errors","errorMesage","val","key","finally","handleEmail","target","value","length","check","handleOTP","getItem","pin","otpToken","verifyOTPAPIEndPoint","mesage","guestUserHandler","loading","guestUserId","generateID","requestBody","guestLoginAPIEndPoint","subScribedMessages","RestAPIResponceMessage","NavigationPayLoadMessage","CountryCodeMessage","ReciveUserCredentials","receive","bind","countDown","attachBuildingBlock","passwordError","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","setInterval","clearInterval","from","debugLog","apiRequestCallId","getData","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","errorResponse","RestAPIResponceErrorMessage","history","push","phone_number","re","test","String","toLowerCase"],"mappings":"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","sourcesContent":["import { BlockComponent } from \"../../../../framework/src/BlockComponent\";\nimport { IBlock } from \"../../../../framework/src/IBlock\";\nimport { runEngine } from \"../../../../framework/src/RunEngine\";\nimport { Message } from \"../../../../framework/src/Message\";\nimport MessageEnum, {\n  getName\n} from \"../../../../framework/src/Messages/MessageEnum\";\nimport axios from \"axios\";\n// @ts-ignore\nimport map from \"lodash/map\";\n\nimport { uuid } from 'uuidv4';\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./../config\");\n\nexport interface Props {\n  navigation: any;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  email: string;\n  emailError: string;\n  notRegister: string;\n  otp: string;\n  otpError: string;\n  passwordError: string;\n  otpToken: any;\n  showSpinner: boolean,\n  timer: number\n  seconds: any;\n\n  loading?: boolean;\n  // Customizable Area End\n}\n\ninterface SS {\n  // Customizable Area Start\n  navigation: any;\n  // Customizable Area End\n}\n\n// Customizable Area Start\n\n// Customizable Area End\n\nexport default class ForgotPasswordController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  // Customizable Area Start\n  validationAPICallId: any;\n  guestLoginApiCallId: string;\n  resetOTPApiCallId: string;\n  confirmEmailAPiCallID: string;\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    this.subScribedMessages = [\n      // Customizable Area Start\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.NavigationPayLoadMessage),\n      getName(MessageEnum.CountryCodeMessage),\n      getName(MessageEnum.ReciveUserCredentials)\n      // Customizable Area End\n    ];\n    // @ts-ignore\n    this.timer = 0;\n    this.receive = this.receive.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n\n    // Customizable Area Start\n\n    this.state = {\n      email: \"\",\n      emailError: \"\",\n      notRegister: \"\",\n      otp: \"\",\n      otpError: \"\",\n      passwordError: \"\",\n      otpToken: \"\",\n      showSpinner: false,\n      timer: 0,\n      seconds: 5\n    };\n    // Customizable Area End\n  }\n\n  async componentDidMount() {\n  }\n\n  secondsToTime(secs: any) {\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      // \"h\": hours,\n      // \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n  }\n\n  startTimer() {\n    // @ts-ignore\n    if (this.timer == 0 && this.state.timer > 0) {\n      // @ts-ignore\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    // @ts-ignore\n    let timer = this.state.timer - 1;\n    this.setState({\n      timer: timer,\n    });\n\n    // Check if we're at zero.\n    if (timer == 0) {\n      // @ts-ignore\n      clearInterval(this.timer);\n    }\n  }\n\n  async receive(from: string, message: Message) {\n    runEngine.debugLog('Message Received', message);\n    if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n      let apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n      var responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      var errorResponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n      if (apiRequestCallId === this.guestLoginApiCallId) {\n        if (responseJson && responseJson.data && responseJson.meta) {\n          this.setState({\n            // ...this.state,\n            loading: false\n          });\n          localStorage.setItem('guestUserData', JSON.stringify(responseJson.data));\n          localStorage.setItem('token', responseJson.meta.token);\n          //@ts-ignore\n          window.notify([{ type: 'success', message: 'Welcome to Our Store !' }])\n          //@ts-ignore\n          this.props?.history?.push('/home-page');\n        }\n      }\n      if (apiRequestCallId === this.resetOTPApiCallId) {\n        if (responseJson && responseJson.meta && responseJson.data) {\n          this.setState({ showSpinner: false });\n          const { meta, data } = responseJson;\n          localStorage.setItem(\"token\", meta.token);\n          // @ts-ignore\n          this.timer = 0;\n          this.setState({ emailError: \"success\", notRegister: \"\", timer: 60, seconds: 60 }, this.startTimer)\n          // @ts-ignore\n          window.notify([{ message: \"OTP has been sent to you\", type: \"success\" }])\n        }\n        if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n          this.setState({ showSpinner: false });\n          //@ts-ignore\n          window.notify([{ type: 'danger', message: responseJson.errors[0]?.pin || responseJson.errors[0]?.phone_number || 'something went wrong!' }]);\n        }\n      }\n      if (apiRequestCallId === this.confirmEmailAPiCallID) {\n        if (responseJson) {\n          this.setState({ showSpinner: false });\n          // @ts-ignore\n          window.notify([{ message: responseJson?.meta?.mesage, type: \"success\" }]);\n        }\n        if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n          this.setState({ showSpinner: false })\n          //@ts-ignore\n          window.notify([{ type: 'danger', message: responseJson.errors[0] || 'something went wrong!' }])\n        }\n      }\n    }\n    else {\n\n    }\n  }\n\n  isValidEmail(email: string) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  isValidOTP(otp: any) {\n    const re = /^\\d{5}$/gm.test(otp);\n    return re;\n  }\n\n  SendOtpBtn = (e: any) => {\n    e.preventDefault();\n    let res;\n    const { emailError, otp, email, } = this.state;\n\n    if (emailError === 'success') {\n      if (otp == '') {\n        // setOtpError('empty');\n        this.setState({ otpError: \"empty\" })\n      } else {\n        let v = this.isValidOTP(otp);\n        if (!v) {\n          // setOtpError('invalid');\n          this.setState({ otpError: \"invalid\" })\n        } else {\n          // setOtpError('');\n          this.setState({ otpError: \"\" })\n          this.verifyOTP();\n        }\n      }\n    } else {\n      if (email == '') {\n        this.setState({ emailError: \"empty\" })\n        // setEmailError('empty');\n        return;\n      } else {\n        let d = this.isValidEmail(email);\n        if (!d) {\n          // setNotRegister('');\n          this.setState({ emailError: \"wrong\", notRegister: \"\" })\n          // setEmailError('wrong');\n        } else {\n          if (emailError != 'success') {\n            this.emailConfirm();\n          }\n        }\n      }\n    }\n  };\n\n  emailConfirm = () => {\n    const { email } = this.state;\n    // setShowSpinner(true);\n    this.setState({ showSpinner: true })\n    let data = {\n      data: {\n        type: \"email_account\",\n        process: \"reset_password\",\n        attributes: {\n          email\n        }\n      }\n    }\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.resetOTPApiCallId = requestMessage.messageId;\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.sendOTPAPIEndPoint);\n\n    const headers = {\n      'Content-Type': 'application/json'\n    }\n\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpPostMethod);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(data));\n\n    return runEngine.sendMessage(requestMessage.id, requestMessage);\n\n\n\n    axios.post(\"https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/account/accounts/send_otp\", data)\n      .then((res: any) => {\n        // @ts-ignore\n        if (res.data) {\n          const { meta } = res.data;\n          localStorage.setItem(\"token\", meta.token);\n          // @ts-ignore\n          this.timer = 0;\n          this.setState({ emailError: \"success\", notRegister: \"\", timer: 60, seconds: 60 }, this.startTimer)\n          // @ts-ignore\n          window.notify([{ message: \"OTP has been sent to you\", type: \"success\" }])\n        }\n      })\n      .catch((error: any) => {\n        console.log(error);\n        if (error?.request?.response && error?.request?.status !== 0) {\n          let response = JSON.parse(error.request.response);\n          map(response?.errors, (errorMesage: any) => {\n            map(errorMesage, (val: any, key: any) => {\n              console.log(key)\n              // @ts-ignore\n              window.notify([{ message: val || \"Something went wrong\", type: \"danger\" }]);\n            })\n          })\n        }\n\n      })\n      .finally(() => {\n        this.setState({ showSpinner: false });\n      })\n  };\n\n  handleEmail = (e: any) => {\n    // setEmail(e.target.value);\n    this.setState({ email: e.target.value })\n    if (e.target.value.length > 0) {\n      // setOtp('');\n      this.setState({ otp: \"\" })\n    }\n    if (this.state.emailError != '') {\n      let check = this.isValidEmail(e.target.value);\n      if (check) {\n        // setEmailError('');\n        this.setState({ emailError: \"\" });\n      } else {\n        this.setState({ emailError: \"wrong\" })\n        // setEmailError('wrong');\n      }\n    }\n\n  };\n\n  handleOTP = (e: any) => {\n    // setOtp(e.target.value);\n    this.setState({ otp: e.target.value })\n    if (this.state.otpError != '' || e.target.value.length > 5) {\n      let check = this.isValidOTP(e.target.value);\n      // console.log(check, \"check\");\n      if (check) {\n        // setOtpError('');\n        this.setState({ otpError: \"\" })\n      } else {\n        // setOtpError('invalid');\n        this.setState({ otpError: \"invalid\" })\n      }\n    }\n  };\n\n  verifyOTP = () => {\n    const token = localStorage.getItem(\"token\");\n    // setShowSpinner(true);\n    this.setState({ showSpinner: true });\n\n    const data = {\n      token,\n      pin: this.state.otp\n    }\n    this.setState({ otpToken: token })\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.confirmEmailAPiCallID = requestMessage.messageId;\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.verifyOTPAPIEndPoint);\n\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpPostMethod);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(data));\n\n    return runEngine.sendMessage(requestMessage.id, requestMessage);\n\n\n    axios.post(\"https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/account/accounts/email_confirmation\", data)\n      .then((res: any) => {\n        if (res?.meta?.mesage) {\n          // @ts-ignore\n          window.notify([{ message: res?.meta?.mesage, type: \"success\" }]);\n        }\n        this.setState({ otpToken: token })\n        // setOtpToken(token);\n      })\n      .catch((error: any) => {\n        console.log(error);\n        if (error?.request?.response && error?.request?.status !== 0) {\n          let response = JSON.parse(error.request.response);\n          map(response?.errors, (errorMesage: any) => {\n            map(errorMesage, (val: any, key: any) => {\n              console.log(key)\n              // @ts-ignore\n              window.notify([{ message: val || \"Something went wrong\", type: \"danger\" }]);\n            })\n          })\n        }\n      })\n      .finally(() => {\n        this.setState({ showSpinner: false })\n      })\n  };\n  //Guest User\n  guestUserHandler = () => {\n    this.setState({\n      loading: true\n    })\n    const guestUserId = localStorage.getItem('guestUUID');\n    let generateID;\n    if (guestUserId) {\n      generateID = guestUserId;\n    } else {\n      generateID = uuid();\n      localStorage.setItem('guestUUID', generateID);\n    }\n\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n\n    const requestBody = {\n      \"data\": {\n        \"type\": \"guest_account\",\n        \"attributes\": {\n          \"uuid\": generateID\n        }\n      }\n    };\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.guestLoginApiCallId = requestMessage.messageId;\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.guestLoginAPIEndPoint);\n\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(requestBody));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpPostMethod);\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}