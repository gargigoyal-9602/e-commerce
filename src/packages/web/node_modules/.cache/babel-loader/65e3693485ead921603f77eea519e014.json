{"ast":null,"code":"import _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { runEngine } from '../../../framework/src/RunEngine';\nimport { Message } from '../../../framework/src/Message';\nimport MessageEnum, { getName } from '../../../framework/src/Messages/MessageEnum';\n\nvar AlertPageWebAdapter = /*#__PURE__*/function () {\n  function AlertPageWebAdapter() {\n    _classCallCheck(this, AlertPageWebAdapter);\n\n    this.send = void 0;\n\n    this.convert = function (from) {\n      var to = new Message(getName(MessageEnum.NavigationMessage));\n      to.addData(getName(MessageEnum.NavigationTargetMessage), 'AlertWeb');\n      to.addData(getName(MessageEnum.NavigationPropsMessage), from.getData(getName(MessageEnum.NavigationPropsMessage)));\n      var raiseMessage = new Message(getName(MessageEnum.NavigationPayLoadMessage));\n      raiseMessage.copyAllPropertiesOf(from); // let alertType = message.getData(getName(MessageEnum.AlertTypeMessage));\n      // let title = message.getData(getName(MessageEnum.AlertTitleMessage));\n      // let body = message.getData(getName(MessageEnum.AlertBodyMessage));\n      // let btnPositiveText = message.getData(getName(MessageEnum.AlertButtonPositiveText));\n      // let btnPositiveMessage = message.getData(getName(MessageEnum.AlertButtonPositiveMessage));\n      // let btnNegativeText = message.getData(getName(MessageEnum.AlertButtonNegativeText));\n      // let btnNegativeMessage = message.getData(getName(MessageEnum.AlertButtonNegativeMessage));\n      // let btnNeutralText = message.getData(getName(MessageEnum.AlertButtonNeutralText));\n      // let btnNeutralMessage = message.getData(getName(MessageEnum.AlertButtonNeutralMessage));\n\n      to.addData(getName(MessageEnum.NavigationRaiseMessage), raiseMessage);\n      return to;\n    };\n\n    var blockId = uuidv4();\n\n    this.send = function (message) {\n      return runEngine.sendMessage(blockId, message);\n    };\n\n    console.log('initing AlertPageWebAdapter');\n    runEngine.attachBuildingBlock(this, [getName(MessageEnum.NavigationAlertWebMessage)]);\n  }\n\n  _createClass(AlertPageWebAdapter, [{\n    key: \"receive\",\n    value: function receive(from, message) {\n      console.log(\"receive AlertPageWebAdapter==>\".concat(JSON.stringify(message)));\n      console.log(\"Converted AlertPageWebAdapter==>\".concat(JSON.stringify(this.convert(message))));\n      this.send(this.convert(message));\n    }\n  }]);\n\n  return AlertPageWebAdapter;\n}();\n\nexport { AlertPageWebAdapter as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/adapters/src/AlertPageWebAdapter.tsx"],"names":["v4","uuidv4","runEngine","Message","MessageEnum","getName","AlertPageWebAdapter","send","convert","from","to","NavigationMessage","addData","NavigationTargetMessage","NavigationPropsMessage","getData","raiseMessage","NavigationPayLoadMessage","copyAllPropertiesOf","NavigationRaiseMessage","blockId","message","sendMessage","console","log","attachBuildingBlock","NavigationAlertWebMessage","JSON","stringify"],"mappings":";;AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,SAAT,QAA0B,kCAA1B;AAEA,SAASC,OAAT,QAAwB,gCAAxB;AACA,OAAOC,WAAP,IACEC,OADF,QAEO,6CAFP;;IAIqBC,mB;AAGnB,iCAAc;AAAA;;AAAA,SAFdC,IAEc;;AAAA,SASdC,OATc,GASJ,UAACC,IAAD,EAA4B;AACpC,UAAMC,EAAE,GAAG,IAAIP,OAAJ,CAAYE,OAAO,CAACD,WAAW,CAACO,iBAAb,CAAnB,CAAX;AAEAD,MAAAA,EAAE,CAACE,OAAH,CAAWP,OAAO,CAACD,WAAW,CAACS,uBAAb,CAAlB,EAAyD,UAAzD;AAEAH,MAAAA,EAAE,CAACE,OAAH,CACEP,OAAO,CAACD,WAAW,CAACU,sBAAb,CADT,EAEEL,IAAI,CAACM,OAAL,CAAaV,OAAO,CAACD,WAAW,CAACU,sBAAb,CAApB,CAFF;AAKA,UAAME,YAAqB,GAAG,IAAIb,OAAJ,CAC5BE,OAAO,CAACD,WAAW,CAACa,wBAAb,CADqB,CAA9B;AAIAD,MAAAA,YAAY,CAACE,mBAAb,CAAiCT,IAAjC,EAdoC,CAgBpC;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEAC,MAAAA,EAAE,CAACE,OAAH,CAAWP,OAAO,CAACD,WAAW,CAACe,sBAAb,CAAlB,EAAwDH,YAAxD;AAEA,aAAON,EAAP;AACD,KAzCa;;AACZ,QAAMU,OAAO,GAAGnB,MAAM,EAAtB;;AACA,SAAKM,IAAL,GAAY,UAAAc,OAAO;AAAA,aAAInB,SAAS,CAACoB,WAAV,CAAsBF,OAAtB,EAA+BC,OAA/B,CAAJ;AAAA,KAAnB;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAtB,IAAAA,SAAS,CAACuB,mBAAV,CAA8B,IAA9B,EAA8C,CAC5CpB,OAAO,CAACD,WAAW,CAACsB,yBAAb,CADqC,CAA9C;AAGD;;;;WAoCD,iBAAQjB,IAAR,EAAsBY,OAAtB,EAA8C;AAC5CE,MAAAA,OAAO,CAACC,GAAR,yCAA6CG,IAAI,CAACC,SAAL,CAAeP,OAAf,CAA7C;AACAE,MAAAA,OAAO,CAACC,GAAR,2CACqCG,IAAI,CAACC,SAAL,CAAe,KAAKpB,OAAL,CAAaa,OAAb,CAAf,CADrC;AAIA,WAAKd,IAAL,CAAU,KAAKC,OAAL,CAAaa,OAAb,CAAV;AACD;;;;;;SArDkBf,mB","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { runEngine } from '../../../framework/src/RunEngine';\nimport { IBlock } from '../../../framework/src/IBlock';\nimport { Message } from '../../../framework/src/Message';\nimport MessageEnum, {\n  getName\n} from '../../../framework/src/Messages/MessageEnum';\n\nexport default class AlertPageWebAdapter {\n  send: (message: Message) => void;\n\n  constructor() {\n    const blockId = uuidv4();\n    this.send = message => runEngine.sendMessage(blockId, message);\n    console.log('initing AlertPageWebAdapter');\n    runEngine.attachBuildingBlock(this as IBlock, [\n      getName(MessageEnum.NavigationAlertWebMessage)\n    ]);\n  }\n\n  convert = (from: Message): Message => {\n    const to = new Message(getName(MessageEnum.NavigationMessage));\n\n    to.addData(getName(MessageEnum.NavigationTargetMessage), 'AlertWeb');\n\n    to.addData(\n      getName(MessageEnum.NavigationPropsMessage),\n      from.getData(getName(MessageEnum.NavigationPropsMessage))\n    );\n\n    const raiseMessage: Message = new Message(\n      getName(MessageEnum.NavigationPayLoadMessage)\n    );\n\n    raiseMessage.copyAllPropertiesOf(from);\n\n    // let alertType = message.getData(getName(MessageEnum.AlertTypeMessage));\n    // let title = message.getData(getName(MessageEnum.AlertTitleMessage));\n    // let body = message.getData(getName(MessageEnum.AlertBodyMessage));\n\n    // let btnPositiveText = message.getData(getName(MessageEnum.AlertButtonPositiveText));\n    // let btnPositiveMessage = message.getData(getName(MessageEnum.AlertButtonPositiveMessage));\n\n    // let btnNegativeText = message.getData(getName(MessageEnum.AlertButtonNegativeText));\n    // let btnNegativeMessage = message.getData(getName(MessageEnum.AlertButtonNegativeMessage));\n\n    // let btnNeutralText = message.getData(getName(MessageEnum.AlertButtonNeutralText));\n    // let btnNeutralMessage = message.getData(getName(MessageEnum.AlertButtonNeutralMessage));\n\n    to.addData(getName(MessageEnum.NavigationRaiseMessage), raiseMessage);\n\n    return to;\n  };\n\n  receive(from: string, message: Message): void {\n    console.log(`receive AlertPageWebAdapter==>${JSON.stringify(message)}`);\n    console.log(\n      `Converted AlertPageWebAdapter==>${JSON.stringify(this.convert(message))}`\n    );\n\n    this.send(this.convert(message));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}