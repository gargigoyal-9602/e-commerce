{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// @ts-nocheck\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n// Customizable Area Start\n// Customizable Area End\nexport var configJSON = require(\"./config\");\n\nvar FilterOptionListController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(FilterOptionListController, _BlockComponent);\n\n  var _super = _createSuper(FilterOptionListController);\n\n  function FilterOptionListController(props) {\n    var _this;\n\n    _classCallCheck(this, FilterOptionListController);\n\n    _this = _super.call(this, props);\n    _this.getProductApiCallId = void 0;\n    _this.getBrandProductApiCallId = void 0;\n    _this.getTagProductApiCallId = void 0;\n    _this.getProductCategoryApiCallId = void 0;\n\n    _this.forBannertoggleCheckBox = function (id, type) {\n      console.log(\"forBannertoggleCheckBox\");\n      var urlSearch = new URLSearchParams(window.location.search);\n      var cat_id = urlSearch.get(\"q[category_id][]\");\n      var sub_cat_id = urlSearch.get(\"q[sub_category_id][]\");\n      var brand_id = urlSearch.get(\"q[brand_id][]\");\n      var tag_id = urlSearch.get(\"q[tag_id][]\");\n      var color_id = urlSearch.get(\"q[color][]\");\n      var size_id = urlSearch.get(\"q[size][]\");\n      var min_price = urlSearch.get(\"q[price][from]\");\n      var max_price = urlSearch.get(\"q[price][to]\");\n      var discount = urlSearch.get(\"discounted_items\");\n      var order_by = urlSearch.get(\"sort[order_by]\");\n      var sort_by = urlSearch.get(\"sort[direction]\");\n      var search = urlSearch.get(\"q[name]\"); //console.log(\"forBannertoggleCheckBoxforBannertoggleCheckBox\")\n\n      urlSearch.delete(\"[sub_category]\");\n\n      if (cat_id != null) {\n        var newcat_id = cat_id.split(',');\n        newcat_id.map(function (id) {\n          _this.toggleCheckBox(id, \"category\");\n        });\n      }\n\n      if (sub_cat_id != null) {\n        var newsub_cat_id = sub_cat_id.split(',');\n        newsub_cat_id.map(function (id) {\n          _this.toggleCheckBox(id, \"sub_category\");\n        });\n      }\n\n      if (brand_id != null) {\n        var newbrand_id = brand_id.split(',');\n        newbrand_id.map(function (id) {\n          _this.toggleCheckBox(id, \"brand\");\n        });\n      }\n\n      if (tag_id != null) {\n        var newtag_id = tag_id.split(',');\n        newtag_id.map(function (id) {\n          _this.toggleCheckBox(id, \"tag\");\n        });\n      }\n\n      if (color_id != null) {\n        var newcolor_id = color_id.split(',');\n        newcolor_id.map(function (id) {\n          _this.toggleCheckBox(id, \"color\");\n        });\n      }\n\n      if (size_id != null) {\n        var newsize_id = size_id.split(',');\n        newsize_id.map(function (id) {\n          _this.toggleCheckBox(id, \"size\");\n        });\n      }\n\n      if (min_price != null || max_price != null) {\n        var dat = {\n          min: min_price,\n          max: max_price\n        };\n\n        _this.setState({\n          value: dat\n        });\n\n        setTimeout(function () {\n          _this.toggleCheckBox(dat, \"price\");\n        }, 300);\n      }\n\n      if (discount != null) {\n        _this.setState({\n          isDiscountChecked: discount\n        });\n\n        setTimeout(function () {\n          _this.toggleCheckBox(discount, \"discount\");\n        }, 300);\n      }\n    };\n\n    _this.toggleCheckBox = function (id, type) {\n      console.log(\"toggleCheckBox working\");\n      var requestCheckMessage = new Message(getName(MessageEnum.FilterCheckedMessage));\n      var urlSearch = new URLSearchParams(window.location.search);\n      var shop = urlSearch.get(\"[sub_category]\");\n      var newArrivals = urlSearch.get(\"[newArrivals]\");\n\n      if (type == \"brand\") {\n        var oldbrands = _toConsumableArray(_this.state.brandList);\n\n        if (shop != null || newArrivals != null) {\n          oldbrands && (oldbrands === null || oldbrands === void 0 ? void 0 : oldbrands.forEach(function (item, idx) {\n            if (item.checked == true) {\n              item.checked = !item.checked;\n            }\n          }));\n        }\n\n        oldbrands.forEach(function (item, idx) {\n          if (id == item.id) {\n            item.checked = !item.checked;\n          }\n        });\n        var selectedBrands = oldbrands.filter(function (brand) {\n          return brand.checked;\n        });\n        var filderBrandId = selectedBrands === null || selectedBrands === void 0 ? void 0 : selectedBrands.map(function (cat) {\n          return cat.attributes.id;\n        });\n        urlSearch.delete(\"q[brand_id][]\");\n        console.log(filderBrandId, \"filderBrandIdfilderBrandId\");\n        filderBrandId.length > 0 && urlSearch.append(\"q[brand_id][]\", filderBrandId.join(\",\"));\n\n        _this.setState({\n          brandList: oldbrands,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            brand: selectedBrands\n          })\n        }, function () {\n          requestCheckMessage.addData(getName(MessageEnum.FilterCheckedMessageData), _this.state.filterObj);\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        });\n      }\n\n      if (type == \"tag\") {\n        var oldtags = _toConsumableArray(_this.state.tagsList);\n\n        if (shop != null || newArrivals != null) {\n          oldtags && (oldtags === null || oldtags === void 0 ? void 0 : oldtags.forEach(function (item, idx) {\n            if (item.checked == true) {\n              item.checked = !item.checked;\n            }\n          }));\n        }\n\n        oldtags.forEach(function (item, idx) {\n          if (id === item.id) {\n            item.checked = !item.checked;\n          }\n        });\n        var selectedtag = oldtags.filter(function (tag) {\n          return tag.checked;\n        });\n        var filderTagId = selectedtag === null || selectedtag === void 0 ? void 0 : selectedtag.map(function (cat) {\n          return cat.attributes.id;\n        });\n        urlSearch.delete(\"q[tag_id][]\");\n        filderTagId.length > 0 && urlSearch.append(\"q[tag_id][]\", filderTagId.join(\",\"));\n\n        _this.setState({\n          tagsList: oldtags,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            tag: selectedtag\n          })\n        }, function () {\n          requestCheckMessage.addData(getName(MessageEnum.FilterCheckedMessageData), _this.state.filterObj);\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        });\n      }\n\n      if (type == \"category\") {\n        var oldcategory = _this.state.categoryList && _toConsumableArray(_this.state.categoryList);\n\n        var sub_cat = \"\"; //for shop \n\n        if (shop != null || newArrivals != null) {\n          oldcategory && (oldcategory === null || oldcategory === void 0 ? void 0 : oldcategory.forEach(function (item, idx) {\n            var _item$attributes$sub_;\n\n            if (item.checked == true) {\n              item.checked = !item.checked;\n            }\n\n            item === null || item === void 0 ? void 0 : (_item$attributes$sub_ = item.attributes.sub_categories) === null || _item$attributes$sub_ === void 0 ? void 0 : _item$attributes$sub_.forEach(function (sub, idx) {\n              if (Object.keys(JSON.parse(localStorage.getItem(\"subCategory\") || '{}')).length != 0 && JSON.parse(localStorage.getItem(\"subCategory\")).sub_id == sub.id) {\n                sub.checked = !sub.checked;\n              } else {\n                sub.checked = false;\n              }\n            });\n          }));\n        }\n\n        oldcategory && (oldcategory === null || oldcategory === void 0 ? void 0 : oldcategory.forEach(function (item, idx) {\n          if (id == item.id) {\n            var _item$attributes$sub_2, _item$attributes, _item$attributes2;\n\n            if (item.checked == true) {\n              Object.keys(JSON.parse(localStorage.getItem(\"subCategory\") || '{}')).length != 0 && (JSON.parse(localStorage.getItem(\"subCategory\")).cat_id == id ? localStorage.removeItem(\"subCategory\") : \"\");\n            } //Object.keys(JSON.parse(localStorage.getItem(\"subCategory\") || '{}')).length == 0 &&\n\n\n            shop == null && (item === null || item === void 0 ? void 0 : (_item$attributes$sub_2 = item.attributes.sub_categories) === null || _item$attributes$sub_2 === void 0 ? void 0 : _item$attributes$sub_2.forEach(function (sub, idx) {\n              if (sub.checked == true) {\n                sub.checked = !sub.checked;\n              }\n            }));\n            sub_cat = (item === null || item === void 0 ? void 0 : (_item$attributes = item.attributes) === null || _item$attributes === void 0 ? void 0 : _item$attributes.sub_categories.length) > 0 && (item === null || item === void 0 ? void 0 : (_item$attributes2 = item.attributes) === null || _item$attributes2 === void 0 ? void 0 : _item$attributes2.sub_categories[0].id);\n            item.checked = !item.checked;\n          }\n        }));\n        var selectedCategory = oldcategory && oldcategory.filter(function (category) {\n          return category.checked;\n        });\n        var selectedSubCategory = oldcategory && oldcategory.map(function (category) {\n          return category.attributes.sub_categories.filter(function (subcat) {\n            return subcat.checked;\n          });\n        }); //to remove search category from url\n\n        if (urlSearch.get(\"q[sub_category_id][]\") != null) {\n          var sub_cate = urlSearch.get(\"q[sub_category_id][]\").split(',');\n          var filderSubCategoryIdArray = [];\n          var filderSubCategoryId = selectedSubCategory === null || selectedSubCategory === void 0 ? void 0 : selectedSubCategory.filter(function (cat) {\n            return cat.length > 0;\n          }).map(function (item) {\n            item[0].id;\n            item.forEach(function (subcat) {\n              return filderSubCategoryIdArray.push(subcat.id);\n            });\n          }); // if (shop==null) {\n\n          urlSearch.delete(\"q[sub_category_id][]\"); // }\n\n          (filderSubCategoryIdArray === null || filderSubCategoryIdArray === void 0 ? void 0 : filderSubCategoryIdArray.length) > 0 && urlSearch.append(\"q[sub_category_id][]\", filderSubCategoryIdArray.join(\",\"));\n        }\n\n        var filderCategoryId = selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.map(function (cat) {\n          return cat.attributes.id;\n        });\n        urlSearch.delete(\"q[category_id][]\");\n        (filderCategoryId === null || filderCategoryId === void 0 ? void 0 : filderCategoryId.length) > 0 && urlSearch.append(\"q[category_id][]\", filderCategoryId.join(\",\")); // console.log(filderCategoryId, \"filderCategoryIdfilderCategoryId\")\n\n        _this.setState({\n          categoryList: oldcategory,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            category: selectedCategory,\n            sub_category: selectedSubCategory\n          })\n        }, function () {\n          requestCheckMessage.addData(getName(MessageEnum.FilterCheckedMessageData), _this.state.filterObj);\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        });\n      }\n\n      if (type == \"sub_category\") {\n        var _oldcategory = _this.state.categoryList && _toConsumableArray(_this.state.categoryList);\n\n        _oldcategory && (_oldcategory === null || _oldcategory === void 0 ? void 0 : _oldcategory.forEach(function (item, idx) {\n          var _item$attributes$sub_3;\n\n          item === null || item === void 0 ? void 0 : (_item$attributes$sub_3 = item.attributes.sub_categories) === null || _item$attributes$sub_3 === void 0 ? void 0 : _item$attributes$sub_3.forEach(function (sub, idx) {\n            if (sub.id == id) {\n              sub.checked = !sub.checked;\n            }\n          });\n        }));\n\n        var _selectedSubCategory = _oldcategory && _oldcategory.map(function (category) {\n          return category.attributes.sub_categories.filter(function (subcat) {\n            return subcat.checked;\n          });\n        });\n\n        var _filderSubCategoryIdArray = [];\n\n        var _filderSubCategoryId = _selectedSubCategory === null || _selectedSubCategory === void 0 ? void 0 : _selectedSubCategory.filter(function (cat) {\n          return cat.length > 0;\n        }).map(function (item) {\n          item[0].id;\n          item.forEach(function (subcat) {\n            return _filderSubCategoryIdArray.push(subcat.id);\n          });\n        });\n\n        urlSearch.delete(\"q[sub_category_id][]\");\n        (_filderSubCategoryIdArray === null || _filderSubCategoryIdArray === void 0 ? void 0 : _filderSubCategoryIdArray.length) > 0 && urlSearch.append(\"q[sub_category_id][]\", _filderSubCategoryIdArray.join(\",\"));\n\n        _this.setState({\n          categoryList: _oldcategory,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            sub_category: _selectedSubCategory\n          })\n        }, function () {\n          requestCheckMessage.addData(getName(MessageEnum.FilterCheckedMessageData), _this.state.filterObj);\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        });\n      }\n\n      if (type == \"color\") {\n        var oldColor = _toConsumableArray(_this.state.colorList);\n\n        if (shop != null || newArrivals != null) {\n          oldColor && (oldColor === null || oldColor === void 0 ? void 0 : oldColor.forEach(function (item, idx) {\n            if (item.checked == true) {\n              item.checked = !item.checked;\n            }\n          }));\n        }\n\n        oldColor.forEach(function (item, idx) {\n          if (id === item.id) {\n            item.checked = !item.checked;\n          }\n        });\n        var selectedColor = oldColor.filter(function (color) {\n          return color.checked;\n        });\n        console.log(selectedColor, \"==========selectedColor=========\");\n        var filterColorId = selectedColor === null || selectedColor === void 0 ? void 0 : selectedColor.map(function (cat) {\n          return cat.attributes.id;\n        });\n        urlSearch.delete(\"q[color][]\");\n        filterColorId.length > 0 && urlSearch.append(\"q[color][]\", filterColorId.join(\",\"));\n\n        _this.setState({\n          colorList: oldColor,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            color: selectedColor\n          })\n        }, function () {\n          requestCheckMessage.addData(getName(MessageEnum.FilterCheckedMessageData), _this.state.filterObj);\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        });\n      }\n\n      if (type == 'size') {\n        var oldSizes = _toConsumableArray(_this.state.sizesList);\n\n        if (shop != null || newArrivals != null) {\n          oldSizes && (oldSizes === null || oldSizes === void 0 ? void 0 : oldSizes.forEach(function (item, idx) {\n            if (item.checked == true) {\n              item.checked = !item.checked;\n            }\n          }));\n\n          if (shop != null || newArrivals != null) {\n            urlSearch.delete(\"[sub_category]\");\n            urlSearch.delete(\"[newArrivals]\");\n          }\n        }\n\n        oldSizes.forEach(function (item, idx) {\n          if (id === item.id) {\n            item.checked = !item.checked;\n          }\n        });\n        var selectedSize = oldSizes.filter(function (tag) {\n          return tag.checked;\n        });\n        var filterSizeId = selectedSize === null || selectedSize === void 0 ? void 0 : selectedSize.map(function (cat) {\n          return cat.attributes.id;\n        });\n        urlSearch.delete(\"q[size][]\");\n        filterSizeId.length > 0 && urlSearch.append(\"q[size][]\", filterSizeId.join(\",\"));\n\n        _this.setState({\n          sizesList: oldSizes,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            size: selectedSize\n          })\n        }, function () {\n          requestCheckMessage.addData(getName(MessageEnum.FilterCheckedMessageData), _this.state.filterObj);\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        });\n      }\n\n      if (type == 'price') {\n        var priceRang = _this.state.value;\n        var minPrice = priceRang === null || priceRang === void 0 ? void 0 : priceRang.min;\n        var maxPrice = priceRang === null || priceRang === void 0 ? void 0 : priceRang.max;\n        urlSearch.delete(\"q[price][from]\");\n        urlSearch.delete(\"q[price][to]\");\n        urlSearch.append(\"q[price][from]\", minPrice);\n        maxPrice && urlSearch.append(\"q[price][to]\", maxPrice);\n\n        _this.setState({\n          value: priceRang,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            price: priceRang\n          })\n        }, function () {\n          requestCheckMessage.addData(getName(MessageEnum.FilterCheckedMessageData), _this.state.filterObj);\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        });\n      }\n\n      if (type == 'discount') {\n        var oldDiscount = _this.state.isDiscountChecked;\n        var includeDiscount = id;\n        urlSearch.delete(\"discounted_items\");\n        includeDiscount && urlSearch.append(\"discounted_items\", includeDiscount);\n\n        _this.setState({\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            includeDiscount: includeDiscount\n          })\n        }, function () {\n          requestCheckMessage.addData(getName(MessageEnum.FilterCheckedMessageData), _this.state.filterObj);\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        });\n      }\n\n      if (type == 'outOfStock') {\n        var oldSTock = _this.state.isExcludeChecked;\n\n        _this.setState({\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            includeOutOfStock: true\n          })\n        }, function () {\n          requestCheckMessage.addData(getName(MessageEnum.FilterCheckedMessageData), _this.state.filterObj);\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        });\n      }\n\n      _this.props.history.push(\"/Filteroptions?\".concat(decodeURIComponent(urlSearch.toString())));\n    };\n\n    _this.categoryChecked = function () {\n      setTimeout(function () {\n        localStorage.getItem(\"category\") && _this.state.categoryChecked != \"\" && _this.toggleCheckBox(localStorage.getItem(\"category\"), \"category\");\n      }, 2500);\n    };\n\n    _this.subCategoryChecked = function () {\n      var urlSearch = new URLSearchParams(window.location.search);\n      var subCategoryObject = JSON.parse(localStorage.getItem(\"subCategory\")); // if (urlSearch.get(\"[newArrivals]\") != 'true') {\n      //   this.toggleCheckBox(\"\", \"color\");\n      // }\n\n      _this.toggleCheckBox(urlSearch.get(\"q[category_id][]\"), \"category\");\n\n      _this.toggleCheckBox(\"\", \"brand\");\n\n      _this.toggleCheckBox(\"\", \"tag\"); //urlSearch.get(\"[sub_category]\") == 'true' &&\n\n\n      _this.toggleCheckBox(\"\", \"color\");\n\n      _this.toggleCheckBox(\"\", \"size\");\n    };\n\n    _this.getToken = function () {\n      var msg = new Message(getName(MessageEnum.SessionRequestMessage));\n\n      _this.send(msg);\n    };\n\n    _this.unCheckCheckBox = function (type, id) {\n      if (type == \"category\") {\n        var oldcategory = _this.state.categoryList;\n        var sub_cat = \"\"; //console.log(oldcategory,\"oldcategory\");\n        //console.log(this.state.filterObj.sub_category,\"subcategory\")\n\n        oldcategory.forEach(function (item, idx) {\n          if (id == item.id) {\n            sub_cat = item === null || item === void 0 ? void 0 : item.attributes.sub_categories[0].id;\n            item.checked = !item.checked;\n          }\n        });\n        var selectedCategory = oldcategory.filter(function (category) {\n          return category.checked;\n        });\n\n        _this.toggleCheckBox(sub_cat, \"sub_category\");\n\n        _this.setState({\n          categoryList: oldcategory,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            category: selectedCategory\n          })\n        });\n      }\n\n      if (type == \"sub_category\") {\n        var _oldcategory2 = _toConsumableArray(_this.state.categoryList);\n\n        _oldcategory2 && (_oldcategory2 === null || _oldcategory2 === void 0 ? void 0 : _oldcategory2.forEach(function (item, idx) {\n          var _item$attributes$sub_4;\n\n          item === null || item === void 0 ? void 0 : (_item$attributes$sub_4 = item.attributes.sub_categories) === null || _item$attributes$sub_4 === void 0 ? void 0 : _item$attributes$sub_4.forEach(function (sub, idx) {\n            if (sub.id == id) {\n              sub.checked = !sub.checked;\n            }\n          });\n        }));\n\n        var selectedSubCategory = _oldcategory2 && _oldcategory2.map(function (category) {\n          return category.attributes.sub_categories.filter(function (subcat) {\n            // console.log(subcat,\"subcaaat\")\n            return subcat.checked;\n          });\n        });\n\n        _this.setState({\n          categoryList: _oldcategory2,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            category: selectedSubCategory\n          })\n        });\n      } else if (type == \"brand\") {\n        var oldbrands = _toConsumableArray(_this.state.brandList);\n\n        oldbrands.forEach(function (item, idx) {\n          if (id == item.id) {\n            item.checked = !item.checked;\n          }\n        });\n        var selectedBrands = oldbrands.filter(function (brand) {\n          return brand.checked;\n        });\n\n        _this.setState({\n          brandList: oldbrands,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            brand: selectedBrands\n          })\n        });\n      } else if (type == \"tag\") {\n        var oldtags = _toConsumableArray(_this.state.tagsList);\n\n        oldtags.forEach(function (item, idx) {\n          if (id == item.id) {\n            item.checked = !item.checked;\n          }\n        });\n        var selectedtag = oldtags.filter(function (tag) {\n          return tag.checked;\n        });\n\n        _this.setState({\n          tagsList: oldtags,\n          filterObj: _objectSpread(_objectSpread({}, _this.state.filterObj), {}, {\n            tag: selectedtag\n          })\n        });\n      }\n    };\n\n    _this.getBrandList = function (token) {\n      var header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getBrandProductApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.brandAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.getTagList = function (token) {\n      var header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getTagProductApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.tagsAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.getCategoryList = function (token) {\n      var header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getProductCategoryApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.categoryAPIEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.getColorList = function (token) {\n      var header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getProductColorApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.colorAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.getPriceList = function (token) {\n      var header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getProductPriceApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.priceAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.getListRequest = function (token) {\n      var header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getProductApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.productAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.getSizeList = function () {\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getProductSizeApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.sizeAPIEndPoint);\n      var header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.getPriceRangeList = function () {\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getPiceListAPICallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.priceRangeAPIEndPoint);\n      var headers = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: localStorage.getItem('token')\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this)); // Customizable Area Start\n\n    _this.subScribedMessages = [getName(MessageEnum.AccoutLoginSuccess), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.SessionSaveMessage), getName(MessageEnum.SessionResponseMessage), getName(MessageEnum.removeFilter)];\n    _this.state = {\n      token: \"\",\n      data: \"\",\n      subCategorySearch: JSON.parse(localStorage.getItem(\"subCategory\")),\n      prevSubCategorySearch: \"\",\n      arrayHolder: [],\n      brandList: [],\n      brandSearch: \"\",\n      tagsList: [],\n      categoryList: [],\n      colorList: [],\n      colorSearch: \"\",\n      priceList: [],\n      filterObj: {\n        brand: [],\n        color: [],\n        tag: [],\n        category: [],\n        sub_category: [],\n        size: [],\n        price: {\n          min: 0,\n          max: 20\n        },\n        includeDiscount: false,\n        includeOutOfStock: false\n      },\n      sizesList: [],\n      value: {\n        min: 0,\n        max: 0\n      },\n      minPrice: 0\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(FilterOptionListController, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var urlSearch;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                window.scrollTo(0, 0);\n\n                _get(_getPrototypeOf(FilterOptionListController.prototype), \"componentDidMount\", this).call(this);\n\n                this.getToken();\n\n                if (this.isPlatformWeb() === false) {\n                  this.props.navigation.addListener(\"willFocus\", function () {\n                    _this2.getToken();\n                  });\n                }\n\n                this.getCategoryList(localStorage.getItem(\"token\"));\n                setTimeout(function () {\n                  !localStorage.getItem(\"searchQuery\") && !localStorage.getItem(\"newest\") && !localStorage.getItem(\"category\") && _this2.forBannertoggleCheckBox();\n                }, 3000);\n                urlSearch = new URLSearchParams(window.location.search);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() /////// recieve props ////////\n\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(prevState) {\n      //console.log(prevState, \"nextprops\")\n      this.setState({\n        subCategorySearch: JSON.parse(localStorage.getItem(\"subCategory\")),\n        prevSubCategorySearch: this.state.subCategorySearch\n      });\n      var urlSearch = new URLSearchParams(window.location.search);\n      (urlSearch.get(\"[sub_category]\") == 'true' || urlSearch.get(\"[newArrivals]\") == 'true') && this.subCategoryChecked();\n    }\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var token, responseJson, _responseJson, _responseJson$data, brands, _responseJson2, tags, _responseJson3, category, _responseJson4, color, _responseJson5, price, _responseJson6, sizes, _responseJson$data2, _responseJson$data3, _responseJson$data4, maxRangeValue, minRangeValue, finalRangeValues;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Customizable Area Start\n                // localStorage.getItem(\"subCategory\") && this.subCategoryChecked()\n                this.setState({\n                  subCategorySearch: JSON.parse(localStorage.getItem(\"subCategory\"))\n                });\n\n                if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n                  token = message.getData(getName(MessageEnum.SessionResponseToken));\n                  this.setState({\n                    token: token\n                  });\n                  this.getBrandList(token);\n                  this.getTagList(token);\n                  this.getCategoryList(token);\n                  this.getColorList(token);\n                  this.getPriceList(token);\n                  this.getSizeList(token);\n                  this.getPriceRangeList(token);\n                }\n\n                if (getName(MessageEnum.removeFilter) === message.id) {\n                  responseJson = message.getData(getName(MessageEnum.removeFilterData));\n                  this.toggleCheckBox(responseJson.id, responseJson.type);\n                }\n\n                if (getName(MessageEnum.RestAPIResponceMessage) === message.id && this.getProductApiCallId != null && this.getProductApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                }\n\n                if (getName(MessageEnum.RestAPIResponceMessage) === message.id && this.getBrandProductApiCallId != null && this.getBrandProductApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  brands = (_responseJson = responseJson) === null || _responseJson === void 0 ? void 0 : (_responseJson$data = _responseJson.data) === null || _responseJson$data === void 0 ? void 0 : _responseJson$data.brand.data; // setMaxProductValue(res.data.data?.max_product_value || 100000);\n\n                  if (Array.isArray(brands) && brands.length > 0) {\n                    this.setState({\n                      brandList: brands\n                    });\n                  }\n                }\n\n                if (getName(MessageEnum.RestAPIResponceMessage) === message.id && this.getTagProductApiCallId != null && this.getTagProductApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  tags = (_responseJson2 = responseJson) === null || _responseJson2 === void 0 ? void 0 : _responseJson2.data;\n\n                  if (Array.isArray(tags) && tags.length > 0) {\n                    this.setState({\n                      tagsList: tags\n                    });\n                  }\n                }\n\n                if (getName(MessageEnum.RestAPIResponceMessage) === message.id && this.getProductCategoryApiCallId != null && this.getProductCategoryApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  category = (_responseJson3 = responseJson) === null || _responseJson3 === void 0 ? void 0 : _responseJson3.data;\n\n                  if (Array.isArray(category) && category.length > 0) {\n                    this.setState({\n                      categoryList: category\n                    });\n                    this.categoryChecked(); //localStorage.getItem(\"subCategory\") && this.subCategoryChecked()\n                    // this.forBannertoggleCheckBox()\n                  }\n                }\n\n                if (getName(MessageEnum.RestAPIResponceMessage) === message.id && this.getProductColorApiCallId != null && this.getProductColorApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  color = (_responseJson4 = responseJson) === null || _responseJson4 === void 0 ? void 0 : _responseJson4.data;\n\n                  if (Array.isArray(color) && color.length > 0) {\n                    this.setState({\n                      colorList: color\n                    });\n                  }\n                }\n\n                if (getName(MessageEnum.RestAPIResponceMessage) === message.id && this.getProductPriceApiCallId != null && this.getProductPriceApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  price = (_responseJson5 = responseJson) === null || _responseJson5 === void 0 ? void 0 : _responseJson5.data;\n\n                  if (Array.isArray(price) && price.length > 0) {\n                    this.setState({\n                      priceList: price\n                    });\n                  }\n                }\n\n                if (getName(MessageEnum.RestAPIResponceMessage) === message.id && this.getProductSizeApiCallId != null && this.getProductSizeApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  sizes = (_responseJson6 = responseJson) === null || _responseJson6 === void 0 ? void 0 : _responseJson6.data;\n\n                  if (Array.isArray(sizes) && sizes.length > 0) {\n                    this.setState({\n                      sizesList: sizes\n                    });\n                  }\n                }\n\n                if (getName(MessageEnum.RestAPIResponceMessage) === message.id && this.getPiceListAPICallId != null && this.getPiceListAPICallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n\n                  if (responseJson && responseJson.data) {\n                    maxRangeValue = (_responseJson$data2 = responseJson.data) === null || _responseJson$data2 === void 0 ? void 0 : _responseJson$data2.max_product_value;\n                    minRangeValue = (_responseJson$data3 = responseJson.data) === null || _responseJson$data3 === void 0 ? void 0 : _responseJson$data3.min_product_value;\n                    finalRangeValues = {\n                      // min: minRangeValue,\n                      min: 0,\n                      max: maxRangeValue\n                    };\n                    this.setState({\n                      value: finalRangeValues,\n                      maxPrice: (_responseJson$data4 = responseJson.data) === null || _responseJson$data4 === void 0 ? void 0 : _responseJson$data4.max_product_value // minPrice : responseJson.data?.min_product_value\n                      // priceList: finalRangeValues\n\n                    }); // console.log(finalRangeValues, \"Price Range is Calling \", this.state.priceList);\n                  }\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }() // Customizable Area Start\n    // Customizable Area End\n\n  }]);\n\n  return FilterOptionListController;\n}(BlockComponent);\n\nexport { FilterOptionListController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/filteritems/src/FilteroptionsListController.web.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","configJSON","require","FilterOptionListController","props","getProductApiCallId","getBrandProductApiCallId","getTagProductApiCallId","getProductCategoryApiCallId","forBannertoggleCheckBox","id","type","console","log","urlSearch","URLSearchParams","window","location","search","cat_id","get","sub_cat_id","brand_id","tag_id","color_id","size_id","min_price","max_price","discount","order_by","sort_by","delete","newcat_id","split","map","toggleCheckBox","newsub_cat_id","newbrand_id","newtag_id","newcolor_id","newsize_id","dat","min","max","setState","value","setTimeout","isDiscountChecked","requestCheckMessage","FilterCheckedMessage","shop","newArrivals","oldbrands","state","brandList","forEach","item","idx","checked","selectedBrands","filter","brand","filderBrandId","cat","attributes","length","append","join","filterObj","addData","FilterCheckedMessageData","sendMessage","oldtags","tagsList","selectedtag","tag","filderTagId","oldcategory","categoryList","sub_cat","sub_categories","sub","Object","keys","JSON","parse","localStorage","getItem","sub_id","removeItem","selectedCategory","category","selectedSubCategory","subcat","sub_cate","filderSubCategoryIdArray","filderSubCategoryId","push","filderCategoryId","sub_category","oldColor","colorList","selectedColor","color","filterColorId","oldSizes","sizesList","selectedSize","filterSizeId","size","priceRang","minPrice","maxPrice","price","oldDiscount","includeDiscount","oldSTock","isExcludeChecked","includeOutOfStock","history","decodeURIComponent","toString","categoryChecked","subCategoryChecked","subCategoryObject","getToken","msg","SessionRequestMessage","send","unCheckCheckBox","getBrandList","token","header","productApiContentType","requestMessage","RestAPIRequestMessage","messageId","RestAPIResponceEndPointMessage","brandAPiEndPoint","RestAPIRequestHeaderMessage","stringify","RestAPIRequestMethodMessage","apiMethodTypeGet","getTagList","tagsAPiEndPoint","getCategoryList","categoryAPIEndPoint","getColorList","getProductColorApiCallId","colorAPiEndPoint","getPriceList","getProductPriceApiCallId","priceAPiEndPoint","getListRequest","productAPiEndPoint","getSizeList","getProductSizeApiCallId","sizeAPIEndPoint","getPriceRangeList","getPiceListAPICallId","priceRangeAPIEndPoint","headers","receive","bind","subScribedMessages","AccoutLoginSuccess","RestAPIResponceMessage","SessionSaveMessage","SessionResponseMessage","removeFilter","data","subCategorySearch","prevSubCategorySearch","arrayHolder","brandSearch","colorSearch","priceList","attachBuildingBlock","scrollTo","isPlatformWeb","navigation","addListener","prevState","from","message","getData","SessionResponseToken","responseJson","removeFilterData","RestAPIResponceDataMessage","RestAPIResponceSuccessMessage","brands","Array","isArray","tags","sizes","maxRangeValue","max_product_value","minRangeValue","min_product_value","finalRangeValues"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport { CategoryList } from \"../../theme/src/constants\";\n\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  token: string;\n  data: any;\n  arrayHolder: any;\n  brandList: any;\n  brandSearch: string;\n  tagsList: any;\n  categoryList: any;\n  colorList: any;\n  colorSearch: any;\n  priceList: any;\n  filterObj: any;\n  subCategorySearch: any;\n  prevSubCategorySearch: any\n\n  sizesList: any;\n  value: any;\n  isDiscountChecked?: boolean;\n  isExcludeChecked?: boolean;\n  maxPrice?: number;\n  minPrice?: number;\n  givenMaxValue?: number;\n  givenMinValue?: number;\n  isGivenRangeSlected?: boolean;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class FilterOptionListController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  getProductApiCallId: any;\n  getBrandProductApiCallId: any;\n  getTagProductApiCallId: any;\n  getProductCategoryApiCallId: any;\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.AccoutLoginSuccess),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.SessionSaveMessage),\n      getName(MessageEnum.SessionResponseMessage),\n      getName(MessageEnum.removeFilter),\n    ];\n    this.state = {\n      token: \"\",\n      data: \"\",\n      subCategorySearch: JSON.parse(localStorage.getItem(\"subCategory\")),\n      prevSubCategorySearch: \"\",\n      arrayHolder: [],\n      brandList: [],\n      brandSearch: \"\",\n      tagsList: [],\n      categoryList: [],\n      colorList: [],\n      colorSearch: \"\",\n      priceList: [],\n      filterObj: { brand: [], color: [], tag: [], category: [], sub_category: [], size: [], price: { min: 0, max: 20 }, includeDiscount: false, includeOutOfStock: false },\n      sizesList: [],\n      value: { min: 0, max: 0 },\n      minPrice: 0\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n  async componentDidMount() {\n    window.scrollTo(0, 0);\n    super.componentDidMount();\n    this.getToken();\n    if (this.isPlatformWeb() === false) {\n      this.props.navigation.addListener(\"willFocus\", () => {\n        this.getToken();\n      });\n    }\n    this.getCategoryList(localStorage.getItem(\"token\"));\n    setTimeout(() => {\n      !localStorage.getItem(\"searchQuery\") && !localStorage.getItem(\"newest\") && !localStorage.getItem(\"category\") && this.forBannertoggleCheckBox()\n    }, 3000)\n    let urlSearch = new URLSearchParams(window.location.search);\n  }\n\n  /////// recieve props ////////\n  componentWillReceiveProps(prevState: any) {\n    //console.log(prevState, \"nextprops\")\n    this.setState({\n      subCategorySearch: JSON.parse(localStorage.getItem(\"subCategory\")),\n      prevSubCategorySearch: this.state.subCategorySearch\n    })\n\n    let urlSearch = new URLSearchParams(window.location.search);\n    (urlSearch.get(\"[sub_category]\") == 'true' || urlSearch.get(\"[newArrivals]\") == 'true') && this.subCategoryChecked()\n  }\n\n\n\n  forBannertoggleCheckBox = (id: any, type: any) => {\n    console.log(\"forBannertoggleCheckBox\")\n    let urlSearch = new URLSearchParams(window.location.search);\n    const cat_id = urlSearch.get(\"q[category_id][]\");\n    const sub_cat_id = urlSearch.get(\"q[sub_category_id][]\");\n    const brand_id = urlSearch.get(\"q[brand_id][]\");\n    const tag_id = urlSearch.get(\"q[tag_id][]\");\n    const color_id = urlSearch.get(\"q[color][]\");\n    const size_id = urlSearch.get(\"q[size][]\");\n    const min_price = urlSearch.get(\"q[price][from]\");\n    const max_price = urlSearch.get(\"q[price][to]\");\n    const discount = urlSearch.get(\"discounted_items\");\n    const order_by = urlSearch.get(\"sort[order_by]\");\n    const sort_by = urlSearch.get(\"sort[direction]\");\n    const search = urlSearch.get(\"q[name]\");\n\n    //console.log(\"forBannertoggleCheckBoxforBannertoggleCheckBox\")\n    urlSearch.delete(\"[sub_category]\");\n    if (cat_id != null) {\n      const newcat_id = cat_id.split(',')\n      newcat_id.map(id => {\n        this.toggleCheckBox(id, \"category\")\n\n      })\n    }\n    if (sub_cat_id != null) {\n      const newsub_cat_id = sub_cat_id.split(',')\n      newsub_cat_id.map(id => {\n        this.toggleCheckBox(id, \"sub_category\")\n\n      })\n    }\n    if (brand_id != null) {\n      const newbrand_id = brand_id.split(',')\n      newbrand_id.map(id => {\n        this.toggleCheckBox(id, \"brand\")\n\n      })\n    }\n    if (tag_id != null) {\n      const newtag_id = tag_id.split(',')\n      newtag_id.map(id => {\n        this.toggleCheckBox(id, \"tag\")\n\n      })\n    }\n    if (color_id != null) {\n      const newcolor_id = color_id.split(',')\n      newcolor_id.map(id => {\n        this.toggleCheckBox(id, \"color\")\n\n      })\n    }\n    if (size_id != null) {\n      const newsize_id = size_id.split(',')\n      newsize_id.map(id => {\n        this.toggleCheckBox(id, \"size\")\n\n      })\n    }\n    if (min_price != null || max_price != null) {\n      const dat = {\n        min: min_price,\n        max: max_price\n      }\n      this.setState({\n        value: dat\n      });\n      setTimeout(() => {\n        this.toggleCheckBox(dat, \"price\")\n      }, 300);\n    }\n    if (discount != null) {\n      this.setState({\n        isDiscountChecked: discount\n      })\n      setTimeout(() => {\n        this.toggleCheckBox(discount, \"discount\")\n      }, 300);\n    }\n  }\n\n  toggleCheckBox = (id: any, type: any) => {\n    console.log(\"toggleCheckBox working\")\n    const requestCheckMessage = new Message(\n      getName(MessageEnum.FilterCheckedMessage)\n    );\n    var urlSearch = new URLSearchParams(window.location.search);\n    let shop = urlSearch.get(\"[sub_category]\")\n    let newArrivals = urlSearch.get(\"[newArrivals]\")\n\n    if (type == \"brand\") {\n      let oldbrands = [...this.state.brandList];\n\n\n      if (shop != null || newArrivals != null) {\n        oldbrands && oldbrands?.forEach((item, idx) => {\n          if (item.checked == true) {\n            item.checked = !item.checked;\n          }\n        })\n      }\n\n\n      oldbrands.forEach((item, idx) => {\n        if (id == item.id) {\n          item.checked = !item.checked;\n        }\n      });\n      const selectedBrands = oldbrands.filter((brand) => {\n        return brand.checked\n      })\n\n      const filderBrandId = selectedBrands?.map((cat) => cat.attributes.id);\n      urlSearch.delete(\"q[brand_id][]\");\n      console.log(filderBrandId, \"filderBrandIdfilderBrandId\")\n      filderBrandId.length > 0 && urlSearch.append(\"q[brand_id][]\", filderBrandId.join(\",\"));\n\n      this.setState({ brandList: oldbrands, filterObj: { ...this.state.filterObj, brand: selectedBrands } }, () => {\n        requestCheckMessage.addData(\n          getName(MessageEnum.FilterCheckedMessageData),\n          this.state.filterObj\n        );\n\n        runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n      }\n      );\n    }\n    if (type == \"tag\") {\n      let oldtags = [...this.state.tagsList];\n      if (shop != null || newArrivals != null) {\n        oldtags && oldtags?.forEach((item, idx) => {\n          if (item.checked == true) {\n            item.checked = !item.checked;\n          }\n        })\n      }\n\n      oldtags.forEach((item, idx) => {\n        if (id === item.id) {\n          item.checked = !item.checked;\n        }\n      });\n      const selectedtag = oldtags.filter((tag) => {\n        return tag.checked\n      })\n\n\n      const filderTagId = selectedtag?.map((cat) => cat.attributes.id);\n      urlSearch.delete(\"q[tag_id][]\");\n      filderTagId.length > 0 && urlSearch.append(\"q[tag_id][]\", filderTagId.join(\",\"));\n\n      this.setState(\n        {\n          tagsList: oldtags,\n          filterObj: { ...this.state.filterObj, tag: selectedtag }\n        }, () => {\n          requestCheckMessage.addData(\n            getName(MessageEnum.FilterCheckedMessageData),\n            this.state.filterObj\n          );\n\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        }\n      );\n    }\n    if (type == \"category\") {\n      var oldcategory = this.state.categoryList && [...this.state.categoryList];\n      let sub_cat = \"\"\n\n      //for shop \n      if (shop != null || newArrivals != null) {\n        oldcategory && oldcategory?.forEach((item, idx) => {\n          if (item.checked == true) {\n            item.checked = !item.checked;\n          }\n          item?.attributes.sub_categories?.forEach((sub, idx) => {\n            if (Object.keys(JSON.parse(localStorage.getItem(\"subCategory\") || '{}')).length != 0 && JSON.parse(localStorage.getItem(\"subCategory\")).sub_id == sub.id) {\n              sub.checked = !sub.checked\n            } else {\n              sub.checked = false\n            }\n\n          })\n        })\n      }\n\n\n\n      oldcategory && oldcategory?.forEach((item, idx) => {\n        if (id == item.id) {\n          if (item.checked == true) {\n            Object.keys(JSON.parse(localStorage.getItem(\"subCategory\") || '{}')).length != 0 && (\n              JSON.parse(localStorage.getItem(\"subCategory\")).cat_id == id ?\n                localStorage.removeItem(\"subCategory\")\n\n                : \"\"\n\n            )\n          }\n\n          //Object.keys(JSON.parse(localStorage.getItem(\"subCategory\") || '{}')).length == 0 &&\n          (shop == null) && item?.attributes.sub_categories?.forEach((sub, idx) => {\n\n            if (sub.checked == true) {\n\n              sub.checked = !sub.checked;\n            }\n\n          });\n          sub_cat = item?.attributes?.sub_categories.length > 0 && item?.attributes?.sub_categories[0].id\n          item.checked = !item.checked;\n        }\n      });\n\n\n      const selectedCategory = oldcategory && oldcategory.filter((category) => {\n        return category.checked\n      })\n      const selectedSubCategory = oldcategory && oldcategory.map((category) => {\n        return (\n          category.attributes.sub_categories.filter((subcat) => {\n            return subcat.checked\n          })\n        )\n      });\n\n      //to remove search category from url\n      if (urlSearch.get(\"q[sub_category_id][]\") != null) {\n        const sub_cate = urlSearch.get(\"q[sub_category_id][]\").split(',')\n        const filderSubCategoryIdArray = []\n        const filderSubCategoryId = selectedSubCategory?.filter((cat) => cat.length > 0).map(item => {\n          item[0].id\n          item.forEach(subcat => filderSubCategoryIdArray.push(subcat.id))\n\n        });\n        // if (shop==null) {\n        urlSearch.delete(\"q[sub_category_id][]\");\n        // }\n\n\n        filderSubCategoryIdArray?.length > 0 && urlSearch.append(\"q[sub_category_id][]\", filderSubCategoryIdArray.join(\",\"));\n\n      }\n\n      const filderCategoryId = selectedCategory?.map((cat) => cat.attributes.id);\n      urlSearch.delete(\"q[category_id][]\");\n      filderCategoryId?.length > 0 && urlSearch.append(\"q[category_id][]\", filderCategoryId.join(\",\"));\n      // console.log(filderCategoryId, \"filderCategoryIdfilderCategoryId\")\n\n\n      this.setState({ categoryList: oldcategory, filterObj: { ...this.state.filterObj, category: selectedCategory, sub_category: selectedSubCategory } }, () => {\n        requestCheckMessage.addData(\n          getName(MessageEnum.FilterCheckedMessageData),\n          this.state.filterObj\n        );\n\n        runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n      });\n    }\n    if (type == \"sub_category\") {\n      let oldcategory = this.state.categoryList && [...this.state.categoryList];\n      oldcategory && oldcategory?.forEach((item, idx) => {\n        item?.attributes.sub_categories?.forEach((sub, idx) => {\n          if (sub.id == id) {\n            sub.checked = !sub.checked;\n          }\n        });\n\n      });\n      const selectedSubCategory = oldcategory && oldcategory.map((category) => {\n        return (\n          category.attributes.sub_categories.filter((subcat) => {\n            return subcat.checked\n          })\n\n        )\n      });\n\n\n      const filderSubCategoryIdArray = []\n      const filderSubCategoryId = selectedSubCategory?.filter((cat) => cat.length > 0).map(item => {\n        item[0].id\n        item.forEach(subcat => filderSubCategoryIdArray.push(subcat.id))\n\n      });\n\n      urlSearch.delete(\"q[sub_category_id][]\");\n      filderSubCategoryIdArray?.length > 0 && urlSearch.append(\"q[sub_category_id][]\", filderSubCategoryIdArray.join(\",\"));\n      this.setState({ categoryList: oldcategory, filterObj: { ...this.state.filterObj, sub_category: selectedSubCategory } }, () => {\n        requestCheckMessage.addData(\n          getName(MessageEnum.FilterCheckedMessageData),\n          this.state.filterObj\n        );\n\n        runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n      });\n    }\n    if (type == \"color\") {\n      let oldColor = [...this.state.colorList];\n\n      if (shop != null || newArrivals != null) {\n        oldColor && oldColor?.forEach((item, idx) => {\n          if (item.checked == true) {\n            item.checked = !item.checked;\n          }\n        })\n      }\n      oldColor.forEach((item, idx) => {\n        if (id === item.id) {\n          item.checked = !item.checked;\n        }\n      })\n\n      const selectedColor = oldColor.filter((color) => {\n        return color.checked;\n      });\n      console.log(selectedColor, \"==========selectedColor=========\")\n\n      const filterColorId = selectedColor?.map((cat) => cat.attributes.id);\n      urlSearch.delete(\"q[color][]\");\n      filterColorId.length > 0 && urlSearch.append(\"q[color][]\", filterColorId.join(\",\"));\n\n      this.setState(\n        {\n          colorList: oldColor,\n          filterObj: { ...this.state.filterObj, color: selectedColor }\n        }, () => {\n          requestCheckMessage.addData(\n            getName(MessageEnum.FilterCheckedMessageData),\n            this.state.filterObj\n          );\n\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        }\n      );\n\n\n    }\n    if (type == 'size') {\n      let oldSizes = [...this.state.sizesList];\n      if (shop != null || newArrivals != null) {\n        oldSizes && oldSizes?.forEach((item, idx) => {\n          if (item.checked == true) {\n            item.checked = !item.checked;\n          }\n        })\n        if (shop != null || newArrivals != null) {\n          urlSearch.delete(\"[sub_category]\");\n          urlSearch.delete(\"[newArrivals]\");\n\n        }\n      }\n      oldSizes.forEach((item, idx) => {\n        if (id === item.id) {\n          item.checked = !item.checked;\n        }\n      });\n      const selectedSize = oldSizes.filter((tag) => {\n        return tag.checked;\n      });\n\n      const filterSizeId = selectedSize?.map((cat) => cat.attributes.id);\n      urlSearch.delete(\"q[size][]\");\n      filterSizeId.length > 0 && urlSearch.append(\"q[size][]\", filterSizeId.join(\",\"));\n\n      this.setState(\n        {\n          sizesList: oldSizes,\n          filterObj: { ...this.state.filterObj, size: selectedSize }\n        }, () => {\n          requestCheckMessage.addData(\n            getName(MessageEnum.FilterCheckedMessageData),\n            this.state.filterObj\n          );\n\n          runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n        }\n      );\n    }\n    if (type == 'price') {\n\n\n      let priceRang = this.state.value;\n\n      const minPrice = priceRang?.min;\n      const maxPrice = priceRang?.max;\n      urlSearch.delete(\"q[price][from]\");\n      urlSearch.delete(\"q[price][to]\");\n\n\n      urlSearch.append(\"q[price][from]\", minPrice);\n      maxPrice && urlSearch.append(\"q[price][to]\", maxPrice);\n\n\n\n      this.setState({\n        value: priceRang,\n        filterObj: { ...this.state.filterObj, price: priceRang }\n      }, () => {\n        requestCheckMessage.addData(\n          getName(MessageEnum.FilterCheckedMessageData),\n          this.state.filterObj\n        );\n        runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n\n      });\n    }\n    if (type == 'discount') {\n      const oldDiscount = this.state.isDiscountChecked;\n      const includeDiscount = id\n      urlSearch.delete(\"discounted_items\");\n\n      includeDiscount && urlSearch.append(\"discounted_items\", includeDiscount);\n\n\n      this.setState({\n        filterObj: { ...this.state.filterObj, includeDiscount: includeDiscount }\n      }, () => {\n        requestCheckMessage.addData(\n          getName(MessageEnum.FilterCheckedMessageData),\n          this.state.filterObj\n        );\n        runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n      })\n    }\n    if (type == 'outOfStock') {\n      const oldSTock = this.state.isExcludeChecked;\n      this.setState({\n        filterObj: { ...this.state.filterObj, includeOutOfStock: true }\n      }, () => {\n        requestCheckMessage.addData(\n          getName(MessageEnum.FilterCheckedMessageData),\n          this.state.filterObj\n        );\n        runEngine.sendMessage(requestCheckMessage.id, requestCheckMessage);\n      })\n    }\n\n    this.props.history.push(`/Filteroptions?${decodeURIComponent(urlSearch.toString())}`);\n  };\n\n  // choosing category from home page\n  categoryChecked = () => {\n    setTimeout(() => {\n\n      localStorage.getItem(\"category\") && this.state.categoryChecked != \"\" && this.toggleCheckBox(localStorage.getItem(\"category\"), \"category\")\n    }, 2500)\n  }\n\n  // choosing subcategory from home page\n  subCategoryChecked = () => {\n    let urlSearch = new URLSearchParams(window.location.search);\n    const subCategoryObject = JSON.parse(localStorage.getItem(\"subCategory\"));\n    // if (urlSearch.get(\"[newArrivals]\") != 'true') {\n    //   this.toggleCheckBox(\"\", \"color\");\n    // }\n\n    this.toggleCheckBox(urlSearch.get(\"q[category_id][]\"), \"category\")\n    this.toggleCheckBox(\"\", \"brand\")\n    this.toggleCheckBox(\"\", \"tag\")\n    //urlSearch.get(\"[sub_category]\") == 'true' &&\n    this.toggleCheckBox(\"\", \"color\")\n    this.toggleCheckBox(\"\", \"size\")\n\n  }\n\n\n  getToken = () => {\n    const msg: Message = new Message(\n      getName(MessageEnum.SessionRequestMessage)\n    );\n    this.send(msg);\n  };\n\n  unCheckCheckBox = (type, id) => {\n    if (type == \"category\") {\n      let oldcategory = this.state.categoryList;\n      let sub_cat = \"\"\n      //console.log(oldcategory,\"oldcategory\");\n      //console.log(this.state.filterObj.sub_category,\"subcategory\")\n\n      oldcategory.forEach((item, idx) => {\n        if (id == item.id) {\n          sub_cat = item?.attributes.sub_categories[0].id\n          item.checked = !item.checked;\n        }\n      });\n      const selectedCategory = oldcategory.filter((category) => {\n        return category.checked\n      })\n\n      this.toggleCheckBox(sub_cat, \"sub_category\")\n\n      this.setState({ categoryList: oldcategory, filterObj: { ...this.state.filterObj, category: selectedCategory } })\n    }\n    if (type == \"sub_category\") {\n      let oldcategory = [...this.state.categoryList];\n\n\n      oldcategory && oldcategory?.forEach((item, idx) => {\n        item?.attributes.sub_categories?.forEach((sub, idx) => {\n          if (sub.id == id) {\n            sub.checked = !sub.checked;\n          }\n        });\n\n      });\n\n      const selectedSubCategory = oldcategory && oldcategory.map((category) => {\n        return (\n          category.attributes.sub_categories.filter((subcat) => {\n            // console.log(subcat,\"subcaaat\")\n            return subcat.checked\n          })\n\n        )\n      });\n\n      this.setState({ categoryList: oldcategory, filterObj: { ...this.state.filterObj, category: selectedSubCategory } })\n    }\n\n    else if (type == \"brand\") {\n      let oldbrands = [...this.state.brandList];\n      oldbrands.forEach((item, idx) => {\n        if (id == item.id) {\n          item.checked = !item.checked;\n        }\n      });\n      const selectedBrands = oldbrands.filter((brand) => {\n        return brand.checked\n      })\n      this.setState({ brandList: oldbrands, filterObj: { ...this.state.filterObj, brand: selectedBrands } })\n    }\n\n    else if (type == \"tag\") {\n      let oldtags = [...this.state.tagsList];\n      oldtags.forEach((item, idx) => {\n        if (id == item.id) {\n          item.checked = !item.checked;\n        }\n      });\n      const selectedtag = oldtags.filter((tag) => {\n        return tag.checked\n      })\n      this.setState({ tagsList: oldtags, filterObj: { ...this.state.filterObj, tag: selectedtag } })\n    }\n  }\n\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    // localStorage.getItem(\"subCategory\") && this.subCategoryChecked()\n\n    this.setState({\n      subCategorySearch: JSON.parse(localStorage.getItem(\"subCategory\"))\n    })\n    if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      let token = message.getData(getName(MessageEnum.SessionResponseToken));\n      this.setState({ token: token });\n      this.getBrandList(token);\n      this.getTagList(token);\n      this.getCategoryList(token);\n      this.getColorList(token);\n      this.getPriceList(token);\n      this.getSizeList(token);\n      this.getPriceRangeList(token);\n    }\n\n    if (getName(MessageEnum.removeFilter) === message.id) {\n      var responseJson = message.getData(\n        getName(MessageEnum.removeFilterData)\n      );\n      this.toggleCheckBox(responseJson.id, responseJson.type);\n    }\n\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getProductApiCallId != null &&\n      this.getProductApiCallId ===\n      message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n    }\n\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getBrandProductApiCallId != null &&\n      this.getBrandProductApiCallId ===\n      message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      let brands = responseJson?.data?.brand.data;\n      // setMaxProductValue(res.data.data?.max_product_value || 100000);\n      if (Array.isArray(brands) && brands.length > 0) {\n        this.setState({ brandList: brands });\n      }\n    }\n\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getTagProductApiCallId != null &&\n      this.getTagProductApiCallId ===\n      message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      let tags = responseJson?.data;\n      if (Array.isArray(tags) && tags.length > 0) {\n        this.setState({ tagsList: tags });\n      }\n    }\n\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getProductCategoryApiCallId != null &&\n      this.getProductCategoryApiCallId ===\n      message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      let category = responseJson?.data;\n      if (Array.isArray(category) && category.length > 0) {\n        this.setState({ categoryList: category });\n        this.categoryChecked()\n        //localStorage.getItem(\"subCategory\") && this.subCategoryChecked()\n        // this.forBannertoggleCheckBox()\n      }\n    }\n\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getProductColorApiCallId != null &&\n      this.getProductColorApiCallId ===\n      message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      let color = responseJson?.data;\n      if (Array.isArray(color) && color.length > 0) {\n        this.setState({ colorList: color });\n      }\n    }\n\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getProductPriceApiCallId != null &&\n      this.getProductPriceApiCallId ===\n      message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      let price = responseJson?.data;\n      if (Array.isArray(price) && price.length > 0) {\n        this.setState({ priceList: price });\n      }\n    }\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getProductSizeApiCallId != null &&\n      this.getProductSizeApiCallId ===\n      message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      let sizes = responseJson?.data;\n      if (Array.isArray(sizes) && sizes.length > 0) {\n        this.setState({ sizesList: sizes });\n      }\n    }\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getPiceListAPICallId != null &&\n      this.getPiceListAPICallId ===\n      message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      if (responseJson && responseJson.data) {\n        let maxRangeValue = responseJson.data?.max_product_value;\n        let minRangeValue = responseJson.data?.min_product_value;\n        let finalRangeValues = {\n          // min: minRangeValue,\n          min: 0,\n          max: maxRangeValue\n        }\n        this.setState({\n          value: finalRangeValues,\n          maxPrice: responseJson.data?.max_product_value,\n          // minPrice : responseJson.data?.min_product_value\n          // priceList: finalRangeValues\n        });\n        // console.log(finalRangeValues, \"Price Range is Calling \", this.state.priceList);\n      }\n    }\n  }\n\n  getBrandList = (token: any) => {\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: localStorage.getItem(\"token\")\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getBrandProductApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.brandAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  getTagList = (token: any) => {\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: localStorage.getItem(\"token\")\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getTagProductApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.tagsAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  getCategoryList = (token: any) => {\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: localStorage.getItem(\"token\")\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getProductCategoryApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.categoryAPIEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  getColorList = (token: any) => {\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: localStorage.getItem(\"token\")\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getProductColorApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.colorAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  getPriceList = (token: any) => {\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: localStorage.getItem(\"token\")\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getProductPriceApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.priceAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  getListRequest = (token: any) => {\n\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: localStorage.getItem(\"token\")\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getProductApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.productAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n  //GET Size's List API\n  getSizeList = () => {\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.getProductSizeApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.sizeAPIEndPoint\n    );\n\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: localStorage.getItem(\"token\")\n    };\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n  //GET Price Range List API\n  getPriceRangeList = () => {\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.getPiceListAPICallId = requestMessage.messageId;\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.priceRangeAPIEndPoint);\n\n    const headers = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: localStorage.getItem('token')\n    };\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n  // Customizable Area Start\n  // Customizable Area End\n}"]},"metadata":{},"sourceType":"module"}