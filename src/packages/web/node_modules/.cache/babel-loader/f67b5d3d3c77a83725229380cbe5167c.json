{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\"; // @ts-ignore\n\nimport chunk from \"lodash/chunk\";\n;\n;\n;\n\nvar configJSON = require(\"./config\");\n\nvar FooterController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(FooterController, _BlockComponent);\n\n  var _super = _createSuper(FooterController);\n\n  function FooterController(props) {\n    var _this;\n\n    _classCallCheck(this, FooterController);\n\n    _this = _super.call(this, props);\n    _this.helpCenterallId = \"\";\n    _this.barndAPiCallId = void 0;\n\n    _this.handleBrandSettings = function () {\n      _this.setState({\n        isBrandSettingsLoaded: true\n      });\n\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.barndAPiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.brandSettingAPIEndPoint);\n      var headers = {\n        'Content-Type': 'application/json'\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.getMyThemes = function (themeAttributes) {\n      if (themeAttributes) {\n        var _themeAttributes$butt, _themeAttributes$butt2, _themeAttributes$butt3, _themeAttributes$butt4, _themeAttributes$main, _themeAttributes$main2, _themeAttributes$prof, _themeAttributes$prof2, _themeAttributes$prof3;\n\n        localStorage.setItem('appThemData', JSON.stringify(themeAttributes)); // CacheState.set({ webThemes: themeAttributes });\n\n        var root = document.documentElement;\n        root.style.setProperty('--color-ButtonBackRegular', themeAttributes === null || themeAttributes === void 0 ? void 0 : (_themeAttributes$butt = themeAttributes.buttonsColor) === null || _themeAttributes$butt === void 0 ? void 0 : _themeAttributes$butt.regularButtonColor);\n        root.style.setProperty('--color-ButtonTextRegular', themeAttributes === null || themeAttributes === void 0 ? void 0 : (_themeAttributes$butt2 = themeAttributes.buttonsColor) === null || _themeAttributes$butt2 === void 0 ? void 0 : _themeAttributes$butt2.regularTextColor);\n        root.style.setProperty('--color-ButtonBackHover', themeAttributes === null || themeAttributes === void 0 ? void 0 : (_themeAttributes$butt3 = themeAttributes.buttonsColor) === null || _themeAttributes$butt3 === void 0 ? void 0 : _themeAttributes$butt3.hoverButtonColor);\n        root.style.setProperty('--color-ButtonTextHover', themeAttributes === null || themeAttributes === void 0 ? void 0 : (_themeAttributes$butt4 = themeAttributes.buttonsColor) === null || _themeAttributes$butt4 === void 0 ? void 0 : _themeAttributes$butt4.hoverTextColor);\n        root.style.setProperty('--color-RegularText', themeAttributes === null || themeAttributes === void 0 ? void 0 : (_themeAttributes$main = themeAttributes.mainTextsColor) === null || _themeAttributes$main === void 0 ? void 0 : _themeAttributes$main.regularColorCode);\n        root.style.setProperty('--color-RegularActiveText', themeAttributes === null || themeAttributes === void 0 ? void 0 : (_themeAttributes$main2 = themeAttributes.mainTextsColor) === null || _themeAttributes$main2 === void 0 ? void 0 : _themeAttributes$main2.activeColorCode);\n        root.style.setProperty('--color-commonBorder', themeAttributes === null || themeAttributes === void 0 ? void 0 : themeAttributes.commonBordersColor);\n        root.style.setProperty('--color-filterBar', themeAttributes === null || themeAttributes === void 0 ? void 0 : themeAttributes.productFilterSliderColor);\n        root.style.setProperty('--color-wishlistIconColor', themeAttributes === null || themeAttributes === void 0 ? void 0 : (_themeAttributes$prof = themeAttributes.profile) === null || _themeAttributes$prof === void 0 ? void 0 : _themeAttributes$prof.wishlistQtyIconColor);\n        root.style.setProperty('--color-wishlistIconText', themeAttributes === null || themeAttributes === void 0 ? void 0 : (_themeAttributes$prof2 = themeAttributes.profile) === null || _themeAttributes$prof2 === void 0 ? void 0 : _themeAttributes$prof2.wishlistQtyTextColor);\n        root.style.setProperty('--color-orderDetailsText', themeAttributes === null || themeAttributes === void 0 ? void 0 : (_themeAttributes$prof3 = themeAttributes.profile) === null || _themeAttributes$prof3 === void 0 ? void 0 : _themeAttributes$prof3.orderDetailColor);\n      }\n    };\n\n    _this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.NavigationPayLoadMessage), getName(MessageEnum.CountryCodeMessage)];\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this));\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    _this.state = {\n      //@ts-ignore\n      theamData: JSON.parse(localStorage.getItem(\"appThemData\")),\n      usefulLinks: []\n    };\n    return _this;\n  }\n\n  _createClass(FooterController, [{\n    key: \"receive\",\n    value: //API Call Receive Function --> Response\n    function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(from, message) {\n        var apiRequestCallID, responseJSON, errorMessage, _responseJSON$brand_s, _responseJSON$brand_s2, _responseJSON$brand_s3, _responseJSON$brand_s4, dat;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallID = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (this.helpCenterallId === apiRequestCallID) {\n                    if (responseJSON && (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.data)) {\n                      this.setState({\n                        usefulLinks: chunk(responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.data, 4)\n                      });\n                    }\n                  }\n\n                  if (apiRequestCallID === this.barndAPiCallId) {\n                    if (responseJSON && responseJSON.brand_setting) {\n                      this.setState({\n                        isBrandSettingsLoaded: false\n                      });\n                      dat = {\n                        countryName: (_responseJSON$brand_s = responseJSON.brand_setting) === null || _responseJSON$brand_s === void 0 ? void 0 : (_responseJSON$brand_s2 = _responseJSON$brand_s.ExtraFields) === null || _responseJSON$brand_s2 === void 0 ? void 0 : _responseJSON$brand_s2.country,\n                        countryCode: (_responseJSON$brand_s3 = responseJSON.brand_setting) === null || _responseJSON$brand_s3 === void 0 ? void 0 : (_responseJSON$brand_s4 = _responseJSON$brand_s3.ExtraFields) === null || _responseJSON$brand_s4 === void 0 ? void 0 : _responseJSON$brand_s4.currency_type\n                      };\n                      localStorage.setItem('countryCode', JSON.stringify(dat));\n                      this.getMyThemes(responseJSON.brand_setting);\n                    }\n                  }\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.getHelpceterData();\n                this.handleBrandSettings();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getHelpceterData\",\n    value: function getHelpceterData() {\n      var token = localStorage.getItem(\"token\");\n      var headers = {\n        token: token,\n        \"Content-Type\": \"application/json\"\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.helpCenterallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getHelpCenterAPIEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod); // Sending Request to call API.\n\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    } //barndSettingAPIcall\n\n  }]);\n\n  return FooterController;\n}(BlockComponent);\n\nexport { FooterController as default };\n;","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/components/src/AppFooter/FooterController.web.tsx"],"names":["Message","BlockComponent","runEngine","MessageEnum","getName","chunk","configJSON","require","FooterController","props","helpCenterallId","barndAPiCallId","handleBrandSettings","setState","isBrandSettingsLoaded","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","brandSettingAPIEndPoint","headers","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","apiGetMethod","sendMessage","id","getMyThemes","themeAttributes","localStorage","setItem","root","document","documentElement","style","setProperty","buttonsColor","regularButtonColor","regularTextColor","hoverButtonColor","hoverTextColor","mainTextsColor","regularColorCode","activeColorCode","commonBordersColor","productFilterSliderColor","profile","wishlistQtyIconColor","wishlistQtyTextColor","orderDetailColor","subScribedMessages","RestAPIResponceMessage","NavigationPayLoadMessage","CountryCodeMessage","receive","bind","attachBuildingBlock","state","theamData","parse","getItem","usefulLinks","from","message","apiRequestCallID","getData","RestAPIResponceDataMessage","responseJSON","RestAPIResponceSuccessMessage","errorMessage","RestAPIResponceErrorMessage","data","brand_setting","dat","countryName","ExtraFields","country","countryCode","currency_type","getHelpceterData","token","getHelpCenterAPIEndPoint"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\n\n// @ts-ignore\nimport chunk from \"lodash/chunk\";\n\nexport interface Props {\n\n};\n\nexport interface S {\n  theamData: any;\n  usefulLinks: any;\n  isBrandSettingsLoaded?: boolean;\n};\n\nexport interface SS {\n  id: any;\n};\n\nconst configJSON = require(\"./config\");\n\nexport default class FooterController extends BlockComponent<Props, S, SS>{\n  helpCenterallId: string = \"\";\n  barndAPiCallId: string;\n  constructor(props: Props) {\n    super(props);\n    this.subScribedMessages = [\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.NavigationPayLoadMessage),\n      getName(MessageEnum.CountryCodeMessage)\n    ];\n    this.receive = this.receive.bind(this);\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n    this.state = {\n      //@ts-ignore\n      theamData: JSON.parse(localStorage.getItem(\"appThemData\")),\n      usefulLinks: [],\n    }\n  };\n\n\n  //API Call Receive Function --> Response\n  async receive(from: string, message: Message) {\n    if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n      const apiRequestCallID = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n      const responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      const errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n      if (this.helpCenterallId === apiRequestCallID) {\n        if (responseJSON && responseJSON?.data) {\n          this.setState({ usefulLinks: chunk(responseJSON?.data, 4) });\n        }\n      }\n      if (apiRequestCallID === this.barndAPiCallId) {\n        if (responseJSON && responseJSON.brand_setting) {\n          this.setState({\n            isBrandSettingsLoaded: false\n          });\n          let dat = {\n            countryName: responseJSON.brand_setting?.ExtraFields?.country,\n            countryCode: responseJSON.brand_setting?.ExtraFields?.currency_type\n          };\n          localStorage.setItem('countryCode', JSON.stringify(dat));\n          this.getMyThemes(responseJSON.brand_setting);\n        }\n      }\n    }\n  }\n\n  async componentDidMount() {\n    this.getHelpceterData();\n    this.handleBrandSettings();\n  }\n\n\n  getHelpceterData() {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      token,\n      \"Content-Type\": \"application/json\"\n    }\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.helpCenterallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getHelpCenterAPIEndPoint);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n    // Sending Request to call API.\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n  //barndSettingAPIcall\n  handleBrandSettings = () => {\n    this.setState({\n      isBrandSettingsLoaded: true\n    });\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.barndAPiCallId = requestMessage.messageId;\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.brandSettingAPIEndPoint);\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n  //@ts-ignore\n  getMyThemes = (themeAttributes): any => {\n    if (themeAttributes) {\n      localStorage.setItem('appThemData', JSON.stringify(themeAttributes));\n      // CacheState.set({ webThemes: themeAttributes });\n      const root = document.documentElement;\n      root.style.setProperty(\n        '--color-ButtonBackRegular',\n        themeAttributes?.buttonsColor?.regularButtonColor\n      );\n      root.style.setProperty(\n        '--color-ButtonTextRegular',\n        themeAttributes?.buttonsColor?.regularTextColor\n      );\n      root.style.setProperty(\n        '--color-ButtonBackHover',\n        themeAttributes?.buttonsColor?.hoverButtonColor\n      );\n      root.style.setProperty(\n        '--color-ButtonTextHover',\n        themeAttributes?.buttonsColor?.hoverTextColor\n      );\n      root.style.setProperty(\n        '--color-RegularText',\n        themeAttributes?.mainTextsColor?.regularColorCode\n      );\n      root.style.setProperty(\n        '--color-RegularActiveText',\n        themeAttributes?.mainTextsColor?.activeColorCode\n      );\n      root.style.setProperty(\n        '--color-commonBorder',\n        themeAttributes?.commonBordersColor\n      );\n      root.style.setProperty(\n        '--color-filterBar',\n        themeAttributes?.productFilterSliderColor\n      );\n      root.style.setProperty(\n        '--color-wishlistIconColor',\n        themeAttributes?.profile?.wishlistQtyIconColor\n      );\n      root.style.setProperty(\n        '--color-wishlistIconText',\n        themeAttributes?.profile?.wishlistQtyTextColor\n      );\n      root.style.setProperty(\n        '--color-orderDetailsText',\n        themeAttributes?.profile?.orderDetailColor\n      );\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}