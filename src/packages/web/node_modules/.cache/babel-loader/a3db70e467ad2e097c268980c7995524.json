{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport parse from 'html-react-parser'; // @ts-ignore\n\nimport map from \"lodash/map\"; // Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport var configJSON = require(\"./config\");\n\nvar AboutUsController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(AboutUsController, _BlockComponent);\n\n  var _super = _createSuper(AboutUsController);\n\n  // Customizable Area Start\n  // Customizable Area End\n  function AboutUsController(props) {\n    var _this;\n\n    _classCallCheck(this, AboutUsController);\n\n    _this = _super.call(this, props);\n    _this.getHelpCenterCallID = \"\";\n    _this.getCustomerFeedbackAPICallId = void 0;\n\n    _this.getCustomerFeedback = function () {\n      _this.setState({\n        loading: true\n      });\n\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getCustomerFeedbackAPICallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getCustomerFeedbackAPIEndpoint);\n      var headers = {\n        \"Content-Type\": configJSON.ApiContentType\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.GetMethodType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this)); // Customizable Area Start\n\n    _this.subScribedMessages = [getName(MessageEnum.CountryCodeMessage), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.ReciveUserCredentials)];\n    _this.state = {\n      content: \"\",\n      loading: true\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(AboutUsController, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n                this.getHelpceterData();\n                this.getCustomerFeedback();\n                window.scrollTo(0, 0); // Customizable Area Start\n                // Customizable Area End\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // Customizable Area Start\n    // Customizable Area End\n\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var _this2 = this;\n\n        var apiRequestCallId, responseJSON, errorMessage;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Customizable Area Start\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (this.getHelpCenterCallID === apiRequestCallId) {\n                    this.setState({\n                      loading: false\n                    });\n\n                    if (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.errors) {\n                      map(responseJSON.errors, function (error) {\n                        map(error, function (value, key) {\n                          // @ts-ignore\n                          window.notify([{\n                            message: value || \"Something went wrong!!!\",\n                            type: \"danger\"\n                          }]);\n                        });\n                      });\n                    }\n\n                    if (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.data) {\n                      map(responseJSON.data, function (d) {\n                        if (d.attributes.help_center_type === \"About Us\") {\n                          _this2.setState({\n                            content: parse(d.attributes.description)\n                          });\n                        }\n                      });\n                    }\n                  }\n\n                  if (apiRequestCallId === this.getCustomerFeedbackAPICallId) {\n                    if (responseJSON && responseJSON.feedbacks && responseJSON.feedbacks.length > 0) {\n                      this.setState({\n                        loading: false,\n                        customerFeedBackData: responseJSON.feedbacks\n                      });\n                    }\n                  }\n                } // Customizable Area End\n\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"getHelpceterData\",\n    value: function getHelpceterData() {\n      var header = {\n        \"Content-Type\": \"application/json\"\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getHelpCenterCallID = requestMessage.messageId; // Set Method Type\n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.GetMethodType); // Set EndPoints\n\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.helpCenterAPIEndPoint); // set Headers \n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    } //get customer feedback \n\n  }]);\n\n  return AboutUsController;\n}(BlockComponent);\n\nexport { AboutUsController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/contactus/src/AboutUsController.web.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","parse","map","configJSON","require","AboutUsController","props","getHelpCenterCallID","getCustomerFeedbackAPICallId","getCustomerFeedback","setState","loading","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","getCustomerFeedbackAPIEndpoint","headers","ApiContentType","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","GetMethodType","sendMessage","id","receive","bind","subScribedMessages","CountryCodeMessage","RestAPIResponceMessage","ReciveUserCredentials","state","content","attachBuildingBlock","send","RequestUserCredentials","getHelpceterData","window","scrollTo","from","message","apiRequestCallId","getData","RestAPIResponceDataMessage","responseJSON","RestAPIResponceSuccessMessage","errorMessage","RestAPIResponceErrorMessage","errors","error","value","key","notify","type","data","d","attributes","help_center_type","description","feedbacks","length","customerFeedBackData","header","helpCenterAPIEndPoint"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\n\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport parse from 'html-react-parser';\n// @ts-ignore\nimport map from \"lodash/map\";\n\n// Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  history: any;\n  match: any;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  content: any;\n  loading: boolean;\n  customerFeedBackData?: any;\n  // Customizable Area End\n}\n\ninterface SS {\n  // Customizable Area Start\n  id: any;\n  // Customizable Area End\n}\n\nexport default class AboutUsController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n\n  // Customizable Area Start\n  getHelpCenterCallID: string = \"\";\n  getCustomerFeedbackAPICallId: string;\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.CountryCodeMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.ReciveUserCredentials)\n    ]\n\n    this.state = {\n      content: \"\",\n      loading: true,\n    };\n\n    // Customizable Area End\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n\n  }\n\n\n\n  async componentDidMount() {\n\n    this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n    this.getHelpceterData();\n    this.getCustomerFeedback();\n    window.scrollTo(0, 0);\n    // Customizable Area Start\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n\n  // Customizable Area End\n\n  async receive(from: string, message: Message) {\n\n    // Customizable Area Start\n    if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n      const apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n      const responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      const errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n      if (this.getHelpCenterCallID === apiRequestCallId) {\n        this.setState({ loading: false });\n\n        if (responseJSON?.errors) {\n          map(responseJSON.errors, (error: any) => {\n            map(error, (value: any, key: any) => {\n              // @ts-ignore\n              window.notify([{ message: value || \"Something went wrong!!!\", type: \"danger\" }])\n            })\n          })\n        }\n\n        if (responseJSON?.data) {\n          map(responseJSON.data, (d: any) => {\n            if (d.attributes.help_center_type === \"About Us\") {\n              this.setState({ content: parse(d.attributes.description) })\n            }\n          })\n        }\n      }\n      if (apiRequestCallId === this.getCustomerFeedbackAPICallId) {\n        if (responseJSON && responseJSON.feedbacks && responseJSON.feedbacks.length > 0) {\n          this.setState({\n            loading: false,\n            customerFeedBackData: responseJSON.feedbacks\n          });\n        }\n      }\n    }\n    // Customizable Area End\n  }\n\n  getHelpceterData() {\n    const header = {\n      \"Content-Type\": \"application/json\"\n    }\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.getHelpCenterCallID = requestMessage.messageId;\n    // Set Method Type\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.GetMethodType)\n    // Set EndPoints\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.helpCenterAPIEndPoint);\n    // set Headers \n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header);\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  //get customer feedback \n  getCustomerFeedback = () => {\n    this.setState({\n      loading: true\n    })\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.getCustomerFeedbackAPICallId = requestMessage.messageId;\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getCustomerFeedbackAPIEndpoint);\n\n    const headers = {\n      \"Content-Type\": configJSON.ApiContentType\n    };\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.GetMethodType);\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}