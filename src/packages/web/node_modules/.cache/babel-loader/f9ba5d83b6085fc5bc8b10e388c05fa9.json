{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/alert/src/AlertBlock.web.tsx\";\nimport React from \"react\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Message } from \"../../../framework/src/Message\";\n\nvar AlertBlock = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(AlertBlock, _BlockComponent);\n\n  var _super = _createSuper(AlertBlock);\n\n  function AlertBlock(props) {\n    var _this;\n\n    _classCallCheck(this, AlertBlock);\n\n    _this = _super.call(this, props);\n    _this.messagePositiveButton = void 0;\n    _this.messageNegativeButton = void 0;\n    _this.messageNeutralButton = void 0;\n    _this.subScribedMessages = [getName(MessageEnum.AlertMessage), getName(MessageEnum.NavigationPayLoadMessage)];\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    _this.state = {\n      title: \"\",\n      body: \"\",\n      btnPositiveText: \"\",\n      btnNegativeText: \"\",\n      btnNeutralText: \"\"\n    };\n    _this.GetTitleView = _this.GetTitleView.bind(_assertThisInitialized(_this));\n    _this.GetMainView = _this.GetMainView.bind(_assertThisInitialized(_this));\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AlertBlock, [{\n    key: \"render\",\n    value: function render() {\n      return this.state.title || this.state.body || this.state.btnNeutralText || this.state.btnNegativeText || this.state.btnPositiveText ? /*#__PURE__*/React.createElement(this.GetMainView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }) : null;\n    }\n  }, {\n    key: \"onNegativeButtonPress\",\n    value: function onNegativeButtonPress() {\n      if (this.messageNegativeButton) {\n        this.send(this.messageNegativeButton);\n      } else {\n        this.props.navigation.goBack();\n      }\n    }\n  }, {\n    key: \"onPositiveButtonPress\",\n    value: function onPositiveButtonPress() {\n      if (this.messagePositiveButton) {\n        this.send(this.messagePositiveButton);\n      } else {\n        this.props.navigation.goBack();\n      }\n    }\n  }, {\n    key: \"onNeutralButtonPress\",\n    value: function onNeutralButtonPress() {\n      if (this.messageNeutralButton) {\n        this.send(this.messageNeutralButton);\n      } else {\n        this.props.navigation.goBack();\n      }\n    }\n  }, {\n    key: \"GetTitleView\",\n    value: function GetTitleView() {\n      return this.state.title ? /*#__PURE__*/React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, this.state.title) : null;\n    }\n  }, {\n    key: \"GetMainView\",\n    value: function GetMainView() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.modalParentContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(this.GetTitleView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Text, {\n        style: styles.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, this.state.body), this.state.btnPositiveText || this.state.btnNegativeText || this.state.btnNeutralText ? /*#__PURE__*/React.createElement(View, {\n        style: styles.allButtonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 98\n        }\n      }, //Neutral Button\n      this.state.btnNeutralText ? /*#__PURE__*/React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.onNeutralButtonPress();\n        },\n        title: this.state.btnNeutralText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 39\n        }\n      }) : null, //Positive & Negative Button Container\n      this.state.btnNegativeText || this.state.btnPositiveText ? /*#__PURE__*/React.createElement(View, {\n        style: styles.twoButtonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, this.state.btnNegativeText ? /*#__PURE__*/React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.onNegativeButtonPress();\n        },\n        title: this.state.btnNegativeText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }\n      }) : null, this.state.btnPositiveText ? /*#__PURE__*/React.createElement(TouchableOpacity, {\n        style: styles.positiveButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.onPositiveButtonPress();\n        },\n        title: this.state.btnPositiveText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      })) : null) : null) : null);\n    }\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(from, message) {\n        var alertType, title, body, btnPositiveText, btnPositiveMessage, btnNegativeText, btnNegativeMessage, btnNeutralText, btnNeutralMessage;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (getName(MessageEnum.AlertMessage) === message.id) {\n                  this.navigateToAlertPage(message);\n                } else if (getName(MessageEnum.NavigationPayLoadMessage) === message.id) {\n                  alertType = message.getData(getName(MessageEnum.AlertTypeMessage));\n                  title = message.getData(getName(MessageEnum.AlertTitleMessage));\n                  body = message.getData(getName(MessageEnum.AlertBodyMessage));\n                  btnPositiveText = message.getData(getName(MessageEnum.AlertButtonPositiveText));\n                  btnPositiveMessage = message.getData(getName(MessageEnum.AlertButtonPositiveMessage));\n                  btnNegativeText = message.getData(getName(MessageEnum.AlertButtonNegativeText));\n                  btnNegativeMessage = message.getData(getName(MessageEnum.AlertButtonNegativeMessage));\n                  btnNeutralText = message.getData(getName(MessageEnum.AlertButtonNeutralText));\n                  btnNeutralMessage = message.getData(getName(MessageEnum.AlertButtonNeutralMessage));\n                  this.setState({\n                    title: title,\n                    body: body,\n                    btnPositiveText: btnPositiveText,\n                    btnNegativeText: btnNegativeText,\n                    btnNeutralText: btnNeutralText\n                  });\n                  this.messagePositiveButton = btnPositiveMessage;\n                  this.messageNegativeButton = btnNegativeMessage;\n                  this.messageNeutralButton = btnNeutralMessage;\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"navigateToAlertPage\",\n    value: function navigateToAlertPage(message) {\n      var msg = new Message(getName(MessageEnum.NavigationAlertWebMessage));\n      msg.addData(getName(MessageEnum.NavigationPropsMessage), message.getData(getName(MessageEnum.NavigationPropsMessage)));\n      msg.copyAllPropertiesOf(message);\n      this.send(msg);\n    }\n  }]);\n\n  return AlertBlock;\n}(BlockComponent);\n\nexport { AlertBlock as default };\nvar styles = StyleSheet.create({\n  allButtonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  body: {\n    padding: 0,\n    fontSize: 24,\n    marginBottom: 15,\n    marginTop: 7\n  },\n  twoButtonContainer: {\n    flexDirection: \"row\",\n    marginLeft: 40\n  },\n  positiveButton: {\n    marginLeft: 10\n  },\n  modalParentContainer: {\n    padding: 10,\n    flex: 1\n  },\n  title: {\n    padding: 0,\n    fontSize: 30,\n    fontWeight: \"bold\",\n    includeFontPadding: false\n  }\n});","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/alert/src/AlertBlock.web.tsx"],"names":["React","BlockComponent","runEngine","MessageEnum","getName","Message","AlertBlock","props","messagePositiveButton","messageNegativeButton","messageNeutralButton","subScribedMessages","AlertMessage","NavigationPayLoadMessage","attachBuildingBlock","state","title","body","btnPositiveText","btnNegativeText","btnNeutralText","GetTitleView","bind","GetMainView","receive","send","navigation","goBack","styles","modalParentContainer","allButtonContainer","onNeutralButtonPress","twoButtonContainer","onNegativeButtonPress","positiveButton","onPositiveButtonPress","from","message","id","navigateToAlertPage","alertType","getData","AlertTypeMessage","AlertTitleMessage","AlertBodyMessage","AlertButtonPositiveText","btnPositiveMessage","AlertButtonPositiveMessage","AlertButtonNegativeText","btnNegativeMessage","AlertButtonNegativeMessage","AlertButtonNeutralText","btnNeutralMessage","AlertButtonNeutralMessage","setState","msg","NavigationAlertWebMessage","addData","NavigationPropsMessage","copyAllPropertiesOf","StyleSheet","create","flexDirection","justifyContent","padding","fontSize","marginBottom","marginTop","marginLeft","flex","fontWeight","includeFontPadding"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport { IBlock } from \"../../../framework/src/IBlock\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { View, Text, Button, TouchableOpacity, StyleSheet } from \"react-native\";\nimport { Platform, Alert } from \"react-native\";\nimport { Message } from \"../../../framework/src/Message\";\n\ninterface Props {\n  navigation: any;\n}\n\ninterface S {\n\n  title: string;\n  body: string;\n  btnPositiveText: string;\n  btnNegativeText: string;\n  btnNeutralText: string;\n\n}\n\ninterface SS { }\n\nexport default class AlertBlock extends BlockComponent<Props, S, SS> {\n\n  messagePositiveButton: any\n  messageNegativeButton: any\n  messageNeutralButton: any\n\n\n  constructor(props: Props) {\n    super(props);\n\n    this.subScribedMessages = [\n      getName(MessageEnum.AlertMessage),\n      getName(MessageEnum.NavigationPayLoadMessage),\n\n    ]\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n\n    this.state = {\n      title: \"\",\n      body: \"\",\n      btnPositiveText: \"\",\n      btnNegativeText: \"\",\n      btnNeutralText: \"\",\n    }\n\n    this.GetTitleView = this.GetTitleView.bind(this);\n    this.GetMainView = this.GetMainView.bind(this);\n\n    this.receive = this.receive.bind(this);\n  }\n\n\n  render() {\n\n    return (\n\n\n      \n\n        (this.state.title || this.state.body || this.state.btnNeutralText || this.state.btnNegativeText || this.state.btnPositiveText)\n        ?\n        <this.GetMainView></this.GetMainView>\n\n        : null\n\n      \n\n     \n      );\n}\n\n\n\nonNegativeButtonPress() {\n  if (this.messageNegativeButton) {\n\n    this.send(this.messageNegativeButton)\n\n  } else {\n    this.props.navigation.goBack();\n  }\n}\n\nonPositiveButtonPress() {\n  if (this.messagePositiveButton) {\n\n    this.send(this.messagePositiveButton)\n\n  } else {\n    this.props.navigation.goBack();\n  }\n}\nonNeutralButtonPress() {\n  if (this.messageNeutralButton) {\n\n    this.send(this.messageNeutralButton)\n\n  } else {\n    this.props.navigation.goBack();\n  }\n}\n\n\nGetTitleView() {\n\n  return (\n\n    this.state.title ?\n      <Text style={styles.title}>{this.state.title}</Text> : null\n\n  );\n}\n\n\nGetMainView() {\n\n  return (\n\n    <View\n      style={styles.modalParentContainer}\n    >\n\n\n      <this.GetTitleView></this.GetTitleView>\n\n      <Text style={styles.body}>{this.state.body}</Text>\n\n\n      {(this.state.btnPositiveText || this.state.btnNegativeText || this.state.btnNeutralText) ? <View style={styles.allButtonContainer}>\n\n\n\n        {\n          //Neutral Button\n\n          this.state.btnNeutralText ? <Button\n            onPress={() => {\n              this.onNeutralButtonPress()\n            }}\n            title={this.state.btnNeutralText}\n          /> : null\n        }\n\n\n\n        {\n          //Positive & Negative Button Container\n\n\n          (this.state.btnNegativeText || this.state.btnPositiveText) ?\n\n            <View style={styles.twoButtonContainer}>\n\n              {\n                this.state.btnNegativeText ?\n                  <Button\n                    onPress={() => {\n                      this.onNegativeButtonPress()\n                    }}\n                    title={this.state.btnNegativeText}\n                  /> : null\n              }\n              {\n\n                this.state.btnPositiveText ?\n                  <TouchableOpacity\n                    style={styles.positiveButton}\n                  >\n\n                    <Button\n                      onPress={() => {\n                        this.onPositiveButtonPress()\n                      }}\n                      title={this.state.btnPositiveText}\n                    />\n                  </TouchableOpacity> : null\n\n              }\n\n\n            </View>\n\n            : null\n\n\n        }\n\n\n      </View>\n\n        : null}\n\n\n    </View>\n\n\n\n\n  );\n\n}\n\n\nasync receive(from: string, message: Message) {\n\n  if (getName(MessageEnum.AlertMessage) === message.id) {\n    this.navigateToAlertPage(message);\n  } else if (getName(MessageEnum.NavigationPayLoadMessage) === message.id) {\n\n    let alertType = message.getData(getName(MessageEnum.AlertTypeMessage));\n    let title = message.getData(getName(MessageEnum.AlertTitleMessage));\n    let body = message.getData(getName(MessageEnum.AlertBodyMessage));\n\n    let btnPositiveText = message.getData(getName(MessageEnum.AlertButtonPositiveText));\n    let btnPositiveMessage = message.getData(getName(MessageEnum.AlertButtonPositiveMessage));\n\n    let btnNegativeText = message.getData(getName(MessageEnum.AlertButtonNegativeText));\n    let btnNegativeMessage = message.getData(getName(MessageEnum.AlertButtonNegativeMessage));\n\n    let btnNeutralText = message.getData(getName(MessageEnum.AlertButtonNeutralText));\n    let btnNeutralMessage = message.getData(getName(MessageEnum.AlertButtonNeutralMessage));\n\n    this.setState({ title: title, body: body, btnPositiveText: btnPositiveText, btnNegativeText: btnNegativeText, btnNeutralText: btnNeutralText })\n\n    this.messagePositiveButton = btnPositiveMessage;\n    this.messageNegativeButton = btnNegativeMessage;\n    this.messageNeutralButton = btnNeutralMessage;\n\n\n  }\n\n}\n\n\nnavigateToAlertPage(message: Message) {\n\n  const msg: Message = new Message(getName(MessageEnum.NavigationAlertWebMessage));\n  msg.addData(\n    getName(MessageEnum.NavigationPropsMessage),\n    message.getData(getName(MessageEnum.NavigationPropsMessage))\n  )\n\n  msg.copyAllPropertiesOf(message);\n\n  this.send(msg)\n}\n\n\n\n\n}\n\n\n\nconst styles = StyleSheet.create({\n  allButtonContainer: { flexDirection: \"row\", justifyContent: \"space-between\" },\n  body: { padding: 0, fontSize: 24, marginBottom: 15, marginTop: 7 },\n  twoButtonContainer: { flexDirection: \"row\", marginLeft: 40 },\n  positiveButton: { marginLeft: 10 },\n  modalParentContainer: {\n    padding: 10,\n    flex: 1\n  },\n  title: { padding: 0, fontSize: 30, fontWeight: \"bold\", includeFontPadding: false }\n});\n"]},"metadata":{},"sourceType":"module"}