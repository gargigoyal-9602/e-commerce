{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Do not change anything in the protected area. Doing so will be detected and your commit will be rejected.\n// Protected Area Start\nimport { Component } from 'react';\nimport { runEngine } from './RunEngine';\nimport { Message } from './Message';\nimport MessageEnum, { getName } from './Messages/MessageEnum';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport * as helper from './Helpers';\nexport var BlockComponent = /*#__PURE__*/function (_Component) {\n  _inherits(BlockComponent, _Component);\n\n  var _super = _createSuper(BlockComponent);\n\n  function BlockComponent(props) {\n    var _this;\n\n    _classCallCheck(this, BlockComponent);\n\n    _this = _super.call(this, props);\n    _this.isLoaded = false;\n    _this.send = void 0;\n    _this.blockId = void 0;\n    _this.subScribedMessages = void 0;\n\n    var uuidv4 = require(\"uuid/v4\");\n\n    _this.blockId = uuidv4();\n\n    _this.send = function (message) {\n      return runEngine.sendMessage(_this.blockId, message);\n    };\n\n    _this.subScribedMessages = [''];\n    _this.hideKeyboard = _this.hideKeyboard.bind(_assertThisInitialized(_this));\n    return _this;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  _createClass(BlockComponent, [{\n    key: \"receive\",\n    value: function receive(from, message) {}\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isLoaded = true;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function () {\n      var _componentWillUnmount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isLoaded = false;\n                Keyboard.dismiss();\n                runEngine.unSubscribeFromMessages(this, this.subScribedMessages);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillUnmount() {\n        return _componentWillUnmount.apply(this, arguments);\n      }\n\n      return componentWillUnmount;\n    }()\n  }, {\n    key: \"toggleState\",\n    value: function toggleState(objectID) {\n      this.changeState(objectID, !Boolean(this.getState(objectID)));\n    }\n  }, {\n    key: \"changeState\",\n    value: function changeState(objectID, value) {\n      switch (objectID) {\n        default:\n          console.log(\"changeState::Not Confifured for \" + objectID);\n      }\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(objectID) {\n      var testString = '';\n\n      switch (objectID) {\n        case 'testBoolTrue':\n          return true;\n\n        case 'testBoolFalse':\n          return false;\n\n        case 'testString':\n          return testString;\n\n        default:\n          console.log(\"changeState::Not Confifured for \" + objectID);\n          return null;\n      }\n    }\n  }, {\n    key: \"processOnClickMessage\",\n    value: function processOnClickMessage(messageID) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      switch (messageID) {\n        default:\n          console.log(\"processOnClickMessage::Not Configured for \" + messageID);\n      }\n    }\n  }, {\n    key: \"showAlert\",\n    value: function showAlert(title, error, btnPositiveText, btnPositiveMessage, btnNegativeText, btnNegativeMessage, btnNeutralText, btnNeutralMessage) {\n      Keyboard.dismiss();\n\n      if (!btnPositiveText && !btnNegativeText && !btnNeutralText) {\n        btnPositiveText = 'Ok';\n      }\n\n      var alertMsg = new Message(getName(MessageEnum.AlertMessage));\n      alertMsg.addData(getName(MessageEnum.AlertTitleMessage), title);\n      alertMsg.addData(getName(MessageEnum.AlertBodyMessage), error);\n      alertMsg.addData(getName(MessageEnum.NavigationPropsMessage), this.props);\n      alertMsg.addData(getName(MessageEnum.NavigationPropsMessage), this.props);\n      alertMsg.addData(getName(MessageEnum.AlertButtonPositiveText), btnPositiveText);\n      alertMsg.addData(getName(MessageEnum.AlertButtonNegativeText), btnNegativeText);\n      alertMsg.addData(getName(MessageEnum.AlertButtonNeutralText), btnNeutralText);\n      alertMsg.addData(getName(MessageEnum.AlertButtonPositiveMessage), btnPositiveMessage);\n      alertMsg.addData(getName(MessageEnum.AlertButtonNegativeMessage), btnNegativeMessage);\n      alertMsg.addData(getName(MessageEnum.AlertButtonNeutralMessage), btnNeutralMessage);\n      runEngine.sendMessage(alertMsg.id, alertMsg);\n    }\n  }, {\n    key: \"parseApiErrorResponse\",\n    value: function parseApiErrorResponse(responseJson) {\n      if (!responseJson || !responseJson.errors) {\n        return;\n      }\n\n      var errors = responseJson.errors;\n      var allerrors = '';\n      errors.map(function (object) {\n        var newLocal = JSON.stringify(object);\n        JSON.parse(newLocal, function (key, value) {\n          if (value.length > 0) {\n            if (allerrors.length <= 0) {\n              allerrors = value;\n            } else {\n              allerrors = \"\".concat(allerrors, \"{\\n}\").concat(value);\n            }\n          }\n        });\n      });\n      /* this.showAlert('Error', allerrors); */\n\n      return allerrors;\n    }\n  }, {\n    key: \"isPlatformWeb\",\n    value: function isPlatformWeb() {\n      return helper.getOS() === 'web';\n    }\n  }, {\n    key: \"isPlatformiOS\",\n    value: function isPlatformiOS() {\n      return helper.getOS() === 'ios';\n    }\n  }, {\n    key: \"isPlatformAndroid\",\n    value: function isPlatformAndroid() {\n      return helper.getOS() === 'android';\n    }\n  }, {\n    key: \"parseApiCatchErrorResponse\",\n    value: function parseApiCatchErrorResponse(errorReponse) {\n      if (errorReponse) {\n        return JSON.stringify(errorReponse).replace(new RegExp('\"', 'g'), '');\n      }\n    }\n  }, {\n    key: \"hideKeyboard\",\n    value: function hideKeyboard() {\n      if (!this.isPlatformWeb()) {\n        Keyboard.dismiss();\n      }\n    }\n  }]);\n\n  return BlockComponent;\n}(Component); // Protected Area End","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/framework/src/BlockComponent.tsx"],"names":["Component","runEngine","Message","MessageEnum","getName","helper","BlockComponent","props","isLoaded","send","blockId","subScribedMessages","uuidv4","require","message","sendMessage","hideKeyboard","bind","from","Keyboard","dismiss","unSubscribeFromMessages","objectID","changeState","Boolean","getState","value","console","log","testString","messageID","title","error","btnPositiveText","btnPositiveMessage","btnNegativeText","btnNegativeMessage","btnNeutralText","btnNeutralMessage","alertMsg","AlertMessage","addData","AlertTitleMessage","AlertBodyMessage","NavigationPropsMessage","AlertButtonPositiveText","AlertButtonNegativeText","AlertButtonNeutralText","AlertButtonPositiveMessage","AlertButtonNegativeMessage","AlertButtonNeutralMessage","id","responseJson","errors","allerrors","map","object","newLocal","JSON","stringify","parse","key","length","getOS","errorReponse","replace","RegExp","isPlatformWeb"],"mappings":"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","sourcesContent":["// Do not change anything in the protected area. Doing so will be detected and your commit will be rejected.\n\n// Protected Area Start\nimport { Component } from 'react';\nimport { IBlock } from './IBlock';\nimport { runEngine } from './RunEngine';\nimport { Message } from './Message';\nimport MessageEnum, { getName } from './Messages/MessageEnum';\nimport { Keyboard } from 'react-native';\n\nimport * as helper from './Helpers';\nimport { Stream } from 'stream';\n\nexport class BlockComponent<Props, S, SS> extends Component<Props, S, SS>\n  implements IBlock {\n  isLoaded = false;\n\n  send: (message: Message) => void;\n\n  blockId: string;\n\n  subScribedMessages: string[];\n\n  constructor(props: Props) {\n    super(props);\n    const uuidv4 = require(\"uuid/v4\");\n    this.blockId = uuidv4();\n    this.send = message => runEngine.sendMessage(this.blockId, message);\n    this.subScribedMessages = [''];\n    this.hideKeyboard = this.hideKeyboard.bind(this);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  receive(from: string, message: Message): void { }\n\n  async componentDidMount() {\n    this.isLoaded = true;\n  }\n\n  async componentWillUnmount() {\n    this.isLoaded = false;\n    Keyboard.dismiss();\n    runEngine.unSubscribeFromMessages(this, this.subScribedMessages);\n  }\n\n\n  public toggleState(objectID: string) {\n    this.changeState(objectID, !Boolean(this.getState(objectID)));\n  }\n\n  public changeState(objectID: string, value: any) {\n    switch (objectID) {\n      default:\n        console.log(\"changeState::Not Confifured for \" + objectID);\n    }\n  }\n\n  public getState(objectID: string) {\n\n    var testString = '';\n\n    switch (objectID) {\n      case 'testBoolTrue':\n        return true;\n      case 'testBoolFalse':\n        return false;\n      case 'testString':\n        return testString;\n      default:\n        console.log(\"changeState::Not Confifured for \" + objectID);\n        return null\n    }\n  }\n\n  public processOnClickMessage(messageID: string, value: any = null) {\n    switch (messageID) {\n      default:\n        console.log(\"processOnClickMessage::Not Configured for \" + messageID);\n    }\n  }\n\n  public showAlert(\n    title: string,\n    error: string,\n    btnPositiveText?: string,\n    btnPositiveMessage?: Message,\n    btnNegativeText?: string,\n    btnNegativeMessage?: Message,\n    btnNeutralText?: string,\n    btnNeutralMessage?: Message\n  ) {\n    Keyboard.dismiss();\n\n    if (!btnPositiveText && !btnNegativeText && !btnNeutralText) {\n      btnPositiveText = 'Ok';\n    }\n\n    const alertMsg: Message = new Message(getName(MessageEnum.AlertMessage));\n    alertMsg.addData(getName(MessageEnum.AlertTitleMessage), title);\n    alertMsg.addData(getName(MessageEnum.AlertBodyMessage), error);\n    alertMsg.addData(getName(MessageEnum.NavigationPropsMessage), this.props);\n\n    alertMsg.addData(getName(MessageEnum.NavigationPropsMessage), this.props);\n\n    alertMsg.addData(\n      getName(MessageEnum.AlertButtonPositiveText),\n      btnPositiveText\n    );\n    alertMsg.addData(\n      getName(MessageEnum.AlertButtonNegativeText),\n      btnNegativeText\n    );\n    alertMsg.addData(\n      getName(MessageEnum.AlertButtonNeutralText),\n      btnNeutralText\n    );\n\n    alertMsg.addData(\n      getName(MessageEnum.AlertButtonPositiveMessage),\n      btnPositiveMessage\n    );\n    alertMsg.addData(\n      getName(MessageEnum.AlertButtonNegativeMessage),\n      btnNegativeMessage\n    );\n    alertMsg.addData(\n      getName(MessageEnum.AlertButtonNeutralMessage),\n      btnNeutralMessage\n    );\n\n    runEngine.sendMessage(alertMsg.id, alertMsg);\n  }\n\n  public parseApiErrorResponse(responseJson: any) {\n    if (!responseJson || !responseJson.errors) {\n      return;\n    }\n    const errors: any[] = responseJson.errors;\n\n    let allerrors = '';\n    errors.map((object: string) => {\n      const newLocal = JSON.stringify(object);\n      JSON.parse(newLocal, (key, value) => {\n        if (value.length > 0) {\n          if (allerrors.length <= 0) {\n            allerrors = value;\n          } else {\n            allerrors = `${allerrors}{\\n}${value}`;\n          }\n        }\n      });\n    });\n\n    /* this.showAlert('Error', allerrors); */\n    return allerrors;\n  }\n\n  public isPlatformWeb() {\n    return helper.getOS() === 'web';\n  }\n\n  public isPlatformiOS() {\n    return helper.getOS() === 'ios';\n  }\n\n  public isPlatformAndroid() {\n    return helper.getOS() === 'android';\n  }\n\n  public parseApiCatchErrorResponse(errorReponse: any) {\n    if (errorReponse) {\n\n      return JSON.stringify(errorReponse).replace(new RegExp('\"', 'g'), '')\n\n    }\n  }\n\n  public hideKeyboard() {\n    if (!this.isPlatformWeb()) {\n      Keyboard.dismiss();\n    }\n  }\n}\n\n// Protected Area End\n"]},"metadata":{},"sourceType":"module"}