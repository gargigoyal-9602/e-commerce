{"ast":null,"code":"import _toConsumableArray from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // @ts-ignore\n\nimport isEmpty from \"lodash/isEmpty\"; // Customizable Area Start\n// Customizable Area End\n\nexport var configJSON = require(\"./config\");\n\nvar HelpCenterController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(HelpCenterController, _BlockComponent);\n\n  var _super = _createSuper(HelpCenterController);\n\n  // Customizable Area Start\n  // Customizable Area End\n  function HelpCenterController(props) {\n    var _this;\n\n    _classCallCheck(this, HelpCenterController);\n\n    _this = _super.call(this, props);\n    _this.helpCenterallId = \"\";\n    _this.validationApiCallId = \"\";\n    _this.emailReg = void 0;\n    _this.labelTitle = \"\";\n    _this.FAQAPICallId = void 0;\n\n    _this.routeToProfile = function () {\n      var isLoggedIn = _this.state.isLoggedIn;\n\n      _this.props.history.push(isLoggedIn ? '/profilebio' : '/');\n    };\n\n    _this.routeHelpCenter = function (value) {\n      if (value !== undefined) {\n        var path = '/help-center/' + value;\n\n        _this.props.history.push(path);\n      } else {\n        var _path = '/help-center';\n\n        _this.props.history.push(_path);\n      }\n    };\n\n    _this.getFAQsData = function () {\n      _this.setState({\n        loader: loader\n      });\n\n      var headers = {\n        \"Content-Type\": \"application/json\"\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.FAQAPICallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getFAQAPIEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod); // Sending Request to call API.\n\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this)); // Customizable Area Start\n\n    _this.subScribedMessages = [getName(MessageEnum.CountryCodeMessage), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.ReciveUserCredentials)];\n    _this.state = {\n      activeTab: \"1\",\n      activeMobileTab: false,\n      errorData: null,\n      loading: true,\n      helpCenterData: [],\n      tabName: undefined,\n      isLoggedIn: false\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(HelpCenterController, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _nextProps$match, _nextProps$match$para;\n\n      if (nextProps === null || nextProps === void 0 ? void 0 : (_nextProps$match = nextProps.match) === null || _nextProps$match === void 0 ? void 0 : (_nextProps$match$para = _nextProps$match.params) === null || _nextProps$match$para === void 0 ? void 0 : _nextProps$match$para.slug) {\n        var _nextProps$match2, _nextProps$match2$par;\n\n        this.setState({\n          tabName: nextProps === null || nextProps === void 0 ? void 0 : (_nextProps$match2 = nextProps.match) === null || _nextProps$match2 === void 0 ? void 0 : (_nextProps$match2$par = _nextProps$match2.params) === null || _nextProps$match2$par === void 0 ? void 0 : _nextProps$match2$par.slug\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this$props, _this$props$match, _this$props$match$par;\n\n        var user, _this$props2, _this$props2$match, _this$props2$match$pa;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                window.scrollTo(0, 0); // @ts-ignore\n\n                user = JSON.parse(localStorage.getItem(\"user\"));\n\n                if (!isEmpty(user)) {\n                  this.setState({\n                    isLoggedIn: true\n                  });\n                }\n\n                if ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$match = _this$props.match) === null || _this$props$match === void 0 ? void 0 : (_this$props$match$par = _this$props$match.params) === null || _this$props$match$par === void 0 ? void 0 : _this$props$match$par.slug) {\n                  this.setState({\n                    tabName: (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$match = _this$props2.match) === null || _this$props2$match === void 0 ? void 0 : (_this$props2$match$pa = _this$props2$match.params) === null || _this$props2$match$pa === void 0 ? void 0 : _this$props2$match$pa.slug\n                  });\n                }\n\n                this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n                this.getHelpceterData();\n                this.getFAQsData(); // Customizable Area Start\n                // Customizable Area End\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps() {\n      window.scrollTo(0, 0);\n    } // Customizable Area Start\n    // Customizable Area End\n\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var apiRequestCallID, responseJSON, errorMessage, copyHelpcenter, smapleFqa;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Customizable Area Start\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallID = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (this.helpCenterallId === apiRequestCallID) {\n                    this.setState({\n                      helpCenterData: responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.data,\n                      loading: false\n                    });\n                  }\n\n                  if (this.FAQAPICallId === apiRequestCallID) {\n                    console.log(\"nfbgmnbdfg\", this.state.FaqData);\n\n                    if (responseJSON && responseJSON.data && responseJSON.data.faqs && responseJSON.data.faqs.length > 0) {\n                      this.setState({\n                        FaqData: responseJSON\n                      });\n                      copyHelpcenter = _toConsumableArray(this.state.helpCenterData);\n                      smapleFqa = {\n                        id: \"3\",\n                        type: \"help_center\",\n                        attributes: {\n                          \"help_center_type\": \"FAQs\",\n                          \"description\": responseJSON.data.faqs\n                        }\n                      };\n                      copyHelpcenter.push(smapleFqa);\n                      console.log(\"fdghdfg\", copyHelpcenter);\n                      this.setState({\n                        helpCenterData: copyHelpcenter\n                      });\n                    }\n                  }\n                } // Customizable Area End\n\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"getHelpceterData\",\n    value: function getHelpceterData() {\n      // const serviceType = serviceTypes.getHelpCenterData();\n      var token = localStorage.getItem(\"token\");\n      var headers = {\n        token: token,\n        \"Content-Type\": \"application/json\"\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.helpCenterallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getHelpCenterAPIEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n      console.log(\"request\", requestMessage); // Sending Request to call API.\n\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      var activeTab = this.state.activeTab;\n\n      if (activeTab !== tab) {\n        // setActiveTab(tab);\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"routeHelpCenterMb\",\n    value: function routeHelpCenterMb(value) {\n      if (value !== undefined) {\n        var path = '/help-center/' + value;\n        this.props.history.push(path); // setactiveMobileTab(!activeMobileTab);\n\n        this.setState(function (preState) {\n          return {\n            activeMobileTab: !preState.activeMobileTab\n          };\n        });\n      } else {\n        var _path2 = '/help-center';\n        this.props.history.push(_path2);\n        this.setState(function (preState) {\n          return {\n            activeMobileTab: !preState.activeMobileTab\n          };\n        }); // setactiveMobileTab(!activeMobileTab);\n      }\n    }\n  }]);\n\n  return HelpCenterController;\n}(BlockComponent);\n\nexport { HelpCenterController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/profilebio/src/HelpCenterController.web.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","isEmpty","configJSON","require","HelpCenterController","props","helpCenterallId","validationApiCallId","emailReg","labelTitle","FAQAPICallId","routeToProfile","isLoggedIn","state","history","push","routeHelpCenter","value","undefined","path","getFAQsData","setState","loader","headers","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","getFAQAPIEndPoint","RestAPIRequestHeaderMessage","RestAPIRequestMethodMessage","apiGetMethod","sendMessage","id","receive","bind","subScribedMessages","CountryCodeMessage","RestAPIResponceMessage","ReciveUserCredentials","activeTab","activeMobileTab","errorData","loading","helpCenterData","tabName","attachBuildingBlock","nextProps","match","params","slug","window","scrollTo","user","JSON","parse","localStorage","getItem","send","RequestUserCredentials","getHelpceterData","from","message","apiRequestCallID","getData","RestAPIResponceDataMessage","responseJSON","RestAPIResponceSuccessMessage","errorMessage","RestAPIResponceErrorMessage","data","console","log","FaqData","faqs","length","copyHelpcenter","smapleFqa","type","attributes","token","getHelpCenterAPIEndPoint","tab","preState"],"mappings":";;;;;;;;AACA,SAASA,OAAT,QAAwB,gCAAxB;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,OAAOC,WAAP,IACEC,OADF,QAEO,6CAFP;AAIA,SAASC,SAAT,QAA0B,kCAA1B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CACA;AACA;;AAEA,OAAO,IAAMC,UAAU,GAAGC,OAAO,CAAC,UAAD,CAA1B;;IA8BcC,oB;;;;;AAMnB;AAMA;AAEA,gCAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,8BAAMA,KAAN;AADwB,UAP1BC,eAO0B,GAPA,EAOA;AAAA,UAN1BC,mBAM0B,GANI,EAMJ;AAAA,UAL1BC,QAK0B;AAAA,UAJ1BC,UAI0B,GAJL,EAIK;AAAA,UAH1BC,YAG0B;;AAAA,UA0H1BC,cA1H0B,GA0HT,YAAM;AACrB,UAAQC,UAAR,GAAuB,MAAKC,KAA5B,CAAQD,UAAR;;AACA,YAAKP,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwBH,UAAU,GAAG,aAAH,GAAmB,GAArD;AACD,KA7HyB;;AAAA,UA+H1BI,eA/H0B,GA+HR,UAACC,KAAD,EAAgB;AAChC,UAAIA,KAAK,KAAKC,SAAd,EAAyB;AACvB,YAAIC,IAAI,GAAG,kBAAkBF,KAA7B;;AACA,cAAKZ,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwBI,IAAxB;AACD,OAHD,MAGO;AACL,YAAIA,KAAI,GAAG,cAAX;;AACA,cAAKd,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwBI,KAAxB;AACD;AACF,KAvIyB;;AAAA,UA0K1BC,WA1K0B,GA0KZ,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAANA;AADY,OAAd;;AAGA,UAAMC,OAAO,GAAG;AACd,wBAAgB;AADF,OAAhB;AAGA,UAAMC,cAAc,GAAG,IAAI5B,OAAJ,CAAYG,OAAO,CAACD,WAAW,CAAC2B,qBAAb,CAAnB,CAAvB;AACA,YAAKf,YAAL,GAAoBc,cAAc,CAACE,SAAnC;AAEAF,MAAAA,cAAc,CAACG,OAAf,CAAuB5B,OAAO,CAACD,WAAW,CAAC8B,8BAAb,CAA9B,EAA4E1B,UAAU,CAAC2B,iBAAvF;AACAL,MAAAA,cAAc,CAACG,OAAf,CAAuB5B,OAAO,CAACD,WAAW,CAACgC,2BAAb,CAA9B,EAAyEP,OAAzE;AACAC,MAAAA,cAAc,CAACG,OAAf,CAAuB5B,OAAO,CAACD,WAAW,CAACiC,2BAAb,CAA9B,EAAyE7B,UAAU,CAAC8B,YAApF,EAZkB,CAclB;;AACAhC,MAAAA,SAAS,CAACiC,WAAV,CAAsBT,cAAc,CAACU,EAArC,EAAyCV,cAAzC;AACD,KA1LyB;;AAExB,UAAKW,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf,CAFwB,CAIxB;;AACA,UAAKC,kBAAL,GAA0B,CACxBtC,OAAO,CAACD,WAAW,CAACwC,kBAAb,CADiB,EAExBvC,OAAO,CAACD,WAAW,CAACyC,sBAAb,CAFiB,EAGxBxC,OAAO,CAACD,WAAW,CAAC0C,qBAAb,CAHiB,CAA1B;AAMA,UAAK3B,KAAL,GAAa;AACX4B,MAAAA,SAAS,EAAE,GADA;AAEXC,MAAAA,eAAe,EAAE,KAFN;AAGXC,MAAAA,SAAS,EAAE,IAHA;AAIXC,MAAAA,OAAO,EAAE,IAJE;AAKXC,MAAAA,cAAc,EAAE,EALL;AAMXC,MAAAA,OAAO,EAAE5B,SANE;AAOXN,MAAAA,UAAU,EAAE;AAPD,KAAb,CAXwB,CAqBxB;;AAEAZ,IAAAA,SAAS,CAAC+C,mBAAV,gCAA8C,MAAKV,kBAAnD;AAvBwB;AAyBzB;;;;WAED,mCAA0BW,SAA1B,EAA0C;AAAA;;AACxC,UAAIA,SAAJ,aAAIA,SAAJ,2CAAIA,SAAS,CAAEC,KAAf,8EAAI,iBAAkBC,MAAtB,0DAAI,sBAA0BC,IAA9B,EAAoC;AAAA;;AAClC,aAAK9B,QAAL,CAAc;AAAEyB,UAAAA,OAAO,EAAEE,SAAF,aAAEA,SAAF,4CAAEA,SAAS,CAAEC,KAAb,+EAAE,kBAAkBC,MAApB,0DAAE,sBAA0BC;AAArC,SAAd;AACD;AACF;;;;wFAED;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEC,gBAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB,EADF,CAEE;;AACMC,gBAAAA,IAHR,GAGeC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAHf;;AAIE,oBAAI,CAACzD,OAAO,CAACqD,IAAD,CAAZ,EAAoB;AAClB,uBAAKjC,QAAL,CAAc;AAAET,oBAAAA,UAAU,EAAE;AAAd,mBAAd;AACD;;AACD,mCAAI,KAAKP,KAAT,qEAAI,YAAY4C,KAAhB,+EAAI,kBAAmBC,MAAvB,0DAAI,sBAA2BC,IAA/B,EAAqC;AACnC,uBAAK9B,QAAL,CAAc;AAAEyB,oBAAAA,OAAO,kBAAE,KAAKzC,KAAP,uEAAE,aAAY4C,KAAd,gFAAE,mBAAmBC,MAArB,0DAAE,sBAA2BC;AAAtC,mBAAd;AACD;;AACD,qBAAKQ,IAAL,CAAU,IAAI/D,OAAJ,CAAYG,OAAO,CAACD,WAAW,CAAC8D,sBAAb,CAAnB,CAAV;AACA,qBAAKC,gBAAL;AACA,qBAAKzC,WAAL,GAZF,CAYyB;AACvB;;AAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAgBA,4CAAmC;AACjCgC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,K,CAED;AAEA;;;;;8EAEA,kBAAcS,IAAd,EAA4BC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE;AACA,oBAAIA,OAAO,CAAC7B,EAAR,KAAenC,OAAO,CAACD,WAAW,CAACyC,sBAAb,CAA1B,EAAgE;AACxDyB,kBAAAA,gBADwD,GACrCD,OAAO,CAACE,OAAR,CAAgBlE,OAAO,CAACD,WAAW,CAACoE,0BAAb,CAAvB,CADqC;AAExDC,kBAAAA,YAFwD,GAEzCJ,OAAO,CAACE,OAAR,CAAgBlE,OAAO,CAACD,WAAW,CAACsE,6BAAb,CAAvB,CAFyC;AAGxDC,kBAAAA,YAHwD,GAGzCN,OAAO,CAACE,OAAR,CAAgBlE,OAAO,CAACD,WAAW,CAACwE,2BAAb,CAAvB,CAHyC;;AAK9D,sBAAI,KAAKhE,eAAL,KAAyB0D,gBAA7B,EAA+C;AAC7C,yBAAK3C,QAAL,CAAc;AAAEwB,sBAAAA,cAAc,EAAEsB,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEI,IAAhC;AAAsC3B,sBAAAA,OAAO,EAAE;AAA/C,qBAAd;AACD;;AACD,sBAAI,KAAKlC,YAAL,KAAsBsD,gBAA1B,EAA4C;AAC1CQ,oBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAK5D,KAAL,CAAW6D,OAArC;;AACA,wBAAIP,YAAY,IAAIA,YAAY,CAACI,IAA7B,IAAqCJ,YAAY,CAACI,IAAb,CAAkBI,IAAvD,IAA+DR,YAAY,CAACI,IAAb,CAAkBI,IAAlB,CAAuBC,MAAvB,GAAgC,CAAnG,EAAsG;AACpG,2BAAKvD,QAAL,CAAc;AACZqD,wBAAAA,OAAO,EAAEP;AADG,uBAAd;AAGMU,sBAAAA,cAJ8F,sBAIzE,KAAKhE,KAAL,CAAWgC,cAJ8D;AAK9FiC,sBAAAA,SAL8F,GAKlF;AAChB5C,wBAAAA,EAAE,EAAE,GADY;AACP6C,wBAAAA,IAAI,EAAE,aADC;AAEhBC,wBAAAA,UAAU,EAAE;AACV,8CAAoB,MADV;AAEV,yCAAeb,YAAY,CAACI,IAAb,CAAkBI;AAFvB;AAFI,uBALkF;AAYpGE,sBAAAA,cAAc,CAAC9D,IAAf,CAAoB+D,SAApB;AACAN,sBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,cAAvB;AACA,2BAAKxD,QAAL,CAAc;AACZwB,wBAAAA,cAAc,EAAEgC;AADJ,uBAAd;AAGD;AACF;AACF,iBAhCH,CAiCE;;;AAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAoCA,4BAAmB;AACjB;AACA,UAAMI,KAAK,GAAGxB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMnC,OAAO,GAAG;AACd0D,QAAAA,KAAK,EAALA,KADc;AAEd,wBAAgB;AAFF,OAAhB;AAKA,UAAMzD,cAAc,GAAG,IAAI5B,OAAJ,CAAYG,OAAO,CAACD,WAAW,CAAC2B,qBAAb,CAAnB,CAAvB;AACA,WAAKnB,eAAL,GAAuBkB,cAAc,CAACE,SAAtC;AAEAF,MAAAA,cAAc,CAACG,OAAf,CAAuB5B,OAAO,CAACD,WAAW,CAAC8B,8BAAb,CAA9B,EAA4E1B,UAAU,CAACgF,wBAAvF;AACA1D,MAAAA,cAAc,CAACG,OAAf,CAAuB5B,OAAO,CAACD,WAAW,CAACgC,2BAAb,CAA9B,EAAyEP,OAAzE;AACAC,MAAAA,cAAc,CAACG,OAAf,CAAuB5B,OAAO,CAACD,WAAW,CAACiC,2BAAb,CAA9B,EAAyE7B,UAAU,CAAC8B,YAApF;AACAwC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBjD,cAAvB,EAdiB,CAgBjB;;AACAxB,MAAAA,SAAS,CAACiC,WAAV,CAAsBT,cAAc,CAACU,EAArC,EAAyCV,cAAzC;AACD;;;WAED,gBAAO2D,GAAP,EAAiB;AACf,UAAQ1C,SAAR,GAAsB,KAAK5B,KAA3B,CAAQ4B,SAAR;;AACA,UAAIA,SAAS,KAAK0C,GAAlB,EAAuB;AACrB;AACA,aAAK9D,QAAL,CAAc;AAAEoB,UAAAA,SAAS,EAAE0C;AAAb,SAAd;AACD;AACF;;;WAkBD,2BAAkBlE,KAAlB,EAA8B;AAC5B,UAAIA,KAAK,KAAKC,SAAd,EAAyB;AACvB,YAAIC,IAAI,GAAG,kBAAkBF,KAA7B;AACA,aAAKZ,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwBI,IAAxB,EAFuB,CAGvB;;AACA,aAAKE,QAAL,CAAc,UAAA+D,QAAQ;AAAA,iBAAK;AACzB1C,YAAAA,eAAe,EAAE,CAAC0C,QAAQ,CAAC1C;AADF,WAAL;AAAA,SAAtB;AAGD,OAPD,MAOO;AACL,YAAIvB,MAAI,GAAG,cAAX;AACA,aAAKd,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwBI,MAAxB;AACA,aAAKE,QAAL,CAAc,UAAA+D,QAAQ;AAAA,iBAAK;AACzB1C,YAAAA,eAAe,EAAE,CAAC0C,QAAQ,CAAC1C;AADF,WAAL;AAAA,SAAtB,EAHK,CAML;AACD;AACF;;;;EAvK+C7C,c;;SAA7BO,oB","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\n\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n// @ts-ignore\nimport isEmpty from \"lodash/isEmpty\";\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  history: any;\n  match: any;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  activeTab: string;\n  activeMobileTab: boolean;\n  errorData: any;\n  loading: boolean;\n  helpCenterData: any;\n  tabName: any;\n  isLoggedIn: boolean;\n  FaqData?: any;\n  // Customizable Area End\n}\n\ninterface SS {\n  // Customizable Area Start\n  id: any;\n  // Customizable Area End\n}\n\nexport default class HelpCenterController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n\n  // Customizable Area Start\n  helpCenterallId: string = \"\";\n  validationApiCallId: string = \"\";\n  emailReg: RegExp;\n  labelTitle: string = \"\";\n  FAQAPICallId: string;\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.CountryCodeMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.ReciveUserCredentials)\n    ]\n\n    this.state = {\n      activeTab: \"1\",\n      activeMobileTab: false,\n      errorData: null,\n      loading: true,\n      helpCenterData: [],\n      tabName: undefined,\n      isLoggedIn: false,\n    };\n\n    // Customizable Area End\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    if (nextProps?.match?.params?.slug) {\n      this.setState({ tabName: nextProps?.match?.params?.slug })\n    }\n  }\n\n  async componentDidMount() {\n    window.scrollTo(0, 0);\n    // @ts-ignore\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if (!isEmpty(user)) {\n      this.setState({ isLoggedIn: true });\n    }\n    if (this.props?.match?.params?.slug) {\n      this.setState({ tabName: this.props?.match?.params?.slug })\n    }\n    this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n    this.getHelpceterData();\n    this.getFAQsData();    // Customizable Area Start\n    // Customizable Area End\n  }\n\n  UNSAFE_componentWillReceiveProps() {\n    window.scrollTo(0, 0);\n  }\n\n  // Customizable Area Start\n\n  // Customizable Area End\n\n  async receive(from: string, message: Message) {\n\n    // Customizable Area Start\n    if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n      const apiRequestCallID = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n      const responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      const errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n      if (this.helpCenterallId === apiRequestCallID) {\n        this.setState({ helpCenterData: responseJSON?.data, loading: false });\n      }\n      if (this.FAQAPICallId === apiRequestCallID) {\n        console.log(\"nfbgmnbdfg\", this.state.FaqData)\n        if (responseJSON && responseJSON.data && responseJSON.data.faqs && responseJSON.data.faqs.length > 0) {\n          this.setState({\n            FaqData: responseJSON\n          });\n          const copyHelpcenter = [...this.state.helpCenterData];\n          const smapleFqa = {\n            id: \"3\", type: \"help_center\",\n            attributes: {\n              \"help_center_type\": \"FAQs\",\n              \"description\": responseJSON.data.faqs\n            }\n          }\n          copyHelpcenter.push(smapleFqa);\n          console.log(\"fdghdfg\", copyHelpcenter);\n          this.setState({\n            helpCenterData: copyHelpcenter\n          })\n        }\n      }\n    }\n    // Customizable Area End\n  }\n\n  getHelpceterData() {\n    // const serviceType = serviceTypes.getHelpCenterData();\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      token,\n      \"Content-Type\": \"application/json\"\n    }\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.helpCenterallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getHelpCenterAPIEndPoint);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n    console.log(\"request\", requestMessage);\n\n    // Sending Request to call API.\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  toggle(tab: any) {\n    const { activeTab } = this.state;\n    if (activeTab !== tab) {\n      // setActiveTab(tab);\n      this.setState({ activeTab: tab })\n    }\n  };\n\n  // const history = useHistory();\n  routeToProfile = () => {\n    const { isLoggedIn } = this.state;\n    this.props.history.push(isLoggedIn ? '/profilebio' : '/');\n  };\n\n  routeHelpCenter = (value: any) => {\n    if (value !== undefined) {\n      let path = '/help-center/' + value;\n      this.props.history.push(path);\n    } else {\n      let path = '/help-center';\n      this.props.history.push(path);\n    }\n  };\n\n  routeHelpCenterMb(value: any) {\n    if (value !== undefined) {\n      let path = '/help-center/' + value;\n      this.props.history.push(path);\n      // setactiveMobileTab(!activeMobileTab);\n      this.setState(preState => ({\n        activeMobileTab: !preState.activeMobileTab\n      }))\n    } else {\n      let path = '/help-center';\n      this.props.history.push(path);\n      this.setState(preState => ({\n        activeMobileTab: !preState.activeMobileTab\n      }))\n      // setactiveMobileTab(!activeMobileTab);\n    }\n  };\n\n  // if (tabName !== undefined && helpCenterData !== undefined) {\n  //   let matchTabName = '';\n  //   helpCenterData.map((data, index) => {\n  //     if (tabName === data.title) {\n  //       matchTabName = index + 1;\n  //     }\n  //   });\n  //   toggle(matchTabName);\n  // }\n\n  // if (tabName === undefined && helpCenterData !== undefined) {\n  //   toggle(1);\n  // }\n\n  //get FAQ's\n  getFAQsData = () => {\n    this.setState({\n      loader\n    })\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.FAQAPICallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getFAQAPIEndPoint);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n\n    // Sending Request to call API.\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}