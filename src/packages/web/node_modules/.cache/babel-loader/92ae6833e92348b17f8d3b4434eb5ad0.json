{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/info-page/src/InfoPageBlock.tsx\";\nimport React from \"react\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar InfoPageBlock = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(InfoPageBlock, _BlockComponent);\n\n  var _super = _createSuper(InfoPageBlock);\n\n  function InfoPageBlock(props) {\n    var _this;\n\n    _classCallCheck(this, InfoPageBlock);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      message: \"An error has occured.\",\n      buttonText: \"Ok\",\n      buttonMessage: new Message(\"\"),\n      title: \"ERROR\"\n    };\n    _this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.NavigationPayLoadMessage)];\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this));\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(InfoPageBlock, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, this.isPlatformWeb() ? /*#__PURE__*/React.createElement(Text, {\n        style: styles.labelTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, \"Information\") : null, /*#__PURE__*/React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginTop: 40,\n          marginBottom: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, this.state.message), /*#__PURE__*/React.createElement(View, {\n        style: this.isPlatformWeb() ? styles.btnStyleWebContainer : styles.btnStyleMobileContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.send(_this2.state.buttonMessage);\n        },\n        style: this.isPlatformWeb() ? styles.btnStyleWeb : styles.btnStyleMobile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.send(_this2.state.buttonMessage);\n        },\n        title: this.state.buttonText,\n        color: \"#6200EE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(from, message) {\n        var title, content, buttonText, buttonMessage;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (getName(MessageEnum.NavigationPayLoadMessage) === message.id) {\n                  title = message.getData(getName(MessageEnum.InfoPageTitleMessage));\n                  content = message.getData(getName(MessageEnum.InfoPageBodyMessage));\n                  buttonText = message.getData(getName(MessageEnum.InfoPageButtonTextMessage));\n                  buttonMessage = message.getData(getName(MessageEnum.InfoPageNavigationScreenMessage));\n                  this.setState({\n                    message: content,\n                    title: title,\n                    buttonMessage: buttonMessage,\n                    buttonText: buttonText\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }]);\n\n  return InfoPageBlock;\n}(BlockComponent);\n\nexport { InfoPageBlock as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: Platform.OS === \"web\" ? \"75%\" : \"100%\",\n    maxWidth: 650,\n    padding: 16,\n    backgroundColor: \"#fff\"\n  },\n  labelTitle: {\n    marginTop: 24,\n    marginBottom: 32,\n    fontSize: 32,\n    textAlign: \"left\",\n    marginVertical: 8,\n    color: \"#6200EE\"\n  },\n  btnStyleWebContainer: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"row\"\n  },\n  btnStyleMobileContainer: {},\n  btnStyleWeb: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    backgroundColor: \"#6200EE\"\n  },\n  btnStyleMobile: {}\n});","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/info-page/src/InfoPageBlock.tsx"],"names":["React","Message","BlockComponent","runEngine","MessageEnum","getName","InfoPageBlock","props","state","message","buttonText","buttonMessage","title","subScribedMessages","RestAPIResponceMessage","NavigationPayLoadMessage","receive","bind","attachBuildingBlock","styles","container","isPlatformWeb","labelTitle","fontSize","marginTop","marginBottom","btnStyleWebContainer","btnStyleMobileContainer","send","btnStyleWeb","btnStyleMobile","from","id","getData","InfoPageTitleMessage","content","InfoPageBodyMessage","InfoPageButtonTextMessage","InfoPageNavigationScreenMessage","setState","StyleSheet","create","flex","marginLeft","marginRight","width","Platform","OS","maxWidth","padding","backgroundColor","textAlign","marginVertical","color","justifyContent","flexDirection","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Button,\n  ScrollView,\n  Platform,\n  TouchableOpacity\n} from \"react-native\";\n\ninterface Props {\n  navigation: any;\n  id: string;\n}\n\ninterface S {\n  message: string;\n  title: string;\n  buttonText: string;\n  buttonMessage: Message;\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class InfoPageBlock extends BlockComponent<Props, S, SS> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      message: \"An error has occured.\",\n      buttonText: \"Ok\",\n      buttonMessage: new Message(\"\"),\n      title: \"ERROR\"\n    };\n\n    this.subScribedMessages = [\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.NavigationPayLoadMessage)\n    ];\n\n    this.receive = this.receive.bind(this);\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n\n  render() {\n \n    return (\n      <ScrollView style={styles.container}>\n        <View>\n          {this.isPlatformWeb() ? (\n            <Text style={styles.labelTitle}>Information</Text>\n          ) : null}\n\n          <Text\n            style={{\n              fontSize: 20,\n              marginTop: 40,\n              marginBottom: 40\n            }}\n          >\n            {this.state.message}\n          </Text>\n\n          <View\n            style={\n              this.isPlatformWeb()\n                ? styles.btnStyleWebContainer\n                : styles.btnStyleMobileContainer\n            }\n          >\n            <TouchableOpacity\n              onPress={() => this.send(this.state.buttonMessage)}\n              style={\n                this.isPlatformWeb()\n                  ? styles.btnStyleWeb\n                  : styles.btnStyleMobile\n              }\n            >\n              <Button\n                onPress={() => this.send(this.state.buttonMessage)}\n                title={this.state.buttonText}\n                color=\"#6200EE\"\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n\n  async receive(from: String, message: Message) {\n    if (getName(MessageEnum.NavigationPayLoadMessage) === message.id) {\n      const title = message.getData(getName(MessageEnum.InfoPageTitleMessage));\n      var content = message.getData(getName(MessageEnum.InfoPageBodyMessage));\n\n      var buttonText = message.getData(\n        getName(MessageEnum.InfoPageButtonTextMessage)\n      );\n\n      var buttonMessage = message.getData(\n        getName(MessageEnum.InfoPageNavigationScreenMessage)\n      );\n\n      this.setState({\n        message: content,\n        title: title,\n        buttonMessage: buttonMessage,\n        buttonText: buttonText\n      });\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: Platform.OS === \"web\" ? \"75%\" : \"100%\",\n    maxWidth: 650,\n    padding: 16,\n    backgroundColor: \"#fff\"\n  },\n  labelTitle: {\n    marginTop: 24,\n    marginBottom: 32,\n    fontSize: 32,\n    textAlign: \"left\",\n    marginVertical: 8,\n    color: \"#6200EE\"\n  },\n\n  btnStyleWebContainer: { justifyContent: \"flex-end\", flexDirection: \"row\" },\n  btnStyleMobileContainer: {},\n\n  btnStyleWeb: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    backgroundColor: \"#6200EE\"\n  },\n  btnStyleMobile: {}\n});\n"]},"metadata":{},"sourceType":"module"}