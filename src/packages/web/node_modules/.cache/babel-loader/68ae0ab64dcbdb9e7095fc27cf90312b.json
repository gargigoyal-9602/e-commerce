{"ast":null,"code":"import _objectSpread from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport var configJSON = require(\"./config\");\n\nvar WishListController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(WishListController, _BlockComponent);\n\n  var _super = _createSuper(WishListController);\n\n  // Customizable Area Start\n  // Customizable Area End\n  function WishListController(props) {\n    var _this;\n\n    _classCallCheck(this, WishListController);\n\n    _this = _super.call(this, props);\n    _this.deleteItemAPICallId = void 0;\n    _this.addToWishListAPICallId = void 0;\n    _this.apiEmailLoginCallId = \"\";\n    _this.validationApiCallId = \"\";\n    _this.GetIsCartCreatedApiCallId = \"\";\n    _this.postCreateCartApiCallId = \"\";\n    _this.emailReg = void 0;\n    _this.labelTitle = \"\";\n    _this.putItemToCartApiCallId = \"\";\n\n    _this.addToCart = function (product) {\n      console.log(product, \"product\"); //this.postCreateCart(product)\n\n      setTimeout(function () {\n        _this.setState({\n          productToBeAdded: product\n        });\n\n        console.log(_this.state.cartId, \"cartid\");\n        _this.state.cartId != \"\" ? _this.putItemToCart(_this.state.cartId) : _this.postCreateCart(product);\n      }, 500);\n    };\n\n    _this.getIsCartCreated = function () {\n      var headers = {\n        \"Content-Type\": configJSON.dashboarContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.GetIsCartCreatedApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.endPointApiGetIsCartCreated);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.dashboarApiMethodType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    _this.postCreateCart = function (product) {\n      // const product = this.state.productToBeAdded\n      var header = {\n        \"Content-Type\": configJSON.dashboarContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      var httpBody = {\n        \"catalogue_id\": product.catalogue_id,\n        \"catalogue_variant_id\": product.id,\n        \"quantity\": 1\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.postCreateCartApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.endPointApiPostCreateCart);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.exampleAPiMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    _this.putItemToCart = function (cartId) {\n      var _this$state$productTo, _product$attributes, _product$attributes$c, _product$attributes2, _product$attributes2$;\n\n      _this.setState({\n        loading: true,\n        getAddedProductID: (_this$state$productTo = _this.state.productToBeAdded) === null || _this$state$productTo === void 0 ? void 0 : _this$state$productTo.catalogue_id\n      });\n\n      var product = _this.state.productToBeAdded;\n      var catlogue_variant = (product === null || product === void 0 ? void 0 : (_product$attributes = product.attributes) === null || _product$attributes === void 0 ? void 0 : (_product$attributes$c = _product$attributes.catalogue_variants) === null || _product$attributes$c === void 0 ? void 0 : _product$attributes$c.length) > 0 ? product === null || product === void 0 ? void 0 : (_product$attributes2 = product.attributes) === null || _product$attributes2 === void 0 ? void 0 : (_product$attributes2$ = _product$attributes2.catalogue_variants) === null || _product$attributes2$ === void 0 ? void 0 : _product$attributes2$.length : '';\n      var header = {\n        \"Content-Type\": configJSON.dashboarContentType,\n        token: localStorage.getItem(\"token\")\n      };\n      var httpBody = {\n        \"catalogue_id\": product.catalogue_id,\n        \"catalogue_variant_id\": product.id,\n        // \"catalogue_id\": product.id,\n        // \"catalogue_variant_id\": product?.attributes?.catalogue_variants[catlogue_variant - 1]?.id,\n        \"quantity\": 1\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.putItemToCartApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.endPointApiPutItemsToCart + \"\".concat(cartId, \"/add_item\"));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.putAPiMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this));\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_this));\n    _this.onHandleConfirm = _this.onHandleConfirm.bind(_assertThisInitialized(_this)); // Customizable Area Start\n\n    _this.subScribedMessages = [getName(MessageEnum.CountryCodeMessage), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.ReciveUserCredentials)];\n    _this.state = {\n      showModal: false,\n      removeProduct: [],\n      productToBeAdded: \"\",\n      cartId: \"\"\n    };\n    _this.emailReg = new RegExp(\"\");\n    _this.labelTitle = configJSON.labelTitle; // Customizable Area End\n\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(WishListController, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // this.callGetValidationApi();\n                this.send(new Message(getName(MessageEnum.RequestUserCredentials))); // Customizable Area Start\n\n                this.getIsCartCreated(); // Customizable Area End\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var apiRequestCallId, responseJson, errorMesssage, wishlist_length, _responseJson$data, _responseJson$data$, cart_length, _cart_length, wishlist_len;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorMesssage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (apiRequestCallId === this.deleteItemAPICallId) {\n                    if (responseJson && responseJson.data) {\n                      console.log(\"responseJson && responseJson.data\", responseJson, \"&&\", responseJson.data);\n                      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                        loading: false\n                      })); // @ts-ignore\n\n                      wishlist_length = parseInt(localStorage.getItem(\"wishlist_len\")); // @ts-ignore\n\n                      localStorage.setItem(\"wishlist_len\", wishlist_length - 1); // @ts-ignore\n\n                      window.notify([{\n                        message: responseJson.message || \"The item has been removed from the wishlist\",\n                        type: \"success\"\n                      }]);\n                      this.props.getWishList();\n                    }\n                  } // Add Wish list\n\n\n                  if (apiRequestCallId === this.addToWishListAPICallId) {\n                    if (responseJson) {\n                      // @ts-ignore\n                      window.notify([{\n                        message: responseJson.message || \"The item has been added to the wishlist\",\n                        type: \"success\"\n                      }]);\n                    }\n                  } //is cart created || checking\n\n\n                  if (apiRequestCallId === this.GetIsCartCreatedApiCallId) {\n                    console.log(responseJson, \"is cart created\");\n                    {\n                      (responseJson === null || responseJson === void 0 ? void 0 : responseJson.data) && (responseJson === null || responseJson === void 0 ? void 0 : (_responseJson$data = responseJson.data) === null || _responseJson$data === void 0 ? void 0 : _responseJson$data.length) > 0 && (this.setState({\n                        cartId: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson$data$ = responseJson.data[0]) === null || _responseJson$data$ === void 0 ? void 0 : _responseJson$data$.id\n                      }), localStorage.setItem(\"cart_length\", responseJson.data[0].attributes.order_items.length));\n                    } // if cart not created then creating cart\n\n                    if (apiRequestCallId === this.postCreateCartApiCallId) {\n                      console.log(responseJson, \" cart created\");\n\n                      if (responseJson.data) {\n                        //@ts-ignore\n                        window.notify([{\n                          message: \"Item added in cart successfully\",\n                          type: \"success\"\n                        }]);\n                        this.getIsCartCreated(); // @ts-ignore\n\n                        cart_length = parseInt(localStorage.getItem(\"cart_length\")); // @ts-ignore\n\n                        localStorage.setItem(\"cart_length\", cart_length + 1);\n                      }\n                    }\n                  } // add items to the cart\n\n\n                  if (apiRequestCallId === this.putItemToCartApiCallId) {\n                    // console.log(responseJson, \"add items to the cart\");\n                    // // @ts-ignore\n                    // window.notify([{ message: \"Item added in cart successfully\", type: \"success\" }]);\n                    // // window.location.pathname ===\"/home-page\" ?  \"\": this.state.catalogue_id && this.getProductDetails()\n                    // // @ts-ignore\n                    // const cart_length = parseInt(localStorage.getItem(\"cart_length\"))\n                    // // @ts-ignore\n                    // localStorage.setItem(\"cart_length\", cart_length + 1)\n                    if (responseJson && responseJson.data) {\n                      console.log(responseJson, \"add items to the cart\");\n                      this.setState({\n                        loading: false,\n                        isItemAddedToCart: true\n                      });\n                      this.removeProductFromWishList(); // @ts-ignore\n\n                      window.notify([{\n                        message: \"Item added in cart successfully\",\n                        type: \"success\"\n                      }]); // this.props?.history?.push('/cart');\n                      // window.location.pathname ===\"/home-page\" ?  \"\": this.state.catalogue_id && this.getProductDetails()\n                      // @ts-ignore\n\n                      _cart_length = parseInt(localStorage.getItem(\"cart_length\")); // @ts-ignore\n\n                      wishlist_len = parseInt(localStorage.getItem('wishlist_len')); // @ts-ignore\n\n                      localStorage.setItem(\"cart_length\", _cart_length + 1); // @ts-ignore\n\n                      localStorage.setItem('wishlist_len', wishlist_len - 1);\n                    }\n\n                    if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n                      this.setState({\n                        loading: false,\n                        isItemAddedToCart: false\n                      }); // @ts-ignore\n\n                      window.notify([{\n                        message: responseJson.errors[0].order || \"Something Went Wrong !\",\n                        type: \"error\"\n                      }]);\n                    }\n                  }\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"addToWishlist\",\n    value: function addToWishlist(product) {\n      var token = localStorage.getItem(\"token\");\n      var headers = {\n        'Content-Type': 'application/json',\n        \"token\": token\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.addToWishListAPICallId = requestMessage.id;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceSuccessMessage), configJSON.addToWishListAPIEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPostMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage); // // bx_block_wishlist/wishlists\n      // axios.post(`https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/bx_block_wishlist/wishlists`)\n      //   .then(res => {\n      //     debugger\n      //   })\n      //   .catch(error => {\n      //     debugger\n      //   })\n    }\n  }, {\n    key: \"removeFromWishlist\",\n    value: function removeFromWishlist(product) {\n      this.setState({\n        removeProduct: product,\n        showModal: true\n      });\n    }\n  }, {\n    key: \"removeProductFromWishList\",\n    value: function removeProductFromWishList() {\n      var _removeProduct$data, _removeProduct$data$a, _removeProduct$data$a2, _removeProduct$data$a3;\n\n      var removeProduct = this.state.removeProduct;\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        loading: true\n      }));\n      var productID = this.state.isItemAddedToCart ? this.state.getAddedProductID : removeProduct === null || removeProduct === void 0 ? void 0 : (_removeProduct$data = removeProduct.data) === null || _removeProduct$data === void 0 ? void 0 : (_removeProduct$data$a = _removeProduct$data.attributes) === null || _removeProduct$data$a === void 0 ? void 0 : (_removeProduct$data$a2 = _removeProduct$data$a.id) === null || _removeProduct$data$a2 === void 0 ? void 0 : (_removeProduct$data$a3 = _removeProduct$data$a2.data) === null || _removeProduct$data$a3 === void 0 ? void 0 : _removeProduct$data$a3.id;\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.deleteItemAPICallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.deleteItemAPiEndPoint + '/' + productID);\n      var token = localStorage.getItem(\"token\");\n      var headers = {\n        'Content-Type': 'application/json',\n        \"token\": token\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiDeleteMethod); // requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage),'');\n\n      console.log(\"request\", requestMessage);\n      runEngine.sendMessage(requestMessage.id, requestMessage); // if (productID) {\n      //   const token = localStorage.getItem(\"token\");\n      //   const headers = {\n      //     headers: {\n      //       token\n      //     }\n      //   }\n      //   axios.delete(`https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/bx_block_wishlist/wishlists/remove_catalogue/${productID}`, headers)\n      //     .then(res => {\n      //       // @ts-ignore\n      //       window.notify([{ message: res.data.message ||  \"The item has been removed from the wishlist\", type: \"success\" }]);\n      //       this.props.getWishList();\n      //     })\n      //     .catch(error => {\n      //       debugger\n      //       // @ts-ignore\n      //       window.notify([{ message: error.message || \"Something went wrong!!!\", type: \"danger\" }]);\n      //       console.error(error);\n      //     })\n      // } else {\n      //   // @ts-ignore\n      //   window.notify([{ message: \"Something went wrong!!!\", type: \"danger\" }]);\n      // }\n    }\n  }, {\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState(function (prevState) {\n        return {\n          showModal: !prevState.showModal\n        };\n      }); // @ts-ignore\n\n      window.notify([{\n        message: \"Notification\",\n        type: \"success\"\n      }]);\n    }\n  }, {\n    key: \"onHandleConfirm\",\n    value: function onHandleConfirm() {\n      this.removeProductFromWishList();\n      this.setState({\n        showModal: false\n      });\n    } //is cart created || checking\n\n  }]);\n\n  return WishListController;\n}(BlockComponent);\n\nexport { WishListController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/profilebio/src/WishListController.web.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","configJSON","require","WishListController","props","deleteItemAPICallId","addToWishListAPICallId","apiEmailLoginCallId","validationApiCallId","GetIsCartCreatedApiCallId","postCreateCartApiCallId","emailReg","labelTitle","putItemToCartApiCallId","addToCart","product","console","log","setTimeout","setState","productToBeAdded","state","cartId","putItemToCart","postCreateCart","getIsCartCreated","headers","dashboarContentType","token","localStorage","getItem","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","endPointApiGetIsCartCreated","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","dashboarApiMethodType","sendMessage","id","header","httpBody","catalogue_id","endPointApiPostCreateCart","RestAPIRequestBodyMessage","exampleAPiMethod","loading","getAddedProductID","catlogue_variant","attributes","catalogue_variants","length","endPointApiPutItemsToCart","putAPiMethod","receive","bind","toggleModal","onHandleConfirm","subScribedMessages","CountryCodeMessage","RestAPIResponceMessage","ReciveUserCredentials","showModal","removeProduct","RegExp","attachBuildingBlock","send","RequestUserCredentials","from","message","apiRequestCallId","getData","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","errorMesssage","RestAPIResponceErrorMessage","data","wishlist_length","parseInt","setItem","window","notify","type","getWishList","order_items","cart_length","isItemAddedToCart","removeProductFromWishList","wishlist_len","errors","order","addToWishListAPIEndPoint","apiPostMethod","productID","deleteItemAPiEndPoint","apiDeleteMethod","prevState"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport axios from \"axios\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  history: any;\n  productList: any;\n  getWishList: any;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  showModal: boolean;\n  removeProduct: any;\n\n  loading?: boolean;\n  cartId: any;\n  productToBeAdded: any;\n\n  isItemAddedToCart?: boolean;\n  getAddedProductID?: any;\n  // Customizable Area End\n}\n\ninterface SS {\n  // Customizable Area Start\n  id: any;\n  // Customizable Area End\n}\n\nexport default class WishListController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  deleteItemAPICallId: string;\n  addToWishListAPICallId: string;\n  // Customizable Area Start\n  apiEmailLoginCallId: string = \"\";\n  validationApiCallId: string = \"\";\n  GetIsCartCreatedApiCallId: string = \"\";\n  postCreateCartApiCallId: string = \"\";\n  emailReg: RegExp;\n  labelTitle: string = \"\";\n  putItemToCartApiCallId: string = \"\";\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.onHandleConfirm = this.onHandleConfirm.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.CountryCodeMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.ReciveUserCredentials)\n    ]\n\n    this.state = {\n      showModal: false,\n      removeProduct: [],\n      productToBeAdded: \"\",\n      cartId: \"\"\n    };\n\n    this.emailReg = new RegExp(\"\");\n    this.labelTitle = configJSON.labelTitle;\n    // Customizable Area End\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n\n  }\n\n  async componentDidMount() {\n    // this.callGetValidationApi();\n    this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n    // Customizable Area Start\n    this.getIsCartCreated();\n    // Customizable Area End\n  }\n\n  async receive(from: string, message: Message) {\n    if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n      const apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n      const responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      const errorMesssage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n      if (apiRequestCallId === this.deleteItemAPICallId) {\n        if (responseJson && responseJson.data) {\n          console.log(\"responseJson && responseJson.data\", responseJson, \"&&\", responseJson.data);\n          this.setState({\n            ...this.state,\n            loading: false,\n          });\n          // @ts-ignore\n          const wishlist_length = parseInt(localStorage.getItem(\"wishlist_len\"))\n          // @ts-ignore\n          localStorage.setItem(\"wishlist_len\", wishlist_length - 1)\n\n          // @ts-ignore\n          window.notify([{ message: responseJson.message || \"The item has been removed from the wishlist\", type: \"success\" }]);\n          this.props.getWishList();\n        }\n      }\n      // Add Wish list\n      if (apiRequestCallId === this.addToWishListAPICallId) {\n        if (responseJson) {\n          // @ts-ignore\n          window.notify([{ message: responseJson.message || \"The item has been added to the wishlist\", type: \"success\" }]);\n        }\n      }\n\n      //is cart created || checking\n      if (apiRequestCallId === this.GetIsCartCreatedApiCallId) {\n        console.log(responseJson, \"is cart created\")\n        {\n          responseJson?.data && responseJson?.data?.length > 0 && (\n            this.setState({\n              cartId: responseJson?.data[0]?.id\n            }),\n            localStorage.setItem(\"cart_length\", responseJson.data[0].attributes.order_items.length)\n          )\n        }\n        // if cart not created then creating cart\n        if (apiRequestCallId === this.postCreateCartApiCallId) {\n          console.log(responseJson, \" cart created\")\n          if (responseJson.data) {\n            //@ts-ignore\n            window.notify([{ message: \"Item added in cart successfully\", type: \"success\" }]);\n            this.getIsCartCreated();\n            // @ts-ignore\n            const cart_length = parseInt(localStorage.getItem(\"cart_length\"))\n            // @ts-ignore\n            localStorage.setItem(\"cart_length\", cart_length + 1)\n\n          }\n        }\n      }\n      // add items to the cart\n      if (apiRequestCallId === this.putItemToCartApiCallId) {\n        // console.log(responseJson, \"add items to the cart\");\n        // // @ts-ignore\n        // window.notify([{ message: \"Item added in cart successfully\", type: \"success\" }]);\n        // // window.location.pathname ===\"/home-page\" ?  \"\": this.state.catalogue_id && this.getProductDetails()\n        // // @ts-ignore\n        // const cart_length = parseInt(localStorage.getItem(\"cart_length\"))\n        // // @ts-ignore\n        // localStorage.setItem(\"cart_length\", cart_length + 1)\n        if (responseJson && responseJson.data) {\n          console.log(responseJson, \"add items to the cart\");\n          this.setState({\n            loading: false,\n            isItemAddedToCart: true\n          });\n          this.removeProductFromWishList();\n          // @ts-ignore\n          window.notify([{ message: \"Item added in cart successfully\", type: \"success\" }]);\n          // this.props?.history?.push('/cart');\n          // window.location.pathname ===\"/home-page\" ?  \"\": this.state.catalogue_id && this.getProductDetails()\n          // @ts-ignore\n          const cart_length = parseInt(localStorage.getItem(\"cart_length\"));\n          // @ts-ignore\n          const wishlist_len = parseInt(localStorage.getItem('wishlist_len'));\n          // @ts-ignore\n          localStorage.setItem(\"cart_length\", cart_length + 1);\n          // @ts-ignore\n          localStorage.setItem('wishlist_len', wishlist_len - 1);\n        }\n        if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n          this.setState({\n            loading: false,\n            isItemAddedToCart: false\n          })\n          // @ts-ignore\n          window.notify([{ message: responseJson.errors[0].order || \"Something Went Wrong !\", type: \"error\" }]);\n        }\n      }\n    }\n  }\n\n  addToWishlist(product: any) {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      'Content-Type': 'application/json',\n      \"token\": token\n    };\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.addToWishListAPICallId = requestMessage.id;\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceSuccessMessage), configJSON.addToWishListAPIEndPoint);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPostMethod)\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    // // bx_block_wishlist/wishlists\n    // axios.post(`https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/bx_block_wishlist/wishlists`)\n    //   .then(res => {\n    //     debugger\n    //   })\n    //   .catch(error => {\n    //     debugger\n    //   })\n  }\n\n  removeFromWishlist(product: any) {\n    this.setState({ removeProduct: product, showModal: true });\n  }\n\n  removeProductFromWishList() {\n    const { removeProduct } = this.state;\n    this.setState({\n      ...this.state,\n      loading: true,\n    })\n    const productID = this.state.isItemAddedToCart ? this.state.getAddedProductID : removeProduct?.data?.attributes?.id?.data?.id;\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n\n    this.deleteItemAPICallId = requestMessage.messageId;\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.deleteItemAPiEndPoint + '/' + productID);\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      'Content-Type': 'application/json',\n      \"token\": token\n    };\n\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiDeleteMethod);\n    // requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage),'');\n    console.log(\"request\", requestMessage);\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n\n\n    // if (productID) {\n    //   const token = localStorage.getItem(\"token\");\n    //   const headers = {\n    //     headers: {\n    //       token\n    //     }\n    //   }\n    //   axios.delete(`https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/bx_block_wishlist/wishlists/remove_catalogue/${productID}`, headers)\n    //     .then(res => {\n    //       // @ts-ignore\n    //       window.notify([{ message: res.data.message ||  \"The item has been removed from the wishlist\", type: \"success\" }]);\n    //       this.props.getWishList();\n    //     })\n    //     .catch(error => {\n    //       debugger\n    //       // @ts-ignore\n    //       window.notify([{ message: error.message || \"Something went wrong!!!\", type: \"danger\" }]);\n    //       console.error(error);\n    //     })\n    // } else {\n    //   // @ts-ignore\n    //   window.notify([{ message: \"Something went wrong!!!\", type: \"danger\" }]);\n    // }\n  };\n\n  //  cart function \n  addToCart = (product: any) => {\n    console.log(product, \"product\")\n    //this.postCreateCart(product)\n    setTimeout(() => {\n      this.setState({\n        productToBeAdded: product\n      })\n      console.log(this.state.cartId, \"cartid\");\n      this.state.cartId != \"\" ? this.putItemToCart(this.state.cartId) : this.postCreateCart(product)\n    }, 500);\n  }\n\n  toggleModal() {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal\n    }))\n    // @ts-ignore\n    window.notify([{ message: \"Notification\", type: \"success\" }]);\n  }\n\n  onHandleConfirm() {\n    this.removeProductFromWishList();\n    this.setState({ showModal: false });\n  }\n\n  //is cart created || checking\n  getIsCartCreated = (): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.dashboarContentType,\n      token: localStorage.getItem(\"token\"),\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.GetIsCartCreatedApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.endPointApiGetIsCartCreated\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.dashboarApiMethodType\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  /// create cart \n  postCreateCart = (product: any): boolean => {\n    // const product = this.state.productToBeAdded\n\n    const header = {\n      \"Content-Type\": configJSON.dashboarContentType,\n      token: localStorage.getItem(\"token\"),\n\n    };\n\n    const httpBody = {\n      \"catalogue_id\": product.catalogue_id,\n      \"catalogue_variant_id\": product.id,\n      \"quantity\": 1\n\n    };\n\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.postCreateCartApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.endPointApiPostCreateCart\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      JSON.stringify(httpBody)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.exampleAPiMethod\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  /// add items into the cart\n  putItemToCart = (cartId: any): boolean => {\n    this.setState({\n      loading: true,\n      getAddedProductID: this.state.productToBeAdded?.catalogue_id\n    });\n    const product = this.state.productToBeAdded;\n    const catlogue_variant = product?.attributes?.catalogue_variants?.length > 0 ? product?.attributes?.catalogue_variants?.length : '';\n\n    const header = {\n      \"Content-Type\": configJSON.dashboarContentType,\n      token: localStorage.getItem(\"token\"),\n\n    };\n    const httpBody = {\n      \"catalogue_id\": product.catalogue_id,\n      \"catalogue_variant_id\": product.id,\n      // \"catalogue_id\": product.id,\n      // \"catalogue_variant_id\": product?.attributes?.catalogue_variants[catlogue_variant - 1]?.id,\n      \"quantity\": 1\n    };\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.putItemToCartApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.endPointApiPutItemsToCart + `${cartId}/add_item`);\n\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.putAPiMethod);\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}