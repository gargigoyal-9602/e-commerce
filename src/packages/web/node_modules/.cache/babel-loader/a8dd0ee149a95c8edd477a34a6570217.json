{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // @ts-ignore\n\nimport map from \"lodash/map\"; // Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport var configJSON = require(\"./config\");\n\nvar SingleOrdersController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(SingleOrdersController, _BlockComponent);\n\n  var _super = _createSuper(SingleOrdersController);\n\n  // Customizable Area Start\n  // Customizable Area End\n  function SingleOrdersController(props) {\n    var _this;\n\n    _classCallCheck(this, SingleOrdersController);\n\n    _this = _super.call(this, props);\n    _this.getOrdersCallId = \"\";\n    _this.cancelOrderCallId = \"\";\n    _this.writeReviewCallID = \"\";\n    _this.validationApiCallId = \"\";\n    _this.emailReg = void 0;\n    _this.labelTitle = \"\";\n\n    _this.toggleCancelModal = function () {\n      _this.setState({\n        ShowCOModal: !_this.state.ShowCOModal\n      });\n    };\n\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this));\n    _this.confirmCancelOrder = _this.confirmCancelOrder.bind(_assertThisInitialized(_this));\n    _this.openProductRatingModal = _this.openProductRatingModal.bind(_assertThisInitialized(_this));\n    _this.writeReview = _this.writeReview.bind(_assertThisInitialized(_this)); // Customizable Area Start\n\n    _this.subScribedMessages = [getName(MessageEnum.CountryCodeMessage), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.ReciveUserCredentials)];\n    _this.state = {\n      ShowCOModal: false,\n      ShowPRModal: false,\n      currentOrder: {},\n      activeTab: '1',\n      orders: [],\n      cancelOrder: {},\n      reviewProduct: {}\n    };\n    _this.emailReg = new RegExp(\"\");\n    _this.labelTitle = configJSON.labelTitle; // Customizable Area End\n\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(SingleOrdersController, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // this.callGetValidationApi();\n                this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n                this.getOrders(); // Customizable Area Start\n                // Customizable Area End\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // Customizable Area Start\n    // Customizable Area End\n\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var apiRequestCallId, responseJSON, errorMessage, _responseJSON$data, _responseJSON$data2;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Customizable Area Start\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (this.getOrdersCallId === apiRequestCallId) {\n                    this.setState({\n                      orders: responseJSON === null || responseJSON === void 0 ? void 0 : (_responseJSON$data = responseJSON.data) === null || _responseJSON$data === void 0 ? void 0 : _responseJSON$data.order\n                    });\n                  }\n\n                  if (this.cancelOrderCallId === apiRequestCallId) {\n                    if (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.errors) {\n                      map(responseJSON.errors, function (error) {\n                        map(error, function (value, key) {\n                          // @ts-ignore\n                          window.notify([{\n                            message: value || \"Something went wrong!!!\",\n                            type: \"danger\"\n                          }]);\n                        });\n                      });\n                    } else {\n                      // @ts-ignore\n                      window.notify([{\n                        message: (responseJSON === null || responseJSON === void 0 ? void 0 : (_responseJSON$data2 = responseJSON.data) === null || _responseJSON$data2 === void 0 ? void 0 : _responseJSON$data2.message) || \"Order cancelled successfully!!!\",\n                        type: \"success\"\n                      }]);\n                      this.props.getOrders();\n                    }\n                  }\n\n                  if (this.writeReviewCallID === apiRequestCallId) {\n                    if (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.errors) {\n                      map(responseJSON.errors, function (error) {\n                        map(error, function (value, key) {\n                          // @ts-ignore\n                          window.notify([{\n                            message: value || \"Something went wrong!!!\",\n                            type: \"danger\"\n                          }]);\n                        });\n                      });\n                    } else if (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.data) {\n                      // @ts-ignore\n                      window.notify([{\n                        message: \"Thank you for you review!!!\",\n                        type: \"success\"\n                      }]);\n                      this.props.getOrders();\n                      this.openProductRatingModal();\n                    }\n                  }\n                } // Customizable Area End\n\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"sendLoginFailMessage\",\n    value: function sendLoginFailMessage() {\n      var msg = new Message(getName(MessageEnum.LoginFaliureMessage));\n      this.send(msg);\n    }\n  }, {\n    key: \"getOrders\",\n    value: function getOrders() {\n      var token = localStorage.getItem(\"token\");\n      var header = {\n        token: token\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getOrdersCallId = requestMessage.messageId; // Set Method Type\n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod); // Set EndPoints\n\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getOrdersAPIEndPoint); // set Headers \n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header); // Send Request\n\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    }\n  }, {\n    key: \"routeToProfile\",\n    value: function routeToProfile(value) {\n      var matchTabName = '';\n\n      switch (value) {\n        case 'profile':\n          matchTabName = '1';\n          break;\n\n        case 'wishlist':\n          matchTabName = '2';\n          break;\n\n        case 'myorder':\n          matchTabName = '3';\n          break;\n\n        case 'saveaddresses':\n          matchTabName = '4';\n          break;\n\n        case 'connectaccount':\n          matchTabName = '5';\n          break;\n\n        default:\n          matchTabName = '1';\n          break;\n      } // @ts-ignore\n\n\n      this.setState({\n        activeTab: matchTabName\n      });\n    }\n  }, {\n    key: \"openProductRatingModal\",\n    value: function openProductRatingModal() {\n      // pRsettt(!ShowPRModal);\n      this.setState(function (prevState) {\n        return {\n          ShowPRModal: !prevState.ShowPRModal\n        };\n      });\n    }\n  }, {\n    key: \"setProductAndOpenPM\",\n    value: function setProductAndOpenPM(product) {\n      this.openProductRatingModal();\n      this.setState({\n        reviewProduct: product\n      });\n    }\n  }, {\n    key: \"openCancelOrderModal\",\n    value: function openCancelOrderModal(order, item) {\n      //  setCurrentOrder({ orderId: order?.id, itemId: item?.id });\n      //  settt(!ShowCOModal);\n      this.setState({\n        cancelOrder: {\n          order: order,\n          item: item\n        },\n        ShowCOModal: true\n      });\n    }\n  }, {\n    key: \"confirmCancelOrder\",\n    value: function confirmCancelOrder() {\n      var _this$state$cancelOrd = this.state.cancelOrder,\n          order = _this$state$cancelOrd.order,\n          item = _this$state$cancelOrd.item;\n      var token = localStorage.getItem(\"token\");\n      this.setState({\n        currentOrder: {\n          orderId: order === null || order === void 0 ? void 0 : order.id,\n          itemId: item === null || item === void 0 ? void 0 : item.id\n        },\n        ShowCOModal: !this.state.ShowCOModal\n      });\n      var header = {\n        token: token\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.cancelOrderCallId = requestMessage.messageId; // Set Method Type\n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPutMethod); // Set EndPoints\n\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), \"bx_block_order_management/orders/\".concat(order.id, \"/cancel_order\")); // set Headers \n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header); // Send Request\n\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    }\n  }, {\n    key: \"routeToOrderDetails\",\n    value: function routeToOrderDetails(order, item) {\n      this.props.history.push({\n        pathname: \"profile/myorder/\".concat(order.id, \"/\").concat(item.id),\n        state: {\n          order: order,\n          orderItem: item\n        }\n      });\n    }\n  }, {\n    key: \"writeReview\",\n    value: function writeReview(data) {\n      var _this$state, _this$state$reviewPro;\n\n      var comment = data.comment,\n          rating = data.rating;\n      var token = localStorage.getItem(\"token\");\n      var header = {\n        \"Content-Type\": \"application/json\",\n        token: token\n      };\n      var body = {\n        comment: comment,\n        rating: rating,\n        order_item_id: (_this$state = this.state) === null || _this$state === void 0 ? void 0 : (_this$state$reviewPro = _this$state.reviewProduct) === null || _this$state$reviewPro === void 0 ? void 0 : _this$state$reviewPro.id\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.writeReviewCallID = requestMessage.messageId; // Set Method Type\n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPostMethod); // Set EndPoints\n\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.writeReview); // set Headers \n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header); // set Body\n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(body)); // requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(requestBody));\n\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    }\n  }]);\n\n  return SingleOrdersController;\n}(BlockComponent);\n\nexport { SingleOrdersController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/profilebio/src/SingleOrdersController.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","map","configJSON","require","SingleOrdersController","props","getOrdersCallId","cancelOrderCallId","writeReviewCallID","validationApiCallId","emailReg","labelTitle","toggleCancelModal","setState","ShowCOModal","state","receive","bind","confirmCancelOrder","openProductRatingModal","writeReview","subScribedMessages","CountryCodeMessage","RestAPIResponceMessage","ReciveUserCredentials","ShowPRModal","currentOrder","activeTab","orders","cancelOrder","reviewProduct","RegExp","attachBuildingBlock","send","RequestUserCredentials","getOrders","from","message","id","apiRequestCallId","getData","RestAPIResponceDataMessage","responseJSON","RestAPIResponceSuccessMessage","errorMessage","RestAPIResponceErrorMessage","data","order","errors","error","value","key","window","notify","type","msg","LoginFaliureMessage","token","localStorage","getItem","header","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIRequestMethodMessage","apiGetMethod","RestAPIResponceEndPointMessage","getOrdersAPIEndPoint","RestAPIRequestHeaderMessage","sendMessage","matchTabName","prevState","product","item","orderId","itemId","apiPutMethod","history","push","pathname","orderItem","comment","rating","body","order_item_id","apiPostMethod","RestAPIRequestBodyMessage","JSON","stringify"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport axios from \"axios\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n// @ts-ignore\nimport map from \"lodash/map\";\n// Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  wishlist: any;\n  order: any;\n  history: any;\n  getOrders: any;\n  // cancelOrder: any;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  ShowCOModal: boolean;\n  ShowPRModal: boolean;\n  currentOrder: any;\n  activeTab: string;\n  orders: any;\n  cancelOrder: any;\n  reviewProduct: any;\n  // Customizable Area End\n}\n\ninterface SS {\n  // Customizable Area Start\n  id: any;\n  // Customizable Area End\n}\n\nexport default class SingleOrdersController extends BlockComponent<\n  Props,\n  S,\n  SS\n  > {\n\n  // Customizable Area Start\n  getOrdersCallId: string = \"\";\n  cancelOrderCallId: string = \"\";\n  writeReviewCallID: string = \"\";\n  validationApiCallId: string = \"\";\n  emailReg: RegExp;\n  labelTitle: string = \"\";\n  // Customizable Area End\n\n  constructor(props: Props) {\n\n    super(props);\n    this.receive = this.receive.bind(this);\n    this.confirmCancelOrder = this.confirmCancelOrder.bind(this);\n    this.openProductRatingModal = this.openProductRatingModal.bind(this);\n    this.writeReview = this.writeReview.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.CountryCodeMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.ReciveUserCredentials)\n    ]\n\n    this.state = {\n      ShowCOModal: false,\n      ShowPRModal: false,\n      currentOrder: {},\n      activeTab: '1',\n      orders: [],\n      cancelOrder: {},\n      reviewProduct: {}\n    };\n\n    this.emailReg = new RegExp(\"\");\n    this.labelTitle = configJSON.labelTitle;\n    // Customizable Area End\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n\n  async componentDidMount() {\n    // this.callGetValidationApi();\n    this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n    this.getOrders();\n    // Customizable Area Start\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n\n\n  // Customizable Area End\n\n  async receive(from: string, message: Message) {\n\n    // Customizable Area Start\n    if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n      const apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n      const responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      const errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n      if (this.getOrdersCallId === apiRequestCallId) {\n        this.setState({ orders: responseJSON?.data?.order });\n      }\n\n      if (this.cancelOrderCallId === apiRequestCallId) {\n\n        if (responseJSON?.errors) {\n          map(responseJSON.errors, (error: any) => {\n            map(error, (value: any, key: any) => {\n              // @ts-ignore\n              window.notify([{ message: value || \"Something went wrong!!!\", type: \"danger\" }]);    \n            })\n          })\n        } else {\n          // @ts-ignore\n          window.notify([{ message: responseJSON?.data?.message || \"Order cancelled successfully!!!\", type: \"success\" }]);\n          this.props.getOrders();\n        }\n      }\n\n      if (this.writeReviewCallID === apiRequestCallId) {\n        if(responseJSON?.errors) {\n          map(responseJSON.errors, (error: any) => {\n            map(error, (value: any, key: any) => {\n              // @ts-ignore\n              window.notify([{ message: value || \"Something went wrong!!!\", type: \"danger\"}])\n            })\n          })\n        } else if (responseJSON?.data) {\n          // @ts-ignore\n          window.notify([{message: \"Thank you for you review!!!\", type: \"success\"}])\n          this.props.getOrders();\n          this.openProductRatingModal();\n        }\n      }\n    }\n    // Customizable Area End\n  }\n\n  sendLoginFailMessage() {\n    const msg: Message = new Message(getName(MessageEnum.LoginFaliureMessage));\n    this.send(msg);\n  }\n\n  getOrders() {\n    const token = localStorage.getItem(\"token\");\n    const header = {\n        token\n    }\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.getOrdersCallId = requestMessage.messageId;\n    // Set Method Type\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod)\n    // Set EndPoints\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getOrdersAPIEndPoint);\n    // set Headers \n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header);\n\n    // Send Request\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  routeToProfile(value: string) {\n    let matchTabName = '';\n    switch (value) {\n      case 'profile':\n        matchTabName = '1';\n        break;\n      case 'wishlist':\n        matchTabName = '2';\n        break;\n      case 'myorder':\n        matchTabName = '3';\n        break;\n      case 'saveaddresses':\n        matchTabName = '4';\n        break;\n      case 'connectaccount':\n        matchTabName = '5';\n        break;\n      default:\n        matchTabName = '1';\n        break;\n    }\n    // @ts-ignore\n    this.setState({\n      activeTab: matchTabName\n    })\n  }\n\n  openProductRatingModal() {\n    // pRsettt(!ShowPRModal);\n    this.setState(prevState => ({\n      ShowPRModal: !prevState.ShowPRModal\n    }))\n\n  }\n\n  setProductAndOpenPM  (product: any) {\n    this.openProductRatingModal();\n    this.setState({ reviewProduct: product })\n  }\n\n  openCancelOrderModal(order: any, item: any) {\n    //  setCurrentOrder({ orderId: order?.id, itemId: item?.id });\n    //  settt(!ShowCOModal);\n    this.setState({\n      cancelOrder: { order, item },\n      ShowCOModal: true,\n    });\n  };\n\n  confirmCancelOrder() {\n    const { cancelOrder: { order, item } } = this.state;\n    const token = localStorage.getItem(\"token\");\n    this.setState({\n      currentOrder: { orderId: order?.id, itemId: item?.id },\n      ShowCOModal: !this.state.ShowCOModal\n    })\n    const header = {\n      token\n    }\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.cancelOrderCallId = requestMessage.messageId;\n    // Set Method Type\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPutMethod)\n    // Set EndPoints\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), `bx_block_order_management/orders/${order.id}/cancel_order`);\n    // set Headers \n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header);\n    // Send Request\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n    \n  }\n\n  toggleCancelModal = () => {\n    this.setState({ ShowCOModal: !this.state.ShowCOModal })\n  }\n\n  routeToOrderDetails(order: any, item: any) {\n    this.props.history.push({ pathname: `profile/myorder/${order.id}/${item.id}`, state: { order, orderItem: item } });\n  };\n\n  writeReview (data: any) {\n    const { comment, rating } = data;\n    const token = localStorage.getItem(\"token\");\n    const header = {\n      \"Content-Type\": \"application/json\",\n      token\n    }\n    const body = {\n      comment,\n      rating,\n      order_item_id: this.state?.reviewProduct?.id\n    }\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.writeReviewCallID = requestMessage.messageId;\n    // Set Method Type\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPostMethod)\n    // Set EndPoints\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.writeReview);\n    // set Headers \n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header);\n    // set Body\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(body));\n    // requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(requestBody));\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}