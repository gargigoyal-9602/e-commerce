{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // @ts-ignore\n\nimport map from \"lodash/map\"; // Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport var configJSON = require(\"./config\");\n\nvar SingleOrdersController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(SingleOrdersController, _BlockComponent);\n\n  var _super = _createSuper(SingleOrdersController);\n\n  // Customizable Area Start\n  // Customizable Area End\n  function SingleOrdersController(props) {\n    var _this;\n\n    _classCallCheck(this, SingleOrdersController);\n\n    _this = _super.call(this, props);\n    _this.getOrdersCallId = \"\";\n    _this.cancelOrderCallId = \"\";\n    _this.writeReviewCallID = \"\";\n    _this.validationApiCallId = \"\";\n    _this.emailReg = void 0;\n    _this.labelTitle = \"\";\n    _this.getAllNotificationsAPICallId = void 0;\n\n    _this.toggleCancelModal = function () {\n      _this.setState({\n        ShowCOModal: !_this.state.ShowCOModal\n      });\n    };\n\n    _this.getAllNotificationsList = function () {\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getAllNotificationsAPICallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getAllNotificationsAPIEndPoint);\n      var headers = {\n        'Content-Type': 'application/json',\n        token: localStorage.getItem('token')\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this));\n    _this.confirmCancelOrder = _this.confirmCancelOrder.bind(_assertThisInitialized(_this));\n    _this.openProductRatingModal = _this.openProductRatingModal.bind(_assertThisInitialized(_this));\n    _this.writeReview = _this.writeReview.bind(_assertThisInitialized(_this)); // Customizable Area Start\n\n    _this.subScribedMessages = [getName(MessageEnum.CountryCodeMessage), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.ReciveUserCredentials)];\n    _this.state = {\n      ShowCOModal: false,\n      ShowPRModal: false,\n      currentOrder: {},\n      activeTab: '1',\n      orders: [],\n      cancelOrder: {},\n      reviewProduct: {}\n    };\n    _this.emailReg = new RegExp(\"\");\n    _this.labelTitle = configJSON.labelTitle; // Customizable Area End\n\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(SingleOrdersController, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // this.callGetValidationApi();\n                this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n                this.getOrders(); // Customizable Area Start\n                // Customizable Area End\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // Customizable Area Start\n    // Customizable Area End\n\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(from, message) {\n        var apiRequestCallId, responseJSON, errorMessage, _responseJSON$data, _responseJSON$data2, _meta$pagination, notifications, data, meta, countNotify, _meta$pagination2;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Customizable Area Start\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (this.getOrdersCallId === apiRequestCallId) {\n                    this.setState({\n                      orders: responseJSON === null || responseJSON === void 0 ? void 0 : (_responseJSON$data = responseJSON.data) === null || _responseJSON$data === void 0 ? void 0 : _responseJSON$data.order\n                    });\n                  }\n\n                  if (this.cancelOrderCallId === apiRequestCallId) {\n                    if (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.errors) {\n                      map(responseJSON.errors, function (error) {\n                        map(error, function (value, key) {\n                          // @ts-ignore\n                          window.notify([{\n                            message: value || \"Something went wrong!!!\",\n                            type: \"danger\"\n                          }]);\n                        });\n                      });\n                    } else {\n                      // @ts-ignore\n                      window.notify([{\n                        message: (responseJSON === null || responseJSON === void 0 ? void 0 : (_responseJSON$data2 = responseJSON.data) === null || _responseJSON$data2 === void 0 ? void 0 : _responseJSON$data2.message) || \"Order cancelled successfully!!!\",\n                        type: \"success\"\n                      }]);\n                      this.props.getOrders();\n                    }\n                  }\n\n                  if (this.writeReviewCallID === apiRequestCallId) {\n                    if (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.errors) {\n                      map(responseJSON.errors, function (error) {\n                        map(error, function (value, key) {\n                          // @ts-ignore\n                          window.notify([{\n                            message: value || \"Something went wrong!!!\",\n                            type: \"danger\"\n                          }]);\n                        });\n                      });\n                    } else if (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.data) {\n                      // @ts-ignore\n                      window.notify([{\n                        message: \"Thank you for you review!!!\",\n                        type: \"success\"\n                      }]);\n                      this.props.getOrders();\n                      this.openProductRatingModal();\n                    }\n                  }\n\n                  if (apiRequestCallId === this.getAllNotificationsAPICallId) {\n                    if (responseJSON && responseJSON.data) {\n                      notifications = responseJSON.data.notifications;\n                      data = responseJSON.data, meta = responseJSON.meta;\n                      countNotify = localStorage.getItem('notifctaion_len');\n\n                      if (countNotify != (meta === null || meta === void 0 ? void 0 : (_meta$pagination = meta.pagination) === null || _meta$pagination === void 0 ? void 0 : _meta$pagination.total_count)) {\n                        //@ts-ignore\n                        localStorage.setItem('notifctaion_len', JSON.stringify(meta === null || meta === void 0 ? void 0 : (_meta$pagination2 = meta.pagination) === null || _meta$pagination2 === void 0 ? void 0 : _meta$pagination2.total_count));\n                      }\n                    }\n                  }\n                } // Customizable Area End\n\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }, {\n    key: \"sendLoginFailMessage\",\n    value: function sendLoginFailMessage() {\n      var msg = new Message(getName(MessageEnum.LoginFaliureMessage));\n      this.send(msg);\n    }\n  }, {\n    key: \"getOrders\",\n    value: function getOrders() {\n      var token = localStorage.getItem(\"token\");\n      var header = {\n        token: token\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getOrdersCallId = requestMessage.messageId; // Set Method Type\n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod); // Set EndPoints\n\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getOrdersAPIEndPoint); // set Headers \n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header); // Send Request\n\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    }\n  }, {\n    key: \"routeToProfile\",\n    value: function routeToProfile(value) {\n      var matchTabName = '';\n\n      switch (value) {\n        case 'profile':\n          matchTabName = '1';\n          break;\n\n        case 'wishlist':\n          matchTabName = '2';\n          break;\n\n        case 'myorder':\n          matchTabName = '3';\n          break;\n\n        case 'saveaddresses':\n          matchTabName = '4';\n          break;\n\n        case 'connectaccount':\n          matchTabName = '5';\n          break;\n\n        default:\n          matchTabName = '1';\n          break;\n      } // @ts-ignore\n\n\n      this.setState({\n        activeTab: matchTabName\n      });\n    }\n  }, {\n    key: \"openProductRatingModal\",\n    value: function openProductRatingModal() {\n      // pRsettt(!ShowPRModal);\n      this.setState(function (prevState) {\n        return {\n          ShowPRModal: !prevState.ShowPRModal\n        };\n      });\n    }\n  }, {\n    key: \"setProductAndOpenPM\",\n    value: function setProductAndOpenPM(product) {\n      this.openProductRatingModal();\n      this.setState({\n        reviewProduct: product\n      });\n    }\n  }, {\n    key: \"openCancelOrderModal\",\n    value: function openCancelOrderModal(order, item) {\n      //  setCurrentOrder({ orderId: order?.id, itemId: item?.id });\n      //  settt(!ShowCOModal);\n      this.setState({\n        cancelOrder: {\n          order: order,\n          item: item\n        },\n        ShowCOModal: true\n      });\n    }\n  }, {\n    key: \"confirmCancelOrder\",\n    value: function confirmCancelOrder() {\n      var _this$state$cancelOrd = this.state.cancelOrder,\n          order = _this$state$cancelOrd.order,\n          item = _this$state$cancelOrd.item;\n      var token = localStorage.getItem(\"token\");\n      this.setState({\n        currentOrder: {\n          orderId: order === null || order === void 0 ? void 0 : order.id,\n          itemId: item === null || item === void 0 ? void 0 : item.id\n        },\n        ShowCOModal: !this.state.ShowCOModal\n      });\n      var header = {\n        token: token\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.cancelOrderCallId = requestMessage.messageId; // Set Method Type\n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPutMethod); // Set EndPoints\n\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), \"order_management/orders/\".concat(order.id, \"/cancel_order\")); // set Headers \n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header); // Send Request\n\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    }\n  }, {\n    key: \"routeToOrderDetails\",\n    value: function routeToOrderDetails(order, item) {\n      this.props.history.push({\n        pathname: \"profile/myorder/\".concat(order.id, \"/\").concat(item.id),\n        state: {\n          order: order,\n          orderItem: item\n        }\n      });\n    }\n  }, {\n    key: \"writeReview\",\n    value: function writeReview(data) {\n      var _this$state, _this$state$reviewPro;\n\n      var comment = data.comment,\n          rating = data.rating;\n      var token = localStorage.getItem(\"token\");\n      var header = {\n        \"Content-Type\": \"application/json\",\n        token: token\n      };\n      var body = {\n        comment: comment,\n        rating: rating,\n        order_item_id: (_this$state = this.state) === null || _this$state === void 0 ? void 0 : (_this$state$reviewPro = _this$state.reviewProduct) === null || _this$state$reviewPro === void 0 ? void 0 : _this$state$reviewPro.id\n      };\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.writeReviewCallID = requestMessage.messageId; // Set Method Type\n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPostMethod); // Set EndPoints\n\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.writeReview); // set Headers \n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header); // set Body\n\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(body)); // requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(requestBody));\n\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    } //Get All Notifications API\n\n  }]);\n\n  return SingleOrdersController;\n}(BlockComponent);\n\nexport { SingleOrdersController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/profilebio/src/SingleOrdersController.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","map","configJSON","require","SingleOrdersController","props","getOrdersCallId","cancelOrderCallId","writeReviewCallID","validationApiCallId","emailReg","labelTitle","getAllNotificationsAPICallId","toggleCancelModal","setState","ShowCOModal","state","getAllNotificationsList","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","getAllNotificationsAPIEndPoint","headers","token","localStorage","getItem","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","apiGetMethod","sendMessage","id","receive","bind","confirmCancelOrder","openProductRatingModal","writeReview","subScribedMessages","CountryCodeMessage","RestAPIResponceMessage","ReciveUserCredentials","ShowPRModal","currentOrder","activeTab","orders","cancelOrder","reviewProduct","RegExp","attachBuildingBlock","send","RequestUserCredentials","getOrders","from","message","apiRequestCallId","getData","RestAPIResponceDataMessage","responseJSON","RestAPIResponceSuccessMessage","errorMessage","RestAPIResponceErrorMessage","data","order","errors","error","value","key","window","notify","type","notifications","meta","countNotify","pagination","total_count","setItem","msg","LoginFaliureMessage","header","getOrdersAPIEndPoint","matchTabName","prevState","product","item","orderId","itemId","apiPutMethod","history","push","pathname","orderItem","comment","rating","body","order_item_id","apiPostMethod","RestAPIRequestBodyMessage"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport axios from \"axios\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n// @ts-ignore\nimport map from \"lodash/map\";\n// Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"../assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  wishlist: any;\n  order: any;\n  history: any;\n  getOrders: any;\n  // cancelOrder: any;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  ShowCOModal: boolean;\n  ShowPRModal: boolean;\n  currentOrder: any;\n  activeTab: string;\n  orders: any;\n  cancelOrder: any;\n  reviewProduct: any;\n  // Customizable Area End\n}\n\ninterface SS {\n  // Customizable Area Start\n  id: any;\n  // Customizable Area End\n}\n\nexport default class SingleOrdersController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n\n  // Customizable Area Start\n  getOrdersCallId: string = \"\";\n  cancelOrderCallId: string = \"\";\n  writeReviewCallID: string = \"\";\n  validationApiCallId: string = \"\";\n  emailReg: RegExp;\n  labelTitle: string = \"\";\n  getAllNotificationsAPICallId: string;\n  // Customizable Area End\n\n  constructor(props: Props) {\n\n    super(props);\n    this.receive = this.receive.bind(this);\n    this.confirmCancelOrder = this.confirmCancelOrder.bind(this);\n    this.openProductRatingModal = this.openProductRatingModal.bind(this);\n    this.writeReview = this.writeReview.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.CountryCodeMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.ReciveUserCredentials)\n    ]\n\n    this.state = {\n      ShowCOModal: false,\n      ShowPRModal: false,\n      currentOrder: {},\n      activeTab: '1',\n      orders: [],\n      cancelOrder: {},\n      reviewProduct: {}\n    };\n\n    this.emailReg = new RegExp(\"\");\n    this.labelTitle = configJSON.labelTitle;\n    // Customizable Area End\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n\n  async componentDidMount() {\n    // this.callGetValidationApi();\n    this.send(new Message(getName(MessageEnum.RequestUserCredentials)));\n    this.getOrders();\n    // Customizable Area Start\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n\n\n  // Customizable Area End\n\n  async receive(from: string, message: Message) {\n\n    // Customizable Area Start\n    if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n      const apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n      const responseJSON = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n      const errorMessage = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n      if (this.getOrdersCallId === apiRequestCallId) {\n        this.setState({ orders: responseJSON?.data?.order });\n      }\n\n      if (this.cancelOrderCallId === apiRequestCallId) {\n\n        if (responseJSON?.errors) {\n          map(responseJSON.errors, (error: any) => {\n            map(error, (value: any, key: any) => {\n              // @ts-ignore\n              window.notify([{ message: value || \"Something went wrong!!!\", type: \"danger\" }]);\n            })\n          })\n        } else {\n          // @ts-ignore\n          window.notify([{ message: responseJSON?.data?.message || \"Order cancelled successfully!!!\", type: \"success\" }]);\n          this.props.getOrders();\n        }\n      }\n\n      if (this.writeReviewCallID === apiRequestCallId) {\n        if (responseJSON?.errors) {\n          map(responseJSON.errors, (error: any) => {\n            map(error, (value: any, key: any) => {\n              // @ts-ignore\n              window.notify([{ message: value || \"Something went wrong!!!\", type: \"danger\" }])\n            })\n          })\n        } else if (responseJSON?.data) {\n          // @ts-ignore\n          window.notify([{ message: \"Thank you for you review!!!\", type: \"success\" }])\n          this.props.getOrders();\n          this.openProductRatingModal();\n        }\n      }\n      if (apiRequestCallId === this.getAllNotificationsAPICallId) {\n        if (responseJSON && responseJSON.data) {\n          const { notifications } = responseJSON.data;\n          const { data, meta } = responseJSON;\n          const countNotify = localStorage.getItem('notifctaion_len');\n          if (countNotify != meta?.pagination?.total_count) {\n            //@ts-ignore\n            localStorage.setItem('notifctaion_len', JSON.stringify(meta?.pagination?.total_count))\n          }\n        }\n      }\n    }\n    // Customizable Area End\n  }\n\n  sendLoginFailMessage() {\n    const msg: Message = new Message(getName(MessageEnum.LoginFaliureMessage));\n    this.send(msg);\n  }\n\n  getOrders() {\n    const token = localStorage.getItem(\"token\");\n    const header = {\n      token\n    }\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.getOrdersCallId = requestMessage.messageId;\n    // Set Method Type\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod)\n    // Set EndPoints\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getOrdersAPIEndPoint);\n    // set Headers \n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header);\n\n    // Send Request\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  routeToProfile(value: string) {\n    let matchTabName = '';\n    switch (value) {\n      case 'profile':\n        matchTabName = '1';\n        break;\n      case 'wishlist':\n        matchTabName = '2';\n        break;\n      case 'myorder':\n        matchTabName = '3';\n        break;\n      case 'saveaddresses':\n        matchTabName = '4';\n        break;\n      case 'connectaccount':\n        matchTabName = '5';\n        break;\n      default:\n        matchTabName = '1';\n        break;\n    }\n    // @ts-ignore\n    this.setState({\n      activeTab: matchTabName\n    })\n  }\n\n  openProductRatingModal() {\n    // pRsettt(!ShowPRModal);\n    this.setState(prevState => ({\n      ShowPRModal: !prevState.ShowPRModal\n    }))\n\n  }\n\n  setProductAndOpenPM(product: any) {\n    this.openProductRatingModal();\n    this.setState({ reviewProduct: product })\n  }\n\n  openCancelOrderModal(order: any, item: any) {\n    //  setCurrentOrder({ orderId: order?.id, itemId: item?.id });\n    //  settt(!ShowCOModal);\n    this.setState({\n      cancelOrder: { order, item },\n      ShowCOModal: true,\n    });\n  };\n\n  confirmCancelOrder() {\n    const { cancelOrder: { order, item } } = this.state;\n    const token = localStorage.getItem(\"token\");\n    this.setState({\n      currentOrder: { orderId: order?.id, itemId: item?.id },\n      ShowCOModal: !this.state.ShowCOModal\n    })\n    const header = {\n      token\n    }\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.cancelOrderCallId = requestMessage.messageId;\n    // Set Method Type\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPutMethod)\n    // Set EndPoints\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), `order_management/orders/${order.id}/cancel_order`);\n    // set Headers \n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header);\n    // Send Request\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n  }\n\n  toggleCancelModal = () => {\n    this.setState({ ShowCOModal: !this.state.ShowCOModal })\n  }\n\n  routeToOrderDetails(order: any, item: any) {\n    this.props.history.push({ pathname: `profile/myorder/${order.id}/${item.id}`, state: { order, orderItem: item } });\n  };\n\n  writeReview(data: any) {\n    const { comment, rating } = data;\n    const token = localStorage.getItem(\"token\");\n    const header = {\n      \"Content-Type\": \"application/json\",\n      token\n    }\n    const body = {\n      comment,\n      rating,\n      order_item_id: this.state?.reviewProduct?.id\n    }\n\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.writeReviewCallID = requestMessage.messageId;\n    // Set Method Type\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPostMethod)\n    // Set EndPoints\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.writeReview);\n    // set Headers \n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), header);\n    // set Body\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(body));\n    // requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(requestBody));\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n  }\n  //Get All Notifications API\n  getAllNotificationsList = () => {\n    const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n    this.getAllNotificationsAPICallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getAllNotificationsAPIEndPoint);\n    const headers = {\n      'Content-Type': 'application/json',\n      token: localStorage.getItem('token'),\n    };\n\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}