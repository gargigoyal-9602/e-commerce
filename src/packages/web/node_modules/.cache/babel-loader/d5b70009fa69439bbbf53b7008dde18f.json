{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n//@ts-nocheck;\nimport 'react-router-dom';\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nexport var configJSON = require('./config');\n;\n;\n\nvar ConnnectedAccountsController = /*#__PURE__*/function (_BlockComponent) {\n  _inherits(ConnnectedAccountsController, _BlockComponent);\n\n  var _super = _createSuper(ConnnectedAccountsController);\n\n  function ConnnectedAccountsController(props) {\n    var _this;\n\n    _classCallCheck(this, ConnnectedAccountsController);\n\n    _this = _super.call(this, props);\n    _this.getAllSocialAccountlistAPiCallId = void 0;\n    _this.deActivateSocialAccountAPiCallId = void 0;\n    _this.conncetToSocialAccountAPiCallId = void 0;\n\n    _this.getAllSocialAccountsList = function () {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        loading: true\n      }));\n\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.getAllSocialAccountlistAPiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getAllSocialAccountsApiEndPoint);\n      var token = localStorage.getItem(\"token\");\n      var headers = {\n        'Content-Type': 'application/json',\n        token: token\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.activateSocialAccount = function (data, socialMediaName) {\n      var token = localStorage.getItem(\"token\");\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.conncetToSocialAccountAPiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.postActivateSocialAccountsAPIEndPoint);\n      var headers = {\n        'Content-Type': 'application/json',\n        token: token\n      };\n      var requestBody = {\n        \"data\": {\n          \"attributes\": {\n            \"display_name\": data && data.user && data.user.displayName,\n            \"provider\": socialMediaName,\n            \"unique_auth_id\": data && data.user && data.user.uid,\n            \"account_id\": _this.state.userData && _this.state.userData.id\n          }\n        }\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(requestBody));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPostMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.deActivateSocialAccount = function () {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        loading: true\n      }));\n\n      var requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      _this.deActivateSocialAccountAPiCallId = requestMessage.messageId;\n      var id = _this.state.modalId && _this.state.modalId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.deleteActivateSocialAccountAPiEndPoint + '/' + id);\n      var headers = {\n        'Content-Type': 'application/json',\n        'token': _this.state.userToken && _this.state.userToken\n      };\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiDeleteMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    _this.state = {// isFacebookConnceted: true\n    };\n    _this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.AccoutLoginSuccess), getName(MessageEnum.AlertMessage)];\n    _this.receive = _this.receive.bind(_assertThisInitialized(_this));\n    runEngine.attachBuildingBlock(_assertThisInitialized(_this), _this.subScribedMessages);\n    return _this;\n  }\n\n  _createClass(ConnnectedAccountsController, [{\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(from, message) {\n        var apiRequestCallId, responseJson, errorReponse, socialDetails, googleActive, googlenmae, facebookactive, fbName, gId, fbid, _ref, account_id, display_name, provider, uid, title, AlertBodyMessage;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                runEngine.debugLog('Message Received', message);\n\n                if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n                  apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n                  responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n                  errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                  if (apiRequestCallId === this.getAllSocialAccountlistAPiCallId) {\n                    if (responseJson && responseJson.data && responseJson.data.social_accounts && responseJson.data.social_accounts.data.length > 0) {\n                      socialDetails = responseJson.data.social_accounts.data;\n                      googleActive = false, googlenmae = '', facebookactive = false, fbName = '', gId = '', fbid = '';\n                      socialDetails.map(function (ele, index) {\n                        if (ele.attributes.provider == 'google') {\n                          googleActive = true;\n                          googlenmae = ele.attributes.display_name;\n                          gId = ele.id;\n                        }\n\n                        if (ele.attributes.provider == 'facebook') {\n                          facebookactive = true;\n                          fbName = ele.attributes.display_name;\n                          fbid = ele.id;\n                        }\n                      });\n                      this.setState({\n                        userProfileDetails: responseJson.data.account && responseJson.data.account.data,\n                        isFacebookConnceted: facebookactive,\n                        isGoogleCoonected: googleActive,\n                        facebookUserName: fbName,\n                        googleUserName: googlenmae,\n                        googleId: gId,\n                        fbId: fbid,\n                        loading: false // socialAccountDataList: responseJson.data.social_accounts.data && responseJson.data.social_accounts.data\n\n                      });\n                      console.log(\"thi.state,\", this.state);\n                    }\n\n                    if (responseJson && responseJson.data && responseJson.data.social_accounts && responseJson.data.social_accounts.data.length == 0) {\n                      this.setState({\n                        userProfileDetails: responseJson.data.account && responseJson.data.account.data,\n                        isFacebookConnceted: false,\n                        isGoogleCoonected: false,\n                        facebookUserName: '',\n                        googleUserName: '',\n                        googleId: '',\n                        fbId: '',\n                        loading: false\n                      });\n                      console.log(\"thi.state,\", this.state);\n                    } else {\n                      this.parseApiErrorResponse(responseJson);\n                    }\n                  } else if (apiRequestCallId === this.conncetToSocialAccountAPiCallId) {\n                    if (responseJson && responseJson.data && responseJson.data.account && responseJson.data.social_account) {\n                      _ref = responseJson.data.social_account && responseJson.data.social_account.data && responseJson.data.social_account.data.attributes, account_id = _ref.account_id, display_name = _ref.display_name, provider = _ref.provider, uid = _ref.uid;\n                      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                        socialAccountResult: responseJson\n                      })); //@ts-ignore\n\n                      window.notify([{\n                        type: 'success',\n                        message: \"Successfully Connected to \".concat(provider)\n                      }]);\n                      this.getAllSocialAccountsList();\n                    }\n\n                    if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n                      //@ts-ignore\n                      window.notify([{\n                        type: 'danger',\n                        message: responseJson.errors[0].social_auth\n                      }]);\n                    }\n                  } else if (apiRequestCallId === this.deActivateSocialAccountAPiCallId) {\n                    if (responseJson && responseJson.data && responseJson.data.message) {\n                      this.setState({\n                        modalId: '',\n                        modalContent: '',\n                        modalTitle: '',\n                        isModalOpen: false,\n                        loading: false // showAlert: true,\n                        // alertType: responseJson.data.message == \"Social account disconnected successfully\" ? 'success' : '',\n                        // alertMessage: responseJson.data.message\n\n                      });\n                      console.log(\"iam here\");\n                      this.getAllSocialAccountsList(); // @ts-ignore\n\n                      window.notify([{\n                        message: responseJson.data.message || \"Something went wrong!!!\",\n                        type: \"success\"\n                      }]);\n                    }\n\n                    if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n                      // @ts-ignore\n                      window.notify([{\n                        message: responseJson.errors[0].social_auth || \"Something went wrong!!!\",\n                        type: \"warning\"\n                      }]);\n                    }\n                  }\n                } else if (getName(MessageEnum.AlertMessage) === message.id) {\n                  title = message.getData(getName(MessageEnum.AlertTitleMessage));\n                  AlertBodyMessage = message.getData(getName(MessageEnum.AlertBodyMessage));\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function receive(_x, _x2) {\n        return _receive.apply(this, arguments);\n      }\n\n      return receive;\n    }()\n  }]);\n\n  return ConnnectedAccountsController;\n}(BlockComponent);\n\nexport { ConnnectedAccountsController as default };","map":{"version":3,"sources":["/home/lp-greenapex/Desktop/new_BB_BLOCK/freemium87482-350702-react-native/src/packages/blocks/profilebio/src/ConnectedAccountsController.web.tsx"],"names":["Message","BlockComponent","runEngine","MessageEnum","getName","configJSON","require","ConnnectedAccountsController","props","getAllSocialAccountlistAPiCallId","deActivateSocialAccountAPiCallId","conncetToSocialAccountAPiCallId","getAllSocialAccountsList","setState","state","loading","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","getAllSocialAccountsApiEndPoint","token","localStorage","getItem","headers","RestAPIRequestHeaderMessage","RestAPIRequestMethodMessage","apiGetMethod","sendMessage","id","activateSocialAccount","data","socialMediaName","postActivateSocialAccountsAPIEndPoint","requestBody","user","displayName","uid","userData","RestAPIRequestBodyMessage","JSON","stringify","apiPostMethod","deActivateSocialAccount","modalId","deleteActivateSocialAccountAPiEndPoint","userToken","apiDeleteMethod","subScribedMessages","RestAPIResponceMessage","AccoutLoginSuccess","AlertMessage","receive","bind","attachBuildingBlock","from","message","debugLog","apiRequestCallId","getData","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","errorReponse","RestAPIResponceErrorMessage","social_accounts","length","socialDetails","googleActive","googlenmae","facebookactive","fbName","gId","fbid","map","ele","index","attributes","provider","display_name","userProfileDetails","account","isFacebookConnceted","isGoogleCoonected","facebookUserName","googleUserName","googleId","fbId","console","log","parseApiErrorResponse","social_account","account_id","socialAccountResult","window","notify","type","errors","social_auth","modalContent","modalTitle","isModalOpen","title","AlertTitleMessage","AlertBodyMessage"],"mappings":"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","sourcesContent":["//@ts-nocheck;\nimport React from 'react';\nimport { } from 'react-router-dom';\nimport { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport Address from './Address.web';\nimport { resultsAriaMessage } from 'react-select/src/accessibility';\nexport const configJSON = require('./config');\n\nexport interface Props {\n\n    // Customizable Area Start\n    // Customizable Area End\n};\n\ninterface S {\n    isFacebookConnceted?: boolean;\n    isGoogleCoonected?: boolean;\n    googleUserName?: any;\n    facebookUserName?: any;\n    googleId?: any;\n    fbId?: any;\n\n    //get user & social data\n    userProfileDetails?: any;\n\n    //modal data\n    isModalOpen?: boolean;\n    modalTitle?: any;\n    modalContent?: any;\n    modalId?: any;\n    modalSocialType?: string;\n\n    //localStorage user Data\n    userData?: any;\n    userToken?: any;\n\n    //social accounts suucess data\n    socialAccountResult?: any;\n    googleSocialAccountResult?: any;\n    facebookSocialAccountResult?: any;\n\n    //alert\n    showAlert?: boolean;\n    alertType?: string;\n    alertMessage?: string;\n\n    loading?: boolean;\n};\n\ninterface SS {\n    id: any;\n}\n\nexport default class ConnnectedAccountsController extends BlockComponent<Props, S, SS>{\n    getAllSocialAccountlistAPiCallId: string;\n    deActivateSocialAccountAPiCallId: string;\n    conncetToSocialAccountAPiCallId: string;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            // isFacebookConnceted: true\n        };\n        this.subScribedMessages = [\n            getName(MessageEnum.RestAPIResponceMessage),\n            getName(MessageEnum.AccoutLoginSuccess),\n            getName(MessageEnum.AlertMessage)\n        ];\n        this.receive = this.receive.bind(this);\n        runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n    };\n    async receive(from: String, message: Message) {\n        runEngine.debugLog('Message Received', message);\n        if (message.id === getName(MessageEnum.RestAPIResponceMessage)) {\n            const apiRequestCallId = message.getData(\n                getName(MessageEnum.RestAPIResponceDataMessage)\n            );\n\n            var responseJson = message.getData(\n                getName(MessageEnum.RestAPIResponceSuccessMessage)\n            );\n\n            var errorReponse = message.getData(\n                getName(MessageEnum.RestAPIResponceErrorMessage)\n            );\n            if (apiRequestCallId === this.getAllSocialAccountlistAPiCallId) {\n                if (responseJson && responseJson.data && responseJson.data.social_accounts && responseJson.data.social_accounts.data.length > 0) {\n                    let socialDetails = responseJson.data.social_accounts.data;\n                    let googleActive = false, googlenmae = '', facebookactive = false, fbName = '', gId = '', fbid = '';\n                    socialDetails.map((ele: any, index: number) => {\n                        if (ele.attributes.provider == 'google') {\n                            googleActive = true;\n                            googlenmae = ele.attributes.display_name;\n                            gId = ele.id\n                        }\n                        if (ele.attributes.provider == 'facebook') {\n                            facebookactive = true;\n                            fbName = ele.attributes.display_name;\n                            fbid = ele.id\n                        }\n                    });\n                    this.setState({\n                        userProfileDetails: responseJson.data.account && responseJson.data.account.data,\n                        isFacebookConnceted: facebookactive,\n                        isGoogleCoonected: googleActive,\n                        facebookUserName: fbName,\n                        googleUserName: googlenmae,\n                        googleId: gId,\n                        fbId: fbid,\n                        loading: false\n                        // socialAccountDataList: responseJson.data.social_accounts.data && responseJson.data.social_accounts.data\n                    });\n                    console.log(\"thi.state,\", this.state);\n                }\n                if (responseJson && responseJson.data && responseJson.data.social_accounts && responseJson.data.social_accounts.data.length == 0) {\n                    this.setState({\n                        userProfileDetails: responseJson.data.account && responseJson.data.account.data,\n                        isFacebookConnceted: false,\n                        isGoogleCoonected: false,\n                        facebookUserName: '',\n                        googleUserName: '',\n                        googleId: '',\n                        fbId: '',\n                        loading: false\n                    });\n                    console.log(\"thi.state,\", this.state);\n                }\n                else {\n                    this.parseApiErrorResponse(responseJson);\n                }\n            }\n            else if (apiRequestCallId === this.conncetToSocialAccountAPiCallId) {\n                if (responseJson && responseJson.data && responseJson.data.account && responseJson.data.social_account) {\n                    const {account_id,display_name,provider,uid} = responseJson.data.social_account && responseJson.data.social_account.data && responseJson.data.social_account.data.attributes;\n                    this.setState({\n                        ...this.state,\n                        socialAccountResult: responseJson\n                    });\n                    //@ts-ignore\n                    window.notify([{ type: 'success', message:`Successfully Connected to ${provider}` }])\n                    this.getAllSocialAccountsList();\n                }\n                if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n                    //@ts-ignore\n                    window.notify([{ type: 'danger', message: responseJson.errors[0].social_auth }])\n                }\n            }\n            else if (apiRequestCallId === this.deActivateSocialAccountAPiCallId) {\n                if (responseJson && responseJson.data && responseJson.data.message) {\n                    this.setState({\n                        modalId: '',\n                        modalContent: '',\n                        modalTitle: '',\n                        isModalOpen: false,\n                        loading: false\n                        // showAlert: true,\n                        // alertType: responseJson.data.message == \"Social account disconnected successfully\" ? 'success' : '',\n                        // alertMessage: responseJson.data.message\n                    });\n                    console.log(\"iam here\")\n                    this.getAllSocialAccountsList();\n\n                    // @ts-ignore\n                    window.notify([{ message: responseJson.data.message || \"Something went wrong!!!\", type: \"success\" }]);\n                }\n                if (responseJson && responseJson.errors && responseJson.errors.length > 0) {\n                    // @ts-ignore\n                    window.notify([{ message: responseJson.errors[0].social_auth || \"Something went wrong!!!\", type: \"warning\" }]);\n                }\n            }\n        }\n        else if (getName(MessageEnum.AlertMessage) === message.id) {\n            const title = message.getData(\n                getName(MessageEnum.AlertTitleMessage)\n            );\n            let AlertBodyMessage = message.getData(\n                getName(MessageEnum.AlertBodyMessage)\n            );\n        }\n    };\n    //get list connceted social accounts\n    getAllSocialAccountsList = () => {\n        this.setState({\n            ...this.state,\n            loading: true\n        });\n        const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n        this.getAllSocialAccountlistAPiCallId = requestMessage.messageId;\n        requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.getAllSocialAccountsApiEndPoint);\n        const token = localStorage.getItem(\"token\");\n\n        const headers = {\n            'Content-Type': 'application/json',\n            token\n        }\n\n        requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n        requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiGetMethod);\n\n        runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n    //connect to social account based on unique-auth-id and social media name\n    activateSocialAccount = (data: any, socialMediaName: string) => {\n        const token = localStorage.getItem(\"token\");\n        const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n\n        this.conncetToSocialAccountAPiCallId = requestMessage.messageId;\n        requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.postActivateSocialAccountsAPIEndPoint);\n        const headers = {\n            'Content-Type': 'application/json',\n            token\n        };\n        const requestBody =\n        {\n            \"data\": {\n                \"attributes\": {\n                    \"display_name\": data && data.user && data.user.displayName,\n                    \"provider\": socialMediaName,\n                    \"unique_auth_id\": data && data.user && data.user.uid,\n                    \"account_id\": this.state.userData && this.state.userData.id\n                }\n            }\n        };\n\n        requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n        requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(requestBody));\n        requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiPostMethod);\n\n        runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n    //deActivate to social account based on socialId\n    deActivateSocialAccount = () => {\n        this.setState({\n            ...this.state,\n            loading: true\n        });\n        const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n\n        this.deActivateSocialAccountAPiCallId = requestMessage.messageId;\n        let id = this.state.modalId && this.state.modalId;\n        requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.deleteActivateSocialAccountAPiEndPoint + '/' + id);\n\n        const headers = {\n            'Content-Type': 'application/json',\n            'token': this.state.userToken && this.state.userToken\n        };\n        requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), headers);\n        requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiDeleteMethod);\n\n        runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n}"]},"metadata":{},"sourceType":"module"}