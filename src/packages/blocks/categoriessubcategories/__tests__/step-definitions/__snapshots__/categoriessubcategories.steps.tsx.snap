// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`categoriessubcategories User adding a empty category 1`] = `
<SafeAreaView
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <FocusAwareStatusBar
    backgroundColor="#ffffff"
    barStyle="dark-content"
    isFocused={true}
  />
  <TopHeader
    headerLeftIconStyle={Object {}}
    headerRightIcons={
      Array [
        Object {
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/notificationsIcon.png",
          },
        },
        Object {
          "cartHasProductFlag": false,
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/cartBlack.png",
          },
        },
      ]
    }
    headerStyle={Object {}}
    headerTitle="Explore"
    headerTitleStyle={Object {}}
    navigation={
      Object {
        "addListener": [MockFunction] {
          "calls": Array [
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "navigate": [MockFunction],
      }
    }
  />
  <ScrollViewMock>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
          "marginHorizontal": 16,
          "padding": 20,
        }
      }
    >
      <FlatList
        data={Array []}
        disableVirtualization={false}
        extraData={
          Object {
            "activeModalType": "",
            "cartHasProduct": false,
            "categoriesArray": Array [],
            "category": "",
            "customErrorMessage": "",
            "customErrorModal": false,
            "dropdownCategoryStatus": false,
            "isFetching": false,
            "isVisible": false,
            "selectedCategoryID": Array [],
            "subCategory": "",
            "token": "",
          }
        }
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </View>
  </ScrollViewMock>
  <ApplicationLoader
    isFetching={false}
  />
  <CustomErrorModal
    hideErrorModal={[Function]}
    message=""
    showModal={false}
  />
</SafeAreaView>
`;

exports[`categoriessubcategories User can add a category 1`] = `
<SafeAreaView
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <FocusAwareStatusBar
    backgroundColor="#ffffff"
    barStyle="dark-content"
    isFocused={true}
  />
  <TopHeader
    headerLeftIconStyle={Object {}}
    headerRightIcons={
      Array [
        Object {
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/notificationsIcon.png",
          },
        },
        Object {
          "cartHasProductFlag": false,
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/cartBlack.png",
          },
        },
      ]
    }
    headerStyle={Object {}}
    headerTitle="Explore"
    headerTitleStyle={Object {}}
    navigation={
      Object {
        "addListener": [MockFunction] {
          "calls": Array [
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "navigate": [MockFunction],
      }
    }
  />
  <ScrollViewMock>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
          "marginHorizontal": 16,
          "padding": 20,
        }
      }
    >
      <FlatList
        data={Array []}
        disableVirtualization={false}
        extraData={
          Object {
            "activeModalType": "",
            "cartHasProduct": false,
            "categoriesArray": Array [],
            "category": "",
            "customErrorMessage": "",
            "customErrorModal": false,
            "dropdownCategoryStatus": false,
            "isFetching": false,
            "isVisible": false,
            "selectedCategoryID": Array [],
            "subCategory": "",
            "token": "",
          }
        }
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </View>
  </ScrollViewMock>
  <ApplicationLoader
    isFetching={false}
  />
  <CustomErrorModal
    hideErrorModal={[Function]}
    message=""
    showModal={false}
  />
</SafeAreaView>
`;

exports[`categoriessubcategories User can add a subcategory 1`] = `
<SafeAreaView
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <FocusAwareStatusBar
    backgroundColor="#ffffff"
    barStyle="dark-content"
    isFocused={true}
  />
  <TopHeader
    headerLeftIconStyle={Object {}}
    headerRightIcons={
      Array [
        Object {
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/notificationsIcon.png",
          },
        },
        Object {
          "cartHasProductFlag": false,
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/cartBlack.png",
          },
        },
      ]
    }
    headerStyle={Object {}}
    headerTitle="Explore"
    headerTitleStyle={Object {}}
    navigation={
      Object {
        "addListener": [MockFunction] {
          "calls": Array [
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "navigate": [MockFunction],
      }
    }
  />
  <ScrollViewMock>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
          "marginHorizontal": 16,
          "padding": 20,
        }
      }
    >
      <FlatList
        data={Array []}
        disableVirtualization={false}
        extraData={
          Object {
            "activeModalType": "",
            "cartHasProduct": false,
            "categoriesArray": Array [],
            "category": "",
            "customErrorMessage": "",
            "customErrorModal": false,
            "dropdownCategoryStatus": false,
            "isFetching": false,
            "isVisible": false,
            "selectedCategoryID": Array [],
            "subCategory": "",
            "token": "",
          }
        }
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </View>
  </ScrollViewMock>
  <ApplicationLoader
    isFetching={false}
  />
  <CustomErrorModal
    hideErrorModal={[Function]}
    message=""
    showModal={false}
  />
</SafeAreaView>
`;

exports[`categoriessubcategories User can delete any category 1`] = `
<SafeAreaView
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <FocusAwareStatusBar
    backgroundColor="#ffffff"
    barStyle="dark-content"
    isFocused={true}
  />
  <TopHeader
    headerLeftIconStyle={Object {}}
    headerRightIcons={
      Array [
        Object {
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/notificationsIcon.png",
          },
        },
        Object {
          "cartHasProductFlag": false,
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/cartBlack.png",
          },
        },
      ]
    }
    headerStyle={Object {}}
    headerTitle="Explore"
    headerTitleStyle={Object {}}
    navigation={
      Object {
        "addListener": [MockFunction] {
          "calls": Array [
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "navigate": [MockFunction],
      }
    }
  />
  <ScrollViewMock>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
          "marginHorizontal": 16,
          "padding": 20,
        }
      }
    >
      <FlatList
        data={Array []}
        disableVirtualization={false}
        extraData={
          Object {
            "activeModalType": "",
            "cartHasProduct": false,
            "categoriesArray": Array [],
            "category": "",
            "customErrorMessage": "",
            "customErrorModal": false,
            "dropdownCategoryStatus": false,
            "isFetching": false,
            "isVisible": false,
            "selectedCategoryID": Array [],
            "subCategory": "",
            "token": "",
          }
        }
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </View>
  </ScrollViewMock>
  <ApplicationLoader
    isFetching={false}
  />
  <CustomErrorModal
    hideErrorModal={[Function]}
    message=""
    showModal={false}
  />
</SafeAreaView>
`;

exports[`categoriessubcategories User can delete any subcategory 1`] = `
<SafeAreaView
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <FocusAwareStatusBar
    backgroundColor="#ffffff"
    barStyle="dark-content"
    isFocused={true}
  />
  <TopHeader
    headerLeftIconStyle={Object {}}
    headerRightIcons={
      Array [
        Object {
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/notificationsIcon.png",
          },
        },
        Object {
          "cartHasProductFlag": false,
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/cartBlack.png",
          },
        },
      ]
    }
    headerStyle={Object {}}
    headerTitle="Explore"
    headerTitleStyle={Object {}}
    navigation={
      Object {
        "addListener": [MockFunction] {
          "calls": Array [
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "navigate": [MockFunction],
      }
    }
  />
  <ScrollViewMock>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
          "marginHorizontal": 16,
          "padding": 20,
        }
      }
    >
      <FlatList
        data={Array []}
        disableVirtualization={false}
        extraData={
          Object {
            "activeModalType": "",
            "cartHasProduct": false,
            "categoriesArray": Array [],
            "category": "",
            "customErrorMessage": "",
            "customErrorModal": false,
            "dropdownCategoryStatus": false,
            "isFetching": false,
            "isVisible": false,
            "selectedCategoryID": Array [],
            "subCategory": "",
            "token": "",
          }
        }
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </View>
  </ScrollViewMock>
  <ApplicationLoader
    isFetching={false}
  />
  <CustomErrorModal
    hideErrorModal={[Function]}
    message=""
    showModal={false}
  />
</SafeAreaView>
`;

exports[`categoriessubcategories User navigates to categoriessubcategories 1`] = `
<SafeAreaView
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <FocusAwareStatusBar
    backgroundColor="#ffffff"
    barStyle="dark-content"
    isFocused={true}
  />
  <TopHeader
    headerLeftIconStyle={Object {}}
    headerRightIcons={
      Array [
        Object {
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/notificationsIcon.png",
          },
        },
        Object {
          "cartHasProductFlag": false,
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/cartBlack.png",
          },
        },
      ]
    }
    headerStyle={Object {}}
    headerTitle="Explore"
    headerTitleStyle={Object {}}
    navigation={
      Object {
        "addListener": [MockFunction] {
          "calls": Array [
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "navigate": [MockFunction],
      }
    }
  />
  <ScrollViewMock>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
          "marginHorizontal": 16,
          "padding": 20,
        }
      }
    >
      <FlatList
        data={Array []}
        disableVirtualization={false}
        extraData={
          Object {
            "activeModalType": "",
            "cartHasProduct": false,
            "categoriesArray": Array [],
            "category": "",
            "customErrorMessage": "",
            "customErrorModal": false,
            "dropdownCategoryStatus": false,
            "isFetching": false,
            "isVisible": false,
            "selectedCategoryID": Array [],
            "subCategory": "",
            "token": "",
          }
        }
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </View>
  </ScrollViewMock>
  <ApplicationLoader
    isFetching={false}
  />
  <CustomErrorModal
    hideErrorModal={[Function]}
    message=""
    showModal={false}
  />
</SafeAreaView>
`;

exports[`categoriessubcategories User navigates to categoriessubcategories 2`] = `
<SafeAreaView
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <FocusAwareStatusBar
    backgroundColor="#ffffff"
    barStyle="dark-content"
    isFocused={true}
  />
  <TopHeader
    headerLeftIconStyle={Object {}}
    headerRightIcons={
      Array [
        Object {
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/notificationsIcon.png",
          },
        },
        Object {
          "cartHasProductFlag": false,
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/cartBlack.png",
          },
        },
      ]
    }
    headerStyle={Object {}}
    headerTitle="Explore"
    headerTitleStyle={Object {}}
    navigation={
      Object {
        "addListener": [MockFunction] {
          "calls": Array [
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "navigate": [MockFunction],
      }
    }
  />
  <ScrollViewMock>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
          "marginHorizontal": 16,
          "padding": 20,
        }
      }
    >
      <FlatList
        data={
          Array [
            Object {
              "Check": false,
              "attributes": Object {
                "created_at": "2020-10-07T06:56:28.270Z",
                "id": 4,
                "name": "category_3",
                "sub_categories": Array [
                  Object {
                    "created_at": "2020-10-07T06:57:11.436Z",
                    "id": 4,
                    "name": "sub_category_1",
                    "updated_at": "2020-10-07T06:57:11.436Z",
                  },
                ],
                "updated_at": "2020-10-07T06:56:28.270Z",
              },
              "expand": false,
              "id": "4",
              "type": "category",
            },
          ]
        }
        disableVirtualization={false}
        extraData={
          Object {
            "activeModalType": "",
            "cartHasProduct": false,
            "categoriesArray": Array [
              Object {
                "Check": false,
                "attributes": Object {
                  "created_at": "2020-10-07T06:56:28.270Z",
                  "id": 4,
                  "name": "category_3",
                  "sub_categories": Array [
                    Object {
                      "created_at": "2020-10-07T06:57:11.436Z",
                      "id": 4,
                      "name": "sub_category_1",
                      "updated_at": "2020-10-07T06:57:11.436Z",
                    },
                  ],
                  "updated_at": "2020-10-07T06:56:28.270Z",
                },
                "expand": false,
                "id": "4",
                "type": "category",
              },
            ],
            "category": "",
            "customErrorMessage": "",
            "customErrorModal": false,
            "dropdownCategoryStatus": false,
            "isFetching": true,
            "isVisible": false,
            "selectedCategoryID": Array [],
            "subCategory": "",
            "token": undefined,
          }
        }
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </View>
  </ScrollViewMock>
  <ApplicationLoader
    isFetching={true}
  />
  <CustomErrorModal
    hideErrorModal={[Function]}
    message=""
    showModal={false}
  />
</SafeAreaView>
`;

exports[`categoriessubcategories User navigates to categoriessubcategories 3`] = `
<SafeAreaView
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <FocusAwareStatusBar
    backgroundColor="#ffffff"
    barStyle="dark-content"
    isFocused={true}
  />
  <TopHeader
    headerLeftIconStyle={Object {}}
    headerRightIcons={
      Array [
        Object {
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/notificationsIcon.png",
          },
        },
        Object {
          "cartHasProductFlag": false,
          "onPress": [Function],
          "src": Object {
            "testUri": "../../../packages/blocks/studio-store-ecommerce-theme/assets/Profile/cartBlack.png",
          },
        },
      ]
    }
    headerStyle={Object {}}
    headerTitle="Explore"
    headerTitleStyle={Object {}}
    navigation={
      Object {
        "addListener": [MockFunction] {
          "calls": Array [
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
            Array [
              "willFocus",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "navigate": [MockFunction],
      }
    }
  />
  <ScrollViewMock>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
          "marginHorizontal": 16,
          "padding": 20,
        }
      }
    >
      <FlatList
        data={
          Array [
            Object {
              "Check": false,
              "attributes": Object {
                "created_at": "2020-10-07T06:56:28.270Z",
                "id": 4,
                "name": "category_3",
                "sub_categories": Array [
                  Object {
                    "created_at": "2020-10-07T06:57:11.436Z",
                    "id": 4,
                    "name": "sub_category_1",
                    "updated_at": "2020-10-07T06:57:11.436Z",
                  },
                ],
                "updated_at": "2020-10-07T06:56:28.270Z",
              },
              "expand": false,
              "id": "4",
              "type": "category",
            },
          ]
        }
        disableVirtualization={false}
        extraData={
          Object {
            "activeModalType": "",
            "cartHasProduct": false,
            "categoriesArray": Array [
              Object {
                "Check": false,
                "attributes": Object {
                  "created_at": "2020-10-07T06:56:28.270Z",
                  "id": 4,
                  "name": "category_3",
                  "sub_categories": Array [
                    Object {
                      "created_at": "2020-10-07T06:57:11.436Z",
                      "id": 4,
                      "name": "sub_category_1",
                      "updated_at": "2020-10-07T06:57:11.436Z",
                    },
                  ],
                  "updated_at": "2020-10-07T06:56:28.270Z",
                },
                "expand": false,
                "id": "4",
                "type": "category",
              },
            ],
            "category": "",
            "customErrorMessage": "",
            "customErrorModal": false,
            "dropdownCategoryStatus": false,
            "isFetching": true,
            "isVisible": false,
            "selectedCategoryID": Array [],
            "subCategory": "",
            "token": undefined,
          }
        }
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </View>
  </ScrollViewMock>
  <ApplicationLoader
    isFetching={true}
  />
  <CustomErrorModal
    hideErrorModal={[Function]}
    message=""
    showModal={false}
  />
</SafeAreaView>
`;
